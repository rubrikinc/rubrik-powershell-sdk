name: Access Secrets from Rubrik Vault

on:
  workflow_dispatch:
    branches:
      - devel

jobs:
  fetch-secrets-and-build:

    runs-on: self-hosted
    labels:
      - internal-linux-runner

    steps:
    # Checkout the repository code
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Authenticate with Rubrik Vault
    - name: Authenticate with Rubrik Vault
      run: |
        # Set up environment variables or credentials needed for vault login
        export VAULT_ADDR="https://vault.rubrik-internal.com"
        vault login -method=github -token=${{ secrets.VAULT_GITHUB_TOKEN }}
      env:
        VAULT_GITHUB_TOKEN: ${{ secrets.VAULT_GITHUB_TOKEN }} # GitHub token for Vault authentication

    # Fetch secrets from Rubrik Vault
    - name: Fetch Secrets from Vault
      run: |
        # Fetch the service account JSON from the vault
        vault kv get -field=service_account_json secret/sdk/service_account > ${{ github.workspace }}/service_account.json
        # Fetch additional secrets if required
        vault kv get -field=another_secret_key secret/sdk/another_service
      env:
        VAULT_ADDR: "https://vault.rubrik-internal.com"

    # Verify secrets are retrieved
    - name: Verify Retrieved Secrets
      run: |
        if [ -s ${{ github.workspace }}/service_account.json ]; then
          echo "Service account secret retrieved successfully."
        else
          echo "Failed to retrieve service account secret." >&2
          exit 1
        fi

    # Install dependencies
    - name: Install Required Packages
      run: |
        sudo apt-get update
        sudo apt-get install -y wget apt-transport-https software-properties-common
      shell: bash

    # Install PowerShell
    - name: Install PowerShell
      run: |
        wget -q "https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb" -O packages-microsoft-prod.deb
        sudo dpkg -i packages-microsoft-prod.deb
        sudo apt-get update
        sudo apt-get install -y powershell
      shell: bash

    # Install .NET SDK
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'

    # Build the SDK
    - name: Build SDK
      run: pwsh -NoProfile -NonInteractive -File Utils/Build-RscSdk.ps1 -NoTests -CI

    # Test the SDK
    - name: Test SDK
      env:
        RSC_SERVICE_ACCOUNT_FILE: ${{ github.workspace }}/service_account.json
      run: pwsh -NoProfile -NonInteractive -File Utils/Test-RscSdk.ps1 -CI

    # Cleanup sensitive data
    - name: Cleanup Secrets
      run: rm -f ${{ github.workspace }}/service_account.json
      shell: bash

    # Archive build artifacts (Optional)
    - name: Archive Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: ./artifacts
