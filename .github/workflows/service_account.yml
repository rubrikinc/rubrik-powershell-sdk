name: Build and Test SDK with Service Account Parameter

on:
  workflow_dispatch:
    branches:
      - devel
    inputs:
      service_account_json:
        description: "Optional Service Account JSON File"
        required: false
        default: ""

jobs:
  build-and-test:

    runs-on: self-hosted
    labels:
      - internal-linux-runner

    steps:
    # Checkout the repository code
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Check for Provided Service Account JSON File
    - name: Check for Service Account JSON Input
      id: check-sa
      run: |
        if [ "${{ github.event.inputs.service_account_json }}" != "" ]; then
          echo "${{ github.event.inputs.service_account_json }}" > ${{ github.workspace }}/service_account.json
          echo "service_account_provided=true" >> $GITHUB_ENV
        else
          echo "No service account JSON provided. Tests will fail."
          echo "service_account_provided=false" >> $GITHUB_ENV

    # Install dependencies
    - name: Install Required Packages
      run: |
        sudo apt-get update
        sudo apt-get install -y wget apt-transport-https software-properties-common
      shell: bash

    # Install PowerShell
    - name: Install PowerShell
      run: |
        wget -q "https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb" -O packages-microsoft-prod.deb
        sudo dpkg -i packages-microsoft-prod.deb
        sudo apt-get update
        sudo apt-get install -y powershell
      shell: bash

    # Install .NET SDK
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'

    # Build the SDK
    - name: Build SDK
      run: pwsh -NoProfile -NonInteractive -File Utils/Build-RscSdk.ps1 -NoTests -CI

    # Run Tests (Fails Gracefully if Service Account is Missing)
    - name: Run Tests
      env:
        RSC_SERVICE_ACCOUNT_FILE: ${{ github.workspace }}/service_account.json
      run: |
        if [ "$service_account_provided" == "true" ]; then
          pwsh -NoProfile -NonInteractive -File Utils/Test-RscSdk.ps1 -CI
        else
          echo "No service account provided. Skipping tests and marking as failure."
          exit 1
        fi
      continue-on-error: true # Allow the workflow to continue even if tests fail

    # Archive Build Artifacts
    - name: Archive Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: ./artifacts

    # Mark Test Failure (If Applicable)
    - name: Mark Tests as Failed
      if: env.service_account_provided == 'false'
      run: |
        echo "Tests failed because no service account was provided."
        exit 1
      continue-on-error: true
