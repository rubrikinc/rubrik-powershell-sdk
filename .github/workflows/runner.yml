name: Build and Test SDK

on:
  # Trigger manually or through specific events
  workflow_dispatch:
    branches:
      - devel
    inputs:
      branch:
        description: "Branch to build and test"
        required: false
        default: "devel"

jobs:
  build-and-test:

    # Use an internal self-hosted runner instead of GitHub-managed runners
    runs-on: self-hosted
    # Add any required runner labels to match your internal runner setup
    labels:
      - internal-linux-runner

    steps:
    # Checkout the code from the repository
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Fetch full history for versioning or changelog generation

    # Ensure the PowerShell configuration directory exists
    - name: Create PowerShell Config Directory
      run: mkdir -p /home/runner/.config/powershell
      shell: bash

    # Create a service account file from a GitHub secret
    - name: Create Service Account File
      run: |
        echo '${{ secrets.RSC_SERVICE_ACCOUNT_JSON }}' > ${{ github.workspace }}/service_account.json
      shell: bash

    # Install dependencies for PowerShell
    - name: Install Required Packages
      run: |
        sudo apt-get update
        sudo apt-get install -y wget apt-transport-https software-properties-common
      shell: bash

    # Install PowerShell
    - name: Install PowerShell
      run: |
        # Download and install PowerShell package
        wget -q "https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb" -O packages-microsoft-prod.deb
        sudo dpkg -i packages-microsoft-prod.deb
        sudo apt-get update
        sudo apt-get install -y powershell
      shell: bash

    # Verify PowerShell installation
    - name: Verify PowerShell Installation
      run: pwsh -Command '$PSVersionTable'
      shell: bash

    # Install .NET SDK
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'

    # Install any required dependencies for the SDK
    - name: Install SDK Dependencies
      run: |
        # Install dependencies, e.g., modules or tools
        pwsh -Command 'Install-Module -Name Pester -Force -Scope CurrentUser'
      shell: bash

    # Build the SDK
    - name: Build SDK
      run: pwsh -NoProfile -NonInteractive -File Utils/Build-RscSdk.ps1 -NoTests -CI

    # Run SDK Unit Tests
    - name: Run Unit Tests
      env:
        RSC_SERVICE_ACCOUNT_FILE: ${{ github.workspace }}/service_account.json
      run: pwsh -NoProfile -NonInteractive -File Utils/Test-RscSdk.ps1 -CI

    # Perform Code Analysis (Optional, for advanced workflows)
    - name: Static Code Analysis
      run: |
        # Placeholder for tools like SonarQube or other linters
        echo "Static analysis step here"
      shell: bash

    # Cleanup temporary files
    - name: Cleanup Workspace
      run: rm -rf ${{ github.workspace }}/service_account.json
      shell: bash

    # Archive build artifacts (Optional)
    - name: Archive Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: ./artifacts # Ensure your build script outputs here
