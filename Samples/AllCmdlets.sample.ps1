# This file was generated for the RSC PowerShell SDK
param(
    [switch]$GetGqlRequest,
    [switch]$FieldCounts
)

. "${PSScriptRoot}\..\Utils\Import-RscModuleFromLocalOutputDir.ps1"
. "${PSScriptRoot}\SampleUtils.ps1"

if ($GetGqlRequest) {
    $gqlDir = "gql"

    # Check if the directory exists
    if (-Not (Test-Path -Path $gqlDir -PathType Container)) {
        # Create the directory if it doesn't exist
        New-Item -Path $gqlDir -ItemType Directory
    }

    # Change to the directory
    Set-Location -Path $gqlDir
}

$entries = @()

# A table to keep track of GraphQL fields we have seen
$gqlFieldsTable = @{}

# -------------------------------------------------------------------
# New-RscMutationAccount -Op CreateOrg
# -------------------------------------------------------------------

$query = New-RscMutationAccount -Op CreateOrg
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAccount.CreateOrg" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAccount.CreateOrg" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAccount.CreateOrg" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAccount -Operation CreateOrg
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAccount -Op CreateOrgSwitchSession
# -------------------------------------------------------------------

$query = New-RscMutationAccount -Op CreateOrgSwitchSession
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAccount.CreateOrgSwitchSession" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAccount.CreateOrgSwitchSession" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAccount.CreateOrgSwitchSession" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAccount -Operation CreateOrgSwitchSession
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAccount -Op CreateRole
# -------------------------------------------------------------------

$query = New-RscMutationAccount -Op CreateRole
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAccount.CreateRole" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAccount.CreateRole" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAccount.CreateRole" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAccount -Operation CreateRole
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAccount -Op CreateUser
# -------------------------------------------------------------------

$query = New-RscMutationAccount -Op CreateUser
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAccount.CreateUser" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAccount.CreateUser" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAccount.CreateUser" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAccount -Operation CreateUser
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAccount -Op CreateUserWithPassword
# -------------------------------------------------------------------

$query = New-RscMutationAccount -Op CreateUserWithPassword
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAccount.CreateUserWithPassword" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAccount.CreateUserWithPassword" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAccount.CreateUserWithPassword" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAccount -Operation CreateUserWithPassword
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAccount -Op DeleteOrg
# -------------------------------------------------------------------

$query = New-RscMutationAccount -Op DeleteOrg
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAccount.DeleteOrg" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAccount.DeleteOrg" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAccount.DeleteOrg" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAccount -Operation DeleteOrg
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAccount -Op DeleteRole
# -------------------------------------------------------------------

$query = New-RscMutationAccount -Op DeleteRole
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAccount.DeleteRole" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAccount.DeleteRole" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAccount.DeleteRole" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAccount -Operation DeleteRole
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAccount -Op DeleteTotpConfig
# -------------------------------------------------------------------

$query = New-RscMutationAccount -Op DeleteTotpConfig
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAccount.DeleteTotpConfig" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAccount.DeleteTotpConfig" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAccount.DeleteTotpConfig" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAccount -Operation DeleteTotpConfig
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAccount -Op DeleteTotpConfigs
# -------------------------------------------------------------------

$query = New-RscMutationAccount -Op DeleteTotpConfigs
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAccount.DeleteTotpConfigs" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAccount.DeleteTotpConfigs" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAccount.DeleteTotpConfigs" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAccount -Operation DeleteTotpConfigs
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAccount -Op DeleteUsers
# -------------------------------------------------------------------

$query = New-RscMutationAccount -Op DeleteUsers
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAccount.DeleteUsers" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAccount.DeleteUsers" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAccount.DeleteUsers" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAccount -Operation DeleteUsers
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAccount -Op GenerateTotpSecret
# -------------------------------------------------------------------

$query = New-RscMutationAccount -Op GenerateTotpSecret
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAccount.GenerateTotpSecret" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAccount.GenerateTotpSecret" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAccount.GenerateTotpSecret" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAccount -Operation GenerateTotpSecret
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAccount -Op MutateRole
# -------------------------------------------------------------------

$query = New-RscMutationAccount -Op MutateRole
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAccount.MutateRole" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAccount.MutateRole" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAccount.MutateRole" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAccount -Operation MutateRole
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAccount -Op UpdateOrg
# -------------------------------------------------------------------

$query = New-RscMutationAccount -Op UpdateOrg
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAccount.UpdateOrg" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAccount.UpdateOrg" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAccount.UpdateOrg" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAccount -Operation UpdateOrg
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAccount -Op UpdateRole
# -------------------------------------------------------------------

$query = New-RscMutationAccount -Op UpdateRole
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAccount.UpdateRole" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAccount.UpdateRole" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAccount.UpdateRole" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAccount -Operation UpdateRole
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationActiveDirectory -Op CreateLiveMount
# -------------------------------------------------------------------

$query = New-RscMutationActiveDirectory -Op CreateLiveMount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationActiveDirectory.CreateLiveMount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationActiveDirectory.CreateLiveMount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationActiveDirectory.CreateLiveMount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationActiveDirectory -Operation CreateLiveMount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationActiveDirectory -Op CreateUnmount
# -------------------------------------------------------------------

$query = New-RscMutationActiveDirectory -Op CreateUnmount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationActiveDirectory.CreateUnmount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationActiveDirectory.CreateUnmount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationActiveDirectory.CreateUnmount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationActiveDirectory -Operation CreateUnmount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationActiveDirectory -Op ModifyLiveMount
# -------------------------------------------------------------------

$query = New-RscMutationActiveDirectory -Op ModifyLiveMount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationActiveDirectory.ModifyLiveMount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationActiveDirectory.ModifyLiveMount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationActiveDirectory.ModifyLiveMount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationActiveDirectory -Operation ModifyLiveMount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationActiveDirectory -Op RestoreObjects
# -------------------------------------------------------------------

$query = New-RscMutationActiveDirectory -Op RestoreObjects
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationActiveDirectory.RestoreObjects" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationActiveDirectory.RestoreObjects" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationActiveDirectory.RestoreObjects" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationActiveDirectory -Operation RestoreObjects
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationActivitySeries -Op Cancel
# -------------------------------------------------------------------

$query = New-RscMutationActivitySeries -Op Cancel
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationActivitySeries.Cancel" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationActivitySeries.Cancel" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationActivitySeries.Cancel" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationActivitySeries -Operation Cancel
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationActivitySeries -Op DownloadUserCsv
# -------------------------------------------------------------------

$query = New-RscMutationActivitySeries -Op DownloadUserCsv
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationActivitySeries.DownloadUserCsv" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationActivitySeries.DownloadUserCsv" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationActivitySeries.DownloadUserCsv" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationActivitySeries -Operation DownloadUserCsv
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationActivitySeries -Op DownloadUserFileCsv
# -------------------------------------------------------------------

$query = New-RscMutationActivitySeries -Op DownloadUserFileCsv
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationActivitySeries.DownloadUserFileCsv" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationActivitySeries.DownloadUserFileCsv" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationActivitySeries.DownloadUserFileCsv" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationActivitySeries -Operation DownloadUserFileCsv
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationArchival -Op CreateGlacierReaderTarget
# -------------------------------------------------------------------

$query = New-RscMutationArchival -Op CreateGlacierReaderTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationArchival.CreateGlacierReaderTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationArchival.CreateGlacierReaderTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationArchival.CreateGlacierReaderTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationArchival -Operation CreateGlacierReaderTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationArchival -Op CreateManualTargetMapping
# -------------------------------------------------------------------

$query = New-RscMutationArchival -Op CreateManualTargetMapping
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationArchival.CreateManualTargetMapping" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationArchival.CreateManualTargetMapping" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationArchival.CreateManualTargetMapping" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationArchival -Operation CreateManualTargetMapping
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationArchival -Op CreateS3CompatibleReaderTarget
# -------------------------------------------------------------------

$query = New-RscMutationArchival -Op CreateS3CompatibleReaderTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationArchival.CreateS3CompatibleReaderTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationArchival.CreateS3CompatibleReaderTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationArchival.CreateS3CompatibleReaderTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationArchival -Operation CreateS3CompatibleReaderTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationArchival -Op CreateS3CompatibleTarget
# -------------------------------------------------------------------

$query = New-RscMutationArchival -Op CreateS3CompatibleTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationArchival.CreateS3CompatibleTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationArchival.CreateS3CompatibleTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationArchival.CreateS3CompatibleTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationArchival -Operation CreateS3CompatibleTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationArchival -Op DeleteTarget
# -------------------------------------------------------------------

$query = New-RscMutationArchival -Op DeleteTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationArchival.DeleteTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationArchival.DeleteTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationArchival.DeleteTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationArchival -Operation DeleteTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationArchival -Op DeleteTargetMapping
# -------------------------------------------------------------------

$query = New-RscMutationArchival -Op DeleteTargetMapping
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationArchival.DeleteTargetMapping" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationArchival.DeleteTargetMapping" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationArchival.DeleteTargetMapping" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationArchival -Operation DeleteTargetMapping
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationArchival -Op DisableTarget
# -------------------------------------------------------------------

$query = New-RscMutationArchival -Op DisableTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationArchival.DisableTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationArchival.DisableTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationArchival.DisableTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationArchival -Operation DisableTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationArchival -Op EnableTarget
# -------------------------------------------------------------------

$query = New-RscMutationArchival -Op EnableTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationArchival.EnableTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationArchival.EnableTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationArchival.EnableTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationArchival -Operation EnableTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationArchival -Op PauseTarget
# -------------------------------------------------------------------

$query = New-RscMutationArchival -Op PauseTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationArchival.PauseTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationArchival.PauseTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationArchival.PauseTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationArchival -Operation PauseTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationArchival -Op PromoteReaderTarget
# -------------------------------------------------------------------

$query = New-RscMutationArchival -Op PromoteReaderTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationArchival.PromoteReaderTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationArchival.PromoteReaderTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationArchival.PromoteReaderTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationArchival -Operation PromoteReaderTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationArchival -Op RefreshReaderTarget
# -------------------------------------------------------------------

$query = New-RscMutationArchival -Op RefreshReaderTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationArchival.RefreshReaderTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationArchival.RefreshReaderTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationArchival.RefreshReaderTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationArchival -Operation RefreshReaderTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationArchival -Op ResumeTarget
# -------------------------------------------------------------------

$query = New-RscMutationArchival -Op ResumeTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationArchival.ResumeTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationArchival.ResumeTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationArchival.ResumeTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationArchival -Operation ResumeTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationArchival -Op UpdateGlacierTarget
# -------------------------------------------------------------------

$query = New-RscMutationArchival -Op UpdateGlacierTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationArchival.UpdateGlacierTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationArchival.UpdateGlacierTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationArchival.UpdateGlacierTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationArchival -Operation UpdateGlacierTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationArchival -Op UpdateManualTargetMapping
# -------------------------------------------------------------------

$query = New-RscMutationArchival -Op UpdateManualTargetMapping
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationArchival.UpdateManualTargetMapping" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationArchival.UpdateManualTargetMapping" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationArchival.UpdateManualTargetMapping" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationArchival -Operation UpdateManualTargetMapping
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationArchival -Op UpdateS3CompatibleTarget
# -------------------------------------------------------------------

$query = New-RscMutationArchival -Op UpdateS3CompatibleTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationArchival.UpdateS3CompatibleTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationArchival.UpdateS3CompatibleTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationArchival.UpdateS3CompatibleTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationArchival -Operation UpdateS3CompatibleTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationArchival -Op UpgradeCdmManagedTarget
# -------------------------------------------------------------------

$query = New-RscMutationArchival -Op UpgradeCdmManagedTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationArchival.UpgradeCdmManagedTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationArchival.UpgradeCdmManagedTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationArchival.UpgradeCdmManagedTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationArchival -Operation UpgradeCdmManagedTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationAws -Op AddAuthenticationServerBasedCloudAccount
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op AddAuthenticationServerBasedCloudAccount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.AddAuthenticationServerBasedCloudAccount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.AddAuthenticationServerBasedCloudAccount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.AddAuthenticationServerBasedCloudAccount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation AddAuthenticationServerBasedCloudAccount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op AddIamUserBasedCloudAccount
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op AddIamUserBasedCloudAccount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.AddIamUserBasedCloudAccount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.AddIamUserBasedCloudAccount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.AddIamUserBasedCloudAccount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation AddIamUserBasedCloudAccount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op BulkDeleteCloudAccountWithoutCft
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op BulkDeleteCloudAccountWithoutCft
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.BulkDeleteCloudAccountWithoutCft" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.BulkDeleteCloudAccountWithoutCft" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.BulkDeleteCloudAccountWithoutCft" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation BulkDeleteCloudAccountWithoutCft
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op CreateAccount
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op CreateAccount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.CreateAccount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.CreateAccount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.CreateAccount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation CreateAccount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op CreateAutomaticTargetMapping
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op CreateAutomaticTargetMapping
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.CreateAutomaticTargetMapping" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.CreateAutomaticTargetMapping" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.CreateAutomaticTargetMapping" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation CreateAutomaticTargetMapping
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op CreateCloudNativeStorageSetting
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op CreateCloudNativeStorageSetting
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.CreateCloudNativeStorageSetting" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.CreateCloudNativeStorageSetting" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.CreateCloudNativeStorageSetting" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation CreateCloudNativeStorageSetting
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op CreateCluster
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op CreateCluster
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.CreateCluster" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.CreateCluster" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.CreateCluster" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation CreateCluster
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op CreateComputeSetting
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op CreateComputeSetting
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.CreateComputeSetting" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.CreateComputeSetting" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.CreateComputeSetting" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation CreateComputeSetting
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op CreateExocomputeConfigs
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op CreateExocomputeConfigs
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.CreateExocomputeConfigs" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.CreateExocomputeConfigs" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.CreateExocomputeConfigs" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation CreateExocomputeConfigs
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op CreateReaderTarget
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op CreateReaderTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.CreateReaderTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.CreateReaderTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.CreateReaderTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation CreateReaderTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op CreateTarget
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op CreateTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.CreateTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.CreateTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.CreateTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation CreateTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op DeleteComputeSetting
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op DeleteComputeSetting
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.DeleteComputeSetting" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.DeleteComputeSetting" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.DeleteComputeSetting" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation DeleteComputeSetting
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op DeleteExocomputeConfigs
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op DeleteExocomputeConfigs
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.DeleteExocomputeConfigs" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.DeleteExocomputeConfigs" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.DeleteExocomputeConfigs" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation DeleteExocomputeConfigs
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op DisconnectExocomputeCluster
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op DisconnectExocomputeCluster
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.DisconnectExocomputeCluster" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.DisconnectExocomputeCluster" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.DisconnectExocomputeCluster" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation DisconnectExocomputeCluster
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op ExocomputeClusterConnect
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op ExocomputeClusterConnect
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.ExocomputeClusterConnect" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.ExocomputeClusterConnect" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.ExocomputeClusterConnect" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation ExocomputeClusterConnect
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op FinalizeCloudAccountDeletion
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op FinalizeCloudAccountDeletion
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.FinalizeCloudAccountDeletion" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.FinalizeCloudAccountDeletion" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.FinalizeCloudAccountDeletion" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation FinalizeCloudAccountDeletion
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op FinalizeCloudAccountProtection
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op FinalizeCloudAccountProtection
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.FinalizeCloudAccountProtection" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.FinalizeCloudAccountProtection" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.FinalizeCloudAccountProtection" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation FinalizeCloudAccountProtection
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op PatchAuthenticationServerBasedCloudAccount
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op PatchAuthenticationServerBasedCloudAccount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.PatchAuthenticationServerBasedCloudAccount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.PatchAuthenticationServerBasedCloudAccount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.PatchAuthenticationServerBasedCloudAccount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation PatchAuthenticationServerBasedCloudAccount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op PatchIamUserBasedCloudAccount
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op PatchIamUserBasedCloudAccount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.PatchIamUserBasedCloudAccount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.PatchIamUserBasedCloudAccount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.PatchIamUserBasedCloudAccount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation PatchIamUserBasedCloudAccount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op PrepareCloudAccountDeletion
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op PrepareCloudAccountDeletion
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.PrepareCloudAccountDeletion" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.PrepareCloudAccountDeletion" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.PrepareCloudAccountDeletion" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation PrepareCloudAccountDeletion
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op PrepareFeatureUpdateForCloudAccount
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op PrepareFeatureUpdateForCloudAccount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.PrepareFeatureUpdateForCloudAccount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.PrepareFeatureUpdateForCloudAccount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.PrepareFeatureUpdateForCloudAccount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation PrepareFeatureUpdateForCloudAccount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op RegisterFeatureArtifacts
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op RegisterFeatureArtifacts
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.RegisterFeatureArtifacts" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.RegisterFeatureArtifacts" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.RegisterFeatureArtifacts" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation RegisterFeatureArtifacts
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op StartExocomputeDisableJob
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op StartExocomputeDisableJob
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.StartExocomputeDisableJob" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.StartExocomputeDisableJob" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.StartExocomputeDisableJob" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation StartExocomputeDisableJob
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op UpdateAccount
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op UpdateAccount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.UpdateAccount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.UpdateAccount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.UpdateAccount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation UpdateAccount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op UpdateAutomaticTargetMapping
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op UpdateAutomaticTargetMapping
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.UpdateAutomaticTargetMapping" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.UpdateAutomaticTargetMapping" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.UpdateAutomaticTargetMapping" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation UpdateAutomaticTargetMapping
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op UpdateCloudAccount
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op UpdateCloudAccount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.UpdateCloudAccount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.UpdateCloudAccount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.UpdateCloudAccount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation UpdateCloudAccount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op UpdateCloudAccountFeature
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op UpdateCloudAccountFeature
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.UpdateCloudAccountFeature" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.UpdateCloudAccountFeature" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.UpdateCloudAccountFeature" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation UpdateCloudAccountFeature
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op UpdateCloudNativeStorageSetting
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op UpdateCloudNativeStorageSetting
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.UpdateCloudNativeStorageSetting" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.UpdateCloudNativeStorageSetting" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.UpdateCloudNativeStorageSetting" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation UpdateCloudNativeStorageSetting
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op UpdateComputeSetting
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op UpdateComputeSetting
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.UpdateComputeSetting" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.UpdateComputeSetting" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.UpdateComputeSetting" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation UpdateComputeSetting
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op UpdateExocomputeConfigs
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op UpdateExocomputeConfigs
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.UpdateExocomputeConfigs" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.UpdateExocomputeConfigs" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.UpdateExocomputeConfigs" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation UpdateExocomputeConfigs
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op UpdateTarget
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op UpdateTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.UpdateTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.UpdateTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.UpdateTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation UpdateTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op UpgradeCloudAccountFeaturesWithoutCft
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op UpgradeCloudAccountFeaturesWithoutCft
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.UpgradeCloudAccountFeaturesWithoutCft" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.UpgradeCloudAccountFeaturesWithoutCft" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.UpgradeCloudAccountFeaturesWithoutCft" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation UpgradeCloudAccountFeaturesWithoutCft
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op UpgradeIamUserBasedCloudAccountPermissions
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op UpgradeIamUserBasedCloudAccountPermissions
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.UpgradeIamUserBasedCloudAccountPermissions" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.UpgradeIamUserBasedCloudAccountPermissions" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.UpgradeIamUserBasedCloudAccountPermissions" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation UpgradeIamUserBasedCloudAccountPermissions
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op ValidateAndCreateCloudAccount
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op ValidateAndCreateCloudAccount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.ValidateAndCreateCloudAccount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.ValidateAndCreateCloudAccount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.ValidateAndCreateCloudAccount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation ValidateAndCreateCloudAccount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAws -Op ValidateAndInitiateOutpostAccount
# -------------------------------------------------------------------

$query = New-RscMutationAws -Op ValidateAndInitiateOutpostAccount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAws.ValidateAndInitiateOutpostAccount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAws.ValidateAndInitiateOutpostAccount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAws.ValidateAndInitiateOutpostAccount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAws -Operation ValidateAndInitiateOutpostAccount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationAwsNative -Op ExcludeEbsVolumesFromSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationAwsNative -Op ExcludeEbsVolumesFromSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAwsNative.ExcludeEbsVolumesFromSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAwsNative.ExcludeEbsVolumesFromSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAwsNative.ExcludeEbsVolumesFromSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAwsNative -Operation ExcludeEbsVolumesFromSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAwsNative -Op StartAccountDisableJob
# -------------------------------------------------------------------

$query = New-RscMutationAwsNative -Op StartAccountDisableJob
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAwsNative.StartAccountDisableJob" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAwsNative.StartAccountDisableJob" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAwsNative.StartAccountDisableJob" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAwsNative -Operation StartAccountDisableJob
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAwsNative -Op StartCreateEbsVolumeSnapshotsJob
# -------------------------------------------------------------------

$query = New-RscMutationAwsNative -Op StartCreateEbsVolumeSnapshotsJob
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAwsNative.StartCreateEbsVolumeSnapshotsJob" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAwsNative.StartCreateEbsVolumeSnapshotsJob" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAwsNative.StartCreateEbsVolumeSnapshotsJob" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAwsNative -Operation StartCreateEbsVolumeSnapshotsJob
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAwsNative -Op StartEc2InstanceSnapshotsJob
# -------------------------------------------------------------------

$query = New-RscMutationAwsNative -Op StartEc2InstanceSnapshotsJob
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAwsNative.StartEc2InstanceSnapshotsJob" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAwsNative.StartEc2InstanceSnapshotsJob" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAwsNative.StartEc2InstanceSnapshotsJob" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAwsNative -Operation StartEc2InstanceSnapshotsJob
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAwsNative -Op StartExportEbsVolumeSnapshotJob
# -------------------------------------------------------------------

$query = New-RscMutationAwsNative -Op StartExportEbsVolumeSnapshotJob
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAwsNative.StartExportEbsVolumeSnapshotJob" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAwsNative.StartExportEbsVolumeSnapshotJob" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAwsNative.StartExportEbsVolumeSnapshotJob" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAwsNative -Operation StartExportEbsVolumeSnapshotJob
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAwsNative -Op StartRdsInstanceSnapshotsJob
# -------------------------------------------------------------------

$query = New-RscMutationAwsNative -Op StartRdsInstanceSnapshotsJob
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAwsNative.StartRdsInstanceSnapshotsJob" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAwsNative.StartRdsInstanceSnapshotsJob" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAwsNative.StartRdsInstanceSnapshotsJob" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAwsNative -Operation StartRdsInstanceSnapshotsJob
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAwsNative -Op StartRefreshAccountsJob
# -------------------------------------------------------------------

$query = New-RscMutationAwsNative -Op StartRefreshAccountsJob
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAwsNative.StartRefreshAccountsJob" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAwsNative.StartRefreshAccountsJob" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAwsNative.StartRefreshAccountsJob" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAwsNative -Operation StartRefreshAccountsJob
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAwsNative -Op StartRestoreEc2InstanceSnapshotJob
# -------------------------------------------------------------------

$query = New-RscMutationAwsNative -Op StartRestoreEc2InstanceSnapshotJob
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAwsNative.StartRestoreEc2InstanceSnapshotJob" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAwsNative.StartRestoreEc2InstanceSnapshotJob" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAwsNative.StartRestoreEc2InstanceSnapshotJob" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAwsNative -Operation StartRestoreEc2InstanceSnapshotJob
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationAzure -Op AddCloudAccount
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op AddCloudAccount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.AddCloudAccount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.AddCloudAccount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.AddCloudAccount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation AddCloudAccount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op AddCloudAccountExocomputeConfigurations
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op AddCloudAccountExocomputeConfigurations
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.AddCloudAccountExocomputeConfigurations" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.AddCloudAccountExocomputeConfigurations" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.AddCloudAccountExocomputeConfigurations" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation AddCloudAccountExocomputeConfigurations
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op AddCloudAccountWithoutOauth
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op AddCloudAccountWithoutOauth
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.AddCloudAccountWithoutOauth" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.AddCloudAccountWithoutOauth" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.AddCloudAccountWithoutOauth" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation AddCloudAccountWithoutOauth
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op BackupAdDirectory
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op BackupAdDirectory
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.BackupAdDirectory" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.BackupAdDirectory" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.BackupAdDirectory" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation BackupAdDirectory
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op CompleteAdAppSetup
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op CompleteAdAppSetup
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.CompleteAdAppSetup" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.CompleteAdAppSetup" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.CompleteAdAppSetup" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation CompleteAdAppSetup
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op CompleteAdAppUpdate
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op CompleteAdAppUpdate
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.CompleteAdAppUpdate" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.CompleteAdAppUpdate" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.CompleteAdAppUpdate" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation CompleteAdAppUpdate
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op CompleteCloudAccountOauth
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op CompleteCloudAccountOauth
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.CompleteCloudAccountOauth" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.CompleteCloudAccountOauth" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.CompleteCloudAccountOauth" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation CompleteCloudAccountOauth
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op CreateAccount
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op CreateAccount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.CreateAccount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.CreateAccount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.CreateAccount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation CreateAccount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op CreateAutomaticTargetMapping
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op CreateAutomaticTargetMapping
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.CreateAutomaticTargetMapping" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.CreateAutomaticTargetMapping" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.CreateAutomaticTargetMapping" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation CreateAutomaticTargetMapping
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op CreateCloudNativeRcvStorageSetting
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op CreateCloudNativeRcvStorageSetting
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.CreateCloudNativeRcvStorageSetting" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.CreateCloudNativeRcvStorageSetting" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.CreateCloudNativeRcvStorageSetting" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation CreateCloudNativeRcvStorageSetting
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op CreateCloudNativeStorageSetting
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op CreateCloudNativeStorageSetting
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.CreateCloudNativeStorageSetting" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.CreateCloudNativeStorageSetting" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.CreateCloudNativeStorageSetting" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation CreateCloudNativeStorageSetting
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op CreateCluster
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op CreateCluster
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.CreateCluster" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.CreateCluster" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.CreateCluster" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation CreateCluster
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op CreateReaderTarget
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op CreateReaderTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.CreateReaderTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.CreateReaderTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.CreateReaderTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation CreateReaderTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op CreateSaasAppAad
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op CreateSaasAppAad
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.CreateSaasAppAad" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.CreateSaasAppAad" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.CreateSaasAppAad" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation CreateSaasAppAad
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op CreateTarget
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op CreateTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.CreateTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.CreateTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.CreateTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation CreateTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op DeleteAdDirectory
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op DeleteAdDirectory
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.DeleteAdDirectory" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.DeleteAdDirectory" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.DeleteAdDirectory" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation DeleteAdDirectory
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op DeleteCloudAccount
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op DeleteCloudAccount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.DeleteCloudAccount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.DeleteCloudAccount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.DeleteCloudAccount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation DeleteCloudAccount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op DeleteCloudAccountExocomputeConfigurations
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op DeleteCloudAccountExocomputeConfigurations
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.DeleteCloudAccountExocomputeConfigurations" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.DeleteCloudAccountExocomputeConfigurations" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.DeleteCloudAccountExocomputeConfigurations" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation DeleteCloudAccountExocomputeConfigurations
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op DeleteCloudAccountWithoutOauth
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op DeleteCloudAccountWithoutOauth
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.DeleteCloudAccountWithoutOauth" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.DeleteCloudAccountWithoutOauth" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.DeleteCloudAccountWithoutOauth" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation DeleteCloudAccountWithoutOauth
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op MapCloudAccountExocomputeSubscription
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op MapCloudAccountExocomputeSubscription
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.MapCloudAccountExocomputeSubscription" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.MapCloudAccountExocomputeSubscription" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.MapCloudAccountExocomputeSubscription" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation MapCloudAccountExocomputeSubscription
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op MapCloudAccountToPersistentStorageLocation
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op MapCloudAccountToPersistentStorageLocation
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.MapCloudAccountToPersistentStorageLocation" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.MapCloudAccountToPersistentStorageLocation" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.MapCloudAccountToPersistentStorageLocation" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation MapCloudAccountToPersistentStorageLocation
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op OauthConsentComplete
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op OauthConsentComplete
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.OauthConsentComplete" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.OauthConsentComplete" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.OauthConsentComplete" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation OauthConsentComplete
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op OauthConsentKickoff
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op OauthConsentKickoff
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.OauthConsentKickoff" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.OauthConsentKickoff" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.OauthConsentKickoff" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation OauthConsentKickoff
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op RestoreAdObjectsWithPasswords
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op RestoreAdObjectsWithPasswords
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.RestoreAdObjectsWithPasswords" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.RestoreAdObjectsWithPasswords" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.RestoreAdObjectsWithPasswords" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation RestoreAdObjectsWithPasswords
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op SetCloudAccountCustomerAppCredentials
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op SetCloudAccountCustomerAppCredentials
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.SetCloudAccountCustomerAppCredentials" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.SetCloudAccountCustomerAppCredentials" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.SetCloudAccountCustomerAppCredentials" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation SetCloudAccountCustomerAppCredentials
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op StartAdAppSetup
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op StartAdAppSetup
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.StartAdAppSetup" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.StartAdAppSetup" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.StartAdAppSetup" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation StartAdAppSetup
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op StartAdAppUpdate
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op StartAdAppUpdate
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.StartAdAppUpdate" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.StartAdAppUpdate" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.StartAdAppUpdate" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation StartAdAppUpdate
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op StartCloudAccountOauth
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op StartCloudAccountOauth
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.StartCloudAccountOauth" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.StartCloudAccountOauth" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.StartCloudAccountOauth" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation StartCloudAccountOauth
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op StartDisableCloudAccountJob
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op StartDisableCloudAccountJob
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.StartDisableCloudAccountJob" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.StartDisableCloudAccountJob" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.StartDisableCloudAccountJob" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation StartDisableCloudAccountJob
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op StartExportSqlDatabaseDbJob
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op StartExportSqlDatabaseDbJob
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.StartExportSqlDatabaseDbJob" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.StartExportSqlDatabaseDbJob" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.StartExportSqlDatabaseDbJob" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation StartExportSqlDatabaseDbJob
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op StartExportSqlManagedInstanceDbJob
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op StartExportSqlManagedInstanceDbJob
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.StartExportSqlManagedInstanceDbJob" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.StartExportSqlManagedInstanceDbJob" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.StartExportSqlManagedInstanceDbJob" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation StartExportSqlManagedInstanceDbJob
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op UnmapCloudAccountExocomputeSubscription
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op UnmapCloudAccountExocomputeSubscription
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.UnmapCloudAccountExocomputeSubscription" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.UnmapCloudAccountExocomputeSubscription" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.UnmapCloudAccountExocomputeSubscription" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation UnmapCloudAccountExocomputeSubscription
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op UnmapPersistentStorageSubscription
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op UnmapPersistentStorageSubscription
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.UnmapPersistentStorageSubscription" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.UnmapPersistentStorageSubscription" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.UnmapPersistentStorageSubscription" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation UnmapPersistentStorageSubscription
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op UpdateAccount
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op UpdateAccount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.UpdateAccount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.UpdateAccount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.UpdateAccount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation UpdateAccount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op UpdateAutomaticTargetMapping
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op UpdateAutomaticTargetMapping
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.UpdateAutomaticTargetMapping" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.UpdateAutomaticTargetMapping" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.UpdateAutomaticTargetMapping" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation UpdateAutomaticTargetMapping
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op UpdateCloudAccount
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op UpdateCloudAccount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.UpdateCloudAccount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.UpdateCloudAccount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.UpdateCloudAccount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation UpdateCloudAccount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op UpdateCloudNativeRcvStorageSetting
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op UpdateCloudNativeRcvStorageSetting
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.UpdateCloudNativeRcvStorageSetting" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.UpdateCloudNativeRcvStorageSetting" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.UpdateCloudNativeRcvStorageSetting" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation UpdateCloudNativeRcvStorageSetting
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op UpdateCloudNativeStorageSetting
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op UpdateCloudNativeStorageSetting
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.UpdateCloudNativeStorageSetting" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.UpdateCloudNativeStorageSetting" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.UpdateCloudNativeStorageSetting" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation UpdateCloudNativeStorageSetting
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op UpdateCustomerAppPermissionForSql
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op UpdateCustomerAppPermissionForSql
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.UpdateCustomerAppPermissionForSql" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.UpdateCustomerAppPermissionForSql" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.UpdateCustomerAppPermissionForSql" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation UpdateCustomerAppPermissionForSql
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op UpdateTarget
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op UpdateTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.UpdateTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.UpdateTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.UpdateTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation UpdateTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op UpgradeCloudAccount
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op UpgradeCloudAccount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.UpgradeCloudAccount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.UpgradeCloudAccount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.UpgradeCloudAccount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation UpgradeCloudAccount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzure -Op UpgradeCloudAccountPermissionsWithoutOauth
# -------------------------------------------------------------------

$query = New-RscMutationAzure -Op UpgradeCloudAccountPermissionsWithoutOauth
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzure.UpgradeCloudAccountPermissionsWithoutOauth" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzure.UpgradeCloudAccountPermissionsWithoutOauth" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzure.UpgradeCloudAccountPermissionsWithoutOauth" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzure -Operation UpgradeCloudAccountPermissionsWithoutOauth
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationAzureNative -Op ExcludeManagedDisksFromSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationAzureNative -Op ExcludeManagedDisksFromSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzureNative.ExcludeManagedDisksFromSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzureNative.ExcludeManagedDisksFromSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzureNative.ExcludeManagedDisksFromSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzureNative -Operation ExcludeManagedDisksFromSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzureNative -Op StartCreateManagedDiskSnapshotsJob
# -------------------------------------------------------------------

$query = New-RscMutationAzureNative -Op StartCreateManagedDiskSnapshotsJob
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzureNative.StartCreateManagedDiskSnapshotsJob" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzureNative.StartCreateManagedDiskSnapshotsJob" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzureNative.StartCreateManagedDiskSnapshotsJob" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzureNative -Operation StartCreateManagedDiskSnapshotsJob
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzureNative -Op StartCreateVirtualMachineSnapshotsJob
# -------------------------------------------------------------------

$query = New-RscMutationAzureNative -Op StartCreateVirtualMachineSnapshotsJob
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzureNative.StartCreateVirtualMachineSnapshotsJob" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzureNative.StartCreateVirtualMachineSnapshotsJob" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzureNative.StartCreateVirtualMachineSnapshotsJob" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzureNative -Operation StartCreateVirtualMachineSnapshotsJob
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzureNative -Op StartDisableSubscriptionProtectionJob
# -------------------------------------------------------------------

$query = New-RscMutationAzureNative -Op StartDisableSubscriptionProtectionJob
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzureNative.StartDisableSubscriptionProtectionJob" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzureNative.StartDisableSubscriptionProtectionJob" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzureNative.StartDisableSubscriptionProtectionJob" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzureNative -Operation StartDisableSubscriptionProtectionJob
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzureNative -Op StartExportManagedDiskJob
# -------------------------------------------------------------------

$query = New-RscMutationAzureNative -Op StartExportManagedDiskJob
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzureNative.StartExportManagedDiskJob" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzureNative.StartExportManagedDiskJob" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzureNative.StartExportManagedDiskJob" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzureNative -Operation StartExportManagedDiskJob
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzureNative -Op StartExportVirtualMachineJob
# -------------------------------------------------------------------

$query = New-RscMutationAzureNative -Op StartExportVirtualMachineJob
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzureNative.StartExportVirtualMachineJob" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzureNative.StartExportVirtualMachineJob" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzureNative.StartExportVirtualMachineJob" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzureNative -Operation StartExportVirtualMachineJob
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzureNative -Op StartRefreshSubscriptionsJob
# -------------------------------------------------------------------

$query = New-RscMutationAzureNative -Op StartRefreshSubscriptionsJob
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzureNative.StartRefreshSubscriptionsJob" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzureNative.StartRefreshSubscriptionsJob" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzureNative.StartRefreshSubscriptionsJob" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzureNative -Operation StartRefreshSubscriptionsJob
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationAzureNative -Op StartRestoreVirtualMachineJob
# -------------------------------------------------------------------

$query = New-RscMutationAzureNative -Op StartRestoreVirtualMachineJob
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzureNative.StartRestoreVirtualMachineJob" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzureNative.StartRestoreVirtualMachineJob" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzureNative.StartRestoreVirtualMachineJob" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzureNative -Operation StartRestoreVirtualMachineJob
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationAzureO365 -Op SetupExocompute
# -------------------------------------------------------------------

$query = New-RscMutationAzureO365 -Op SetupExocompute
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationAzureO365.SetupExocompute" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationAzureO365.SetupExocompute" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationAzureO365.SetupExocompute" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationAzureO365 -Operation SetupExocompute
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationCassandra -Op BulkDeleteSources
# -------------------------------------------------------------------

$query = New-RscMutationCassandra -Op BulkDeleteSources
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCassandra.BulkDeleteSources" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCassandra.BulkDeleteSources" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCassandra.BulkDeleteSources" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCassandra -Operation BulkDeleteSources
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCassandra -Op CreateSource
# -------------------------------------------------------------------

$query = New-RscMutationCassandra -Op CreateSource
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCassandra.CreateSource" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCassandra.CreateSource" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCassandra.CreateSource" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCassandra -Operation CreateSource
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCassandra -Op DeleteSource
# -------------------------------------------------------------------

$query = New-RscMutationCassandra -Op DeleteSource
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCassandra.DeleteSource" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCassandra.DeleteSource" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCassandra.DeleteSource" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCassandra -Operation DeleteSource
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCassandra -Op RecoverSource
# -------------------------------------------------------------------

$query = New-RscMutationCassandra -Op RecoverSource
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCassandra.RecoverSource" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCassandra.RecoverSource" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCassandra.RecoverSource" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCassandra -Operation RecoverSource
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCassandra -Op UpdateSource
# -------------------------------------------------------------------

$query = New-RscMutationCassandra -Op UpdateSource
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCassandra.UpdateSource" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCassandra.UpdateSource" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCassandra.UpdateSource" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCassandra -Operation UpdateSource
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationCertificate -Op AddClusterCertificate
# -------------------------------------------------------------------

$query = New-RscMutationCertificate -Op AddClusterCertificate
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCertificate.AddClusterCertificate" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCertificate.AddClusterCertificate" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCertificate.AddClusterCertificate" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCertificate -Operation AddClusterCertificate
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCertificate -Op AddGlobalCertificate
# -------------------------------------------------------------------

$query = New-RscMutationCertificate -Op AddGlobalCertificate
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCertificate.AddGlobalCertificate" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCertificate.AddGlobalCertificate" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCertificate.AddGlobalCertificate" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCertificate -Operation AddGlobalCertificate
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCertificate -Op Delete
# -------------------------------------------------------------------

$query = New-RscMutationCertificate -Op Delete
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCertificate.Delete" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCertificate.Delete" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCertificate.Delete" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCertificate -Operation Delete
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCertificate -Op DeleteCsr
# -------------------------------------------------------------------

$query = New-RscMutationCertificate -Op DeleteCsr
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCertificate.DeleteCsr" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCertificate.DeleteCsr" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCertificate.DeleteCsr" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCertificate -Operation DeleteCsr
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCertificate -Op DeleteGlobalCertificate
# -------------------------------------------------------------------

$query = New-RscMutationCertificate -Op DeleteGlobalCertificate
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCertificate.DeleteGlobalCertificate" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCertificate.DeleteGlobalCertificate" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCertificate.DeleteGlobalCertificate" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCertificate -Operation DeleteGlobalCertificate
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCertificate -Op GenerateCsr
# -------------------------------------------------------------------

$query = New-RscMutationCertificate -Op GenerateCsr
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCertificate.GenerateCsr" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCertificate.GenerateCsr" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCertificate.GenerateCsr" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCertificate -Operation GenerateCsr
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCertificate -Op MarkAgentSecondary
# -------------------------------------------------------------------

$query = New-RscMutationCertificate -Op MarkAgentSecondary
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCertificate.MarkAgentSecondary" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCertificate.MarkAgentSecondary" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCertificate.MarkAgentSecondary" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCertificate -Operation MarkAgentSecondary
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCertificate -Op SetSso
# -------------------------------------------------------------------

$query = New-RscMutationCertificate -Op SetSso
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCertificate.SetSso" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCertificate.SetSso" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCertificate.SetSso" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCertificate -Operation SetSso
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCertificate -Op SetWebSigned
# -------------------------------------------------------------------

$query = New-RscMutationCertificate -Op SetWebSigned
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCertificate.SetWebSigned" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCertificate.SetWebSigned" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCertificate.SetWebSigned" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCertificate -Operation SetWebSigned
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCertificate -Op Update
# -------------------------------------------------------------------

$query = New-RscMutationCertificate -Op Update
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCertificate.Update" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCertificate.Update" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCertificate.Update" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCertificate -Operation Update
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCertificate -Op UpdateGlobalCertificate
# -------------------------------------------------------------------

$query = New-RscMutationCertificate -Op UpdateGlobalCertificate
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCertificate.UpdateGlobalCertificate" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCertificate.UpdateGlobalCertificate" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCertificate.UpdateGlobalCertificate" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCertificate -Operation UpdateGlobalCertificate
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCertificate -Op UpdateHost
# -------------------------------------------------------------------

$query = New-RscMutationCertificate -Op UpdateHost
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCertificate.UpdateHost" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCertificate.UpdateHost" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCertificate.UpdateHost" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCertificate -Operation UpdateHost
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationCloudAccount -Op MapExocomputeAccount
# -------------------------------------------------------------------

$query = New-RscMutationCloudAccount -Op MapExocomputeAccount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCloudAccount.MapExocomputeAccount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCloudAccount.MapExocomputeAccount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCloudAccount.MapExocomputeAccount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCloudAccount -Operation MapExocomputeAccount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCloudAccount -Op UnmapExocomputeAccount
# -------------------------------------------------------------------

$query = New-RscMutationCloudAccount -Op UnmapExocomputeAccount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCloudAccount.UnmapExocomputeAccount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCloudAccount.UnmapExocomputeAccount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCloudAccount.UnmapExocomputeAccount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCloudAccount -Operation UnmapExocomputeAccount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationCloudNative -Op AddSqlServerBackupCredentials
# -------------------------------------------------------------------

$query = New-RscMutationCloudNative -Op AddSqlServerBackupCredentials
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCloudNative.AddSqlServerBackupCredentials" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCloudNative.AddSqlServerBackupCredentials" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCloudNative.AddSqlServerBackupCredentials" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCloudNative -Operation AddSqlServerBackupCredentials
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCloudNative -Op CheckRbaConnectivity
# -------------------------------------------------------------------

$query = New-RscMutationCloudNative -Op CheckRbaConnectivity
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCloudNative.CheckRbaConnectivity" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCloudNative.CheckRbaConnectivity" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCloudNative.CheckRbaConnectivity" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCloudNative -Operation CheckRbaConnectivity
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCloudNative -Op ClearSqlServerBackupCredentials
# -------------------------------------------------------------------

$query = New-RscMutationCloudNative -Op ClearSqlServerBackupCredentials
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCloudNative.ClearSqlServerBackupCredentials" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCloudNative.ClearSqlServerBackupCredentials" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCloudNative.ClearSqlServerBackupCredentials" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCloudNative -Operation ClearSqlServerBackupCredentials
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCloudNative -Op CreateLabelRule
# -------------------------------------------------------------------

$query = New-RscMutationCloudNative -Op CreateLabelRule
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCloudNative.CreateLabelRule" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCloudNative.CreateLabelRule" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCloudNative.CreateLabelRule" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCloudNative -Operation CreateLabelRule
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCloudNative -Op CreateTagRule
# -------------------------------------------------------------------

$query = New-RscMutationCloudNative -Op CreateTagRule
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCloudNative.CreateTagRule" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCloudNative.CreateTagRule" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCloudNative.CreateTagRule" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCloudNative -Operation CreateTagRule
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCloudNative -Op DeleteLabelRule
# -------------------------------------------------------------------

$query = New-RscMutationCloudNative -Op DeleteLabelRule
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCloudNative.DeleteLabelRule" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCloudNative.DeleteLabelRule" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCloudNative.DeleteLabelRule" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCloudNative -Operation DeleteLabelRule
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCloudNative -Op DeleteTagRule
# -------------------------------------------------------------------

$query = New-RscMutationCloudNative -Op DeleteTagRule
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCloudNative.DeleteTagRule" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCloudNative.DeleteTagRule" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCloudNative.DeleteTagRule" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCloudNative -Operation DeleteTagRule
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCloudNative -Op DownloadFiles
# -------------------------------------------------------------------

$query = New-RscMutationCloudNative -Op DownloadFiles
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCloudNative.DownloadFiles" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCloudNative.DownloadFiles" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCloudNative.DownloadFiles" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCloudNative -Operation DownloadFiles
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCloudNative -Op SetupSqlServerBackup
# -------------------------------------------------------------------

$query = New-RscMutationCloudNative -Op SetupSqlServerBackup
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCloudNative.SetupSqlServerBackup" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCloudNative.SetupSqlServerBackup" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCloudNative.SetupSqlServerBackup" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCloudNative -Operation SetupSqlServerBackup
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCloudNative -Op StartSnapshotsIndexJob
# -------------------------------------------------------------------

$query = New-RscMutationCloudNative -Op StartSnapshotsIndexJob
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCloudNative.StartSnapshotsIndexJob" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCloudNative.StartSnapshotsIndexJob" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCloudNative.StartSnapshotsIndexJob" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCloudNative -Operation StartSnapshotsIndexJob
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCloudNative -Op UpdateIndexingStatus
# -------------------------------------------------------------------

$query = New-RscMutationCloudNative -Op UpdateIndexingStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCloudNative.UpdateIndexingStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCloudNative.UpdateIndexingStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCloudNative.UpdateIndexingStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCloudNative -Operation UpdateIndexingStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCloudNative -Op UpdateLabelRule
# -------------------------------------------------------------------

$query = New-RscMutationCloudNative -Op UpdateLabelRule
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCloudNative.UpdateLabelRule" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCloudNative.UpdateLabelRule" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCloudNative.UpdateLabelRule" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCloudNative -Operation UpdateLabelRule
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCloudNative -Op UpdateTagRule
# -------------------------------------------------------------------

$query = New-RscMutationCloudNative -Op UpdateTagRule
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCloudNative.UpdateTagRule" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCloudNative.UpdateTagRule" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCloudNative.UpdateTagRule" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCloudNative -Operation UpdateTagRule
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationCluster -Op AddClusterNodes
# -------------------------------------------------------------------

$query = New-RscMutationCluster -Op AddClusterNodes
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCluster.AddClusterNodes" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCluster.AddClusterNodes" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCluster.AddClusterNodes" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCluster -Operation AddClusterNodes
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCluster -Op AddNodesToCloud
# -------------------------------------------------------------------

$query = New-RscMutationCluster -Op AddNodesToCloud
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCluster.AddNodesToCloud" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCluster.AddNodesToCloud" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCluster.AddNodesToCloud" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCluster -Operation AddNodesToCloud
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCluster -Op GenerateClusterRegistrationToken
# -------------------------------------------------------------------

$query = New-RscMutationCluster -Op GenerateClusterRegistrationToken
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCluster.GenerateClusterRegistrationToken" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCluster.GenerateClusterRegistrationToken" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCluster.GenerateClusterRegistrationToken" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCluster -Operation GenerateClusterRegistrationToken
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCluster -Op RecoverCloud
# -------------------------------------------------------------------

$query = New-RscMutationCluster -Op RecoverCloud
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCluster.RecoverCloud" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCluster.RecoverCloud" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCluster.RecoverCloud" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCluster -Operation RecoverCloud
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCluster -Op RegisterCloud
# -------------------------------------------------------------------

$query = New-RscMutationCluster -Op RegisterCloud
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCluster.RegisterCloud" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCluster.RegisterCloud" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCluster.RegisterCloud" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCluster -Operation RegisterCloud
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCluster -Op ReleasePersistentExo
# -------------------------------------------------------------------

$query = New-RscMutationCluster -Op ReleasePersistentExo
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCluster.ReleasePersistentExo" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCluster.ReleasePersistentExo" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCluster.ReleasePersistentExo" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCluster -Operation ReleasePersistentExo
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCluster -Op RemoveCdm
# -------------------------------------------------------------------

$query = New-RscMutationCluster -Op RemoveCdm
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCluster.RemoveCdm" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCluster.RemoveCdm" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCluster.RemoveCdm" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCluster -Operation RemoveCdm
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCluster -Op RemoveClusterNodes
# -------------------------------------------------------------------

$query = New-RscMutationCluster -Op RemoveClusterNodes
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCluster.RemoveClusterNodes" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCluster.RemoveClusterNodes" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCluster.RemoveClusterNodes" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCluster -Operation RemoveClusterNodes
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCluster -Op RequestPersistentExo
# -------------------------------------------------------------------

$query = New-RscMutationCluster -Op RequestPersistentExo
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCluster.RequestPersistentExo" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCluster.RequestPersistentExo" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCluster.RequestPersistentExo" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCluster -Operation RequestPersistentExo
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCluster -Op SetMissingClusterStatus
# -------------------------------------------------------------------

$query = New-RscMutationCluster -Op SetMissingClusterStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCluster.SetMissingClusterStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCluster.SetMissingClusterStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCluster.SetMissingClusterStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCluster -Operation SetMissingClusterStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCluster -Op UpdateClusterDefaultAddress
# -------------------------------------------------------------------

$query = New-RscMutationCluster -Op UpdateClusterDefaultAddress
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCluster.UpdateClusterDefaultAddress" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCluster.UpdateClusterDefaultAddress" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCluster.UpdateClusterDefaultAddress" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCluster -Operation UpdateClusterDefaultAddress
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCluster -Op UpdateClusterLocation
# -------------------------------------------------------------------

$query = New-RscMutationCluster -Op UpdateClusterLocation
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCluster.UpdateClusterLocation" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCluster.UpdateClusterLocation" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCluster.UpdateClusterLocation" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCluster -Operation UpdateClusterLocation
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCluster -Op UpdateClusterNtpServers
# -------------------------------------------------------------------

$query = New-RscMutationCluster -Op UpdateClusterNtpServers
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCluster.UpdateClusterNtpServers" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCluster.UpdateClusterNtpServers" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCluster.UpdateClusterNtpServers" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCluster -Operation UpdateClusterNtpServers
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCluster -Op UpdateClusterPauseStatus
# -------------------------------------------------------------------

$query = New-RscMutationCluster -Op UpdateClusterPauseStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCluster.UpdateClusterPauseStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCluster.UpdateClusterPauseStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCluster.UpdateClusterPauseStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCluster -Operation UpdateClusterPauseStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCluster -Op UpdateClusterSettings
# -------------------------------------------------------------------

$query = New-RscMutationCluster -Op UpdateClusterSettings
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCluster.UpdateClusterSettings" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCluster.UpdateClusterSettings" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCluster.UpdateClusterSettings" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCluster -Operation UpdateClusterSettings
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCluster -Op UpdatePreviewerClusterConfig
# -------------------------------------------------------------------

$query = New-RscMutationCluster -Op UpdatePreviewerClusterConfig
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCluster.UpdatePreviewerClusterConfig" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCluster.UpdatePreviewerClusterConfig" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCluster.UpdatePreviewerClusterConfig" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCluster -Operation UpdatePreviewerClusterConfig
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationCrossAccount -Op AddCrossAccountServiceConsumer
# -------------------------------------------------------------------

$query = New-RscMutationCrossAccount -Op AddCrossAccountServiceConsumer
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCrossAccount.AddCrossAccountServiceConsumer" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCrossAccount.AddCrossAccountServiceConsumer" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCrossAccount.AddCrossAccountServiceConsumer" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCrossAccount -Operation AddCrossAccountServiceConsumer
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCrossAccount -Op CreateCrossAccountPair
# -------------------------------------------------------------------

$query = New-RscMutationCrossAccount -Op CreateCrossAccountPair
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCrossAccount.CreateCrossAccountPair" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCrossAccount.CreateCrossAccountPair" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCrossAccount.CreateCrossAccountPair" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCrossAccount -Operation CreateCrossAccountPair
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCrossAccount -Op CreateCrossAccountRegOauthPayload
# -------------------------------------------------------------------

$query = New-RscMutationCrossAccount -Op CreateCrossAccountRegOauthPayload
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCrossAccount.CreateCrossAccountRegOauthPayload" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCrossAccount.CreateCrossAccountRegOauthPayload" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCrossAccount.CreateCrossAccountRegOauthPayload" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCrossAccount -Operation CreateCrossAccountRegOauthPayload
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationCrossAccount -Op DeleteCrossAccountPair
# -------------------------------------------------------------------

$query = New-RscMutationCrossAccount -Op DeleteCrossAccountPair
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationCrossAccount.DeleteCrossAccountPair" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationCrossAccount.DeleteCrossAccountPair" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationCrossAccount.DeleteCrossAccountPair" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationCrossAccount -Operation DeleteCrossAccountPair
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationDb2 -Op AddInstance
# -------------------------------------------------------------------

$query = New-RscMutationDb2 -Op AddInstance
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationDb2.AddInstance" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationDb2.AddInstance" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationDb2.AddInstance" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationDb2 -Operation AddInstance
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationDb2 -Op ConfigureRestore
# -------------------------------------------------------------------

$query = New-RscMutationDb2 -Op ConfigureRestore
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationDb2.ConfigureRestore" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationDb2.ConfigureRestore" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationDb2.ConfigureRestore" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationDb2 -Operation ConfigureRestore
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationDb2 -Op CreateOnDemandBackup
# -------------------------------------------------------------------

$query = New-RscMutationDb2 -Op CreateOnDemandBackup
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationDb2.CreateOnDemandBackup" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationDb2.CreateOnDemandBackup" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationDb2.CreateOnDemandBackup" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationDb2 -Operation CreateOnDemandBackup
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationDb2 -Op DeleteDatabase
# -------------------------------------------------------------------

$query = New-RscMutationDb2 -Op DeleteDatabase
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationDb2.DeleteDatabase" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationDb2.DeleteDatabase" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationDb2.DeleteDatabase" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationDb2 -Operation DeleteDatabase
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationDb2 -Op DeleteInstance
# -------------------------------------------------------------------

$query = New-RscMutationDb2 -Op DeleteInstance
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationDb2.DeleteInstance" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationDb2.DeleteInstance" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationDb2.DeleteInstance" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationDb2 -Operation DeleteInstance
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationDb2 -Op DiscoverInstance
# -------------------------------------------------------------------

$query = New-RscMutationDb2 -Op DiscoverInstance
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationDb2.DiscoverInstance" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationDb2.DiscoverInstance" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationDb2.DiscoverInstance" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationDb2 -Operation DiscoverInstance
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationDb2 -Op DownloadSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationDb2 -Op DownloadSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationDb2.DownloadSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationDb2.DownloadSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationDb2.DownloadSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationDb2 -Operation DownloadSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationDb2 -Op DownloadSnapshotsForPointInTimeRecovery
# -------------------------------------------------------------------

$query = New-RscMutationDb2 -Op DownloadSnapshotsForPointInTimeRecovery
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationDb2.DownloadSnapshotsForPointInTimeRecovery" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationDb2.DownloadSnapshotsForPointInTimeRecovery" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationDb2.DownloadSnapshotsForPointInTimeRecovery" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationDb2 -Operation DownloadSnapshotsForPointInTimeRecovery
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationDb2 -Op ExpireDownloadedSnapshots
# -------------------------------------------------------------------

$query = New-RscMutationDb2 -Op ExpireDownloadedSnapshots
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationDb2.ExpireDownloadedSnapshots" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationDb2.ExpireDownloadedSnapshots" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationDb2.ExpireDownloadedSnapshots" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationDb2 -Operation ExpireDownloadedSnapshots
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationDb2 -Op PatchDatabase
# -------------------------------------------------------------------

$query = New-RscMutationDb2 -Op PatchDatabase
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationDb2.PatchDatabase" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationDb2.PatchDatabase" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationDb2.PatchDatabase" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationDb2 -Operation PatchDatabase
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationDb2 -Op PatchInstance
# -------------------------------------------------------------------

$query = New-RscMutationDb2 -Op PatchInstance
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationDb2.PatchInstance" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationDb2.PatchInstance" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationDb2.PatchInstance" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationDb2 -Operation PatchInstance
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationDb2 -Op RefreshDatabase
# -------------------------------------------------------------------

$query = New-RscMutationDb2 -Op RefreshDatabase
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationDb2.RefreshDatabase" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationDb2.RefreshDatabase" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationDb2.RefreshDatabase" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationDb2 -Operation RefreshDatabase
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationDownload -Op ActiveDirectorySnapshotFromLocation
# -------------------------------------------------------------------

$query = New-RscMutationDownload -Op ActiveDirectorySnapshotFromLocation
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationDownload.ActiveDirectorySnapshotFromLocation" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationDownload.ActiveDirectorySnapshotFromLocation" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationDownload.ActiveDirectorySnapshotFromLocation" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationDownload -Operation ActiveDirectorySnapshotFromLocation
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationDownload -Op AuditLogCsvAsync
# -------------------------------------------------------------------

$query = New-RscMutationDownload -Op AuditLogCsvAsync
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationDownload.AuditLogCsvAsync" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationDownload.AuditLogCsvAsync" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationDownload.AuditLogCsvAsync" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationDownload -Operation AuditLogCsvAsync
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationDownload -Op ExchangeSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationDownload -Op ExchangeSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationDownload.ExchangeSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationDownload.ExchangeSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationDownload.ExchangeSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationDownload -Operation ExchangeSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationDownload -Op FilesetSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationDownload -Op FilesetSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationDownload.FilesetSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationDownload.FilesetSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationDownload.FilesetSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationDownload -Operation FilesetSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationDownload -Op FilesetSnapshotFromLocation
# -------------------------------------------------------------------

$query = New-RscMutationDownload -Op FilesetSnapshotFromLocation
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationDownload.FilesetSnapshotFromLocation" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationDownload.FilesetSnapshotFromLocation" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationDownload.FilesetSnapshotFromLocation" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationDownload -Operation FilesetSnapshotFromLocation
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationDownload -Op ObjectFilesCsv
# -------------------------------------------------------------------

$query = New-RscMutationDownload -Op ObjectFilesCsv
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationDownload.ObjectFilesCsv" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationDownload.ObjectFilesCsv" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationDownload.ObjectFilesCsv" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationDownload -Operation ObjectFilesCsv
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationDownload -Op ObjectsListCsv
# -------------------------------------------------------------------

$query = New-RscMutationDownload -Op ObjectsListCsv
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationDownload.ObjectsListCsv" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationDownload.ObjectsListCsv" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationDownload.ObjectsListCsv" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationDownload -Operation ObjectsListCsv
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationDownload -Op ReportCsvAsync
# -------------------------------------------------------------------

$query = New-RscMutationDownload -Op ReportCsvAsync
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationDownload.ReportCsvAsync" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationDownload.ReportCsvAsync" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationDownload.ReportCsvAsync" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationDownload -Operation ReportCsvAsync
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationDownload -Op ReportPdfAsync
# -------------------------------------------------------------------

$query = New-RscMutationDownload -Op ReportPdfAsync
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationDownload.ReportPdfAsync" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationDownload.ReportPdfAsync" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationDownload.ReportPdfAsync" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationDownload -Operation ReportPdfAsync
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationDownload -Op ResultsCsv
# -------------------------------------------------------------------

$query = New-RscMutationDownload -Op ResultsCsv
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationDownload.ResultsCsv" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationDownload.ResultsCsv" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationDownload.ResultsCsv" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationDownload -Operation ResultsCsv
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationDownload -Op SapHanaSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationDownload -Op SapHanaSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationDownload.SapHanaSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationDownload.SapHanaSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationDownload.SapHanaSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationDownload -Operation SapHanaSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationDownload -Op SapHanaSnapshotFromLocation
# -------------------------------------------------------------------

$query = New-RscMutationDownload -Op SapHanaSnapshotFromLocation
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationDownload.SapHanaSnapshotFromLocation" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationDownload.SapHanaSnapshotFromLocation" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationDownload.SapHanaSnapshotFromLocation" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationDownload -Operation SapHanaSnapshotFromLocation
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationDownload -Op SapHanaSnapshotsForPointInTimeRecovery
# -------------------------------------------------------------------

$query = New-RscMutationDownload -Op SapHanaSnapshotsForPointInTimeRecovery
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationDownload.SapHanaSnapshotsForPointInTimeRecovery" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationDownload.SapHanaSnapshotsForPointInTimeRecovery" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationDownload.SapHanaSnapshotsForPointInTimeRecovery" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationDownload -Operation SapHanaSnapshotsForPointInTimeRecovery
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationDownload -Op SnapshotResultsCsv
# -------------------------------------------------------------------

$query = New-RscMutationDownload -Op SnapshotResultsCsv
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationDownload.SnapshotResultsCsv" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationDownload.SnapshotResultsCsv" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationDownload.SnapshotResultsCsv" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationDownload -Operation SnapshotResultsCsv
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationDownload -Op ThreatHuntCsv
# -------------------------------------------------------------------

$query = New-RscMutationDownload -Op ThreatHuntCsv
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationDownload.ThreatHuntCsv" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationDownload.ThreatHuntCsv" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationDownload.ThreatHuntCsv" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationDownload -Operation ThreatHuntCsv
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationDownload -Op VolumeGroupSnapshotFiles
# -------------------------------------------------------------------

$query = New-RscMutationDownload -Op VolumeGroupSnapshotFiles
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationDownload.VolumeGroupSnapshotFiles" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationDownload.VolumeGroupSnapshotFiles" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationDownload.VolumeGroupSnapshotFiles" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationDownload -Operation VolumeGroupSnapshotFiles
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationDownload -Op VolumeGroupSnapshotFromLocation
# -------------------------------------------------------------------

$query = New-RscMutationDownload -Op VolumeGroupSnapshotFromLocation
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationDownload.VolumeGroupSnapshotFromLocation" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationDownload.VolumeGroupSnapshotFromLocation" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationDownload.VolumeGroupSnapshotFromLocation" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationDownload -Operation VolumeGroupSnapshotFromLocation
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationExchange -Op BulkUpdateDag
# -------------------------------------------------------------------

$query = New-RscMutationExchange -Op BulkUpdateDag
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationExchange.BulkUpdateDag" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationExchange.BulkUpdateDag" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationExchange.BulkUpdateDag" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationExchange -Operation BulkUpdateDag
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationExchange -Op CreateMount
# -------------------------------------------------------------------

$query = New-RscMutationExchange -Op CreateMount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationExchange.CreateMount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationExchange.CreateMount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationExchange.CreateMount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationExchange -Operation CreateMount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationExchange -Op CreateOnDemandBackup
# -------------------------------------------------------------------

$query = New-RscMutationExchange -Op CreateOnDemandBackup
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationExchange.CreateOnDemandBackup" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationExchange.CreateOnDemandBackup" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationExchange.CreateOnDemandBackup" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationExchange -Operation CreateOnDemandBackup
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationExchange -Op DeleteSnapshotMount
# -------------------------------------------------------------------

$query = New-RscMutationExchange -Op DeleteSnapshotMount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationExchange.DeleteSnapshotMount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationExchange.DeleteSnapshotMount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationExchange.DeleteSnapshotMount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationExchange -Operation DeleteSnapshotMount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationFailoverCluster -Op BulkDelete
# -------------------------------------------------------------------

$query = New-RscMutationFailoverCluster -Op BulkDelete
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationFailoverCluster.BulkDelete" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationFailoverCluster.BulkDelete" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationFailoverCluster.BulkDelete" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationFailoverCluster -Operation BulkDelete
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationFailoverCluster -Op BulkDeleteApp
# -------------------------------------------------------------------

$query = New-RscMutationFailoverCluster -Op BulkDeleteApp
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationFailoverCluster.BulkDeleteApp" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationFailoverCluster.BulkDeleteApp" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationFailoverCluster.BulkDeleteApp" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationFailoverCluster -Operation BulkDeleteApp
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationFailoverCluster -Op Create
# -------------------------------------------------------------------

$query = New-RscMutationFailoverCluster -Op Create
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationFailoverCluster.Create" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationFailoverCluster.Create" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationFailoverCluster.Create" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationFailoverCluster -Operation Create
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationFailoverCluster -Op CreateApp
# -------------------------------------------------------------------

$query = New-RscMutationFailoverCluster -Op CreateApp
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationFailoverCluster.CreateApp" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationFailoverCluster.CreateApp" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationFailoverCluster.CreateApp" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationFailoverCluster -Operation CreateApp
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationFailoverCluster -Op Delete
# -------------------------------------------------------------------

$query = New-RscMutationFailoverCluster -Op Delete
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationFailoverCluster.Delete" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationFailoverCluster.Delete" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationFailoverCluster.Delete" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationFailoverCluster -Operation Delete
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationFailoverCluster -Op DeleteApp
# -------------------------------------------------------------------

$query = New-RscMutationFailoverCluster -Op DeleteApp
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationFailoverCluster.DeleteApp" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationFailoverCluster.DeleteApp" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationFailoverCluster.DeleteApp" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationFailoverCluster -Operation DeleteApp
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationFailoverCluster -Op Update
# -------------------------------------------------------------------

$query = New-RscMutationFailoverCluster -Op Update
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationFailoverCluster.Update" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationFailoverCluster.Update" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationFailoverCluster.Update" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationFailoverCluster -Operation Update
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationFailoverCluster -Op UpdateApp
# -------------------------------------------------------------------

$query = New-RscMutationFailoverCluster -Op UpdateApp
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationFailoverCluster.UpdateApp" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationFailoverCluster.UpdateApp" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationFailoverCluster.UpdateApp" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationFailoverCluster -Operation UpdateApp
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationFileset -Op BulkCreate
# -------------------------------------------------------------------

$query = New-RscMutationFileset -Op BulkCreate
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationFileset.BulkCreate" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationFileset.BulkCreate" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationFileset.BulkCreate" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationFileset -Operation BulkCreate
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationFileset -Op BulkCreateTemplates
# -------------------------------------------------------------------

$query = New-RscMutationFileset -Op BulkCreateTemplates
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationFileset.BulkCreateTemplates" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationFileset.BulkCreateTemplates" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationFileset.BulkCreateTemplates" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationFileset -Operation BulkCreateTemplates
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationFileset -Op BulkDelete
# -------------------------------------------------------------------

$query = New-RscMutationFileset -Op BulkDelete
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationFileset.BulkDelete" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationFileset.BulkDelete" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationFileset.BulkDelete" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationFileset -Operation BulkDelete
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationFileset -Op BulkDeleteTemplate
# -------------------------------------------------------------------

$query = New-RscMutationFileset -Op BulkDeleteTemplate
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationFileset.BulkDeleteTemplate" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationFileset.BulkDeleteTemplate" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationFileset.BulkDeleteTemplate" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationFileset -Operation BulkDeleteTemplate
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationFileset -Op BulkUpdateTemplate
# -------------------------------------------------------------------

$query = New-RscMutationFileset -Op BulkUpdateTemplate
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationFileset.BulkUpdateTemplate" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationFileset.BulkUpdateTemplate" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationFileset.BulkUpdateTemplate" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationFileset -Operation BulkUpdateTemplate
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationFileset -Op RecoverFiles
# -------------------------------------------------------------------

$query = New-RscMutationFileset -Op RecoverFiles
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationFileset.RecoverFiles" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationFileset.RecoverFiles" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationFileset.RecoverFiles" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationFileset -Operation RecoverFiles
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationGcp -Op CloudAccountAddManualAuthProject
# -------------------------------------------------------------------

$query = New-RscMutationGcp -Op CloudAccountAddManualAuthProject
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationGcp.CloudAccountAddManualAuthProject" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationGcp.CloudAccountAddManualAuthProject" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationGcp.CloudAccountAddManualAuthProject" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationGcp -Operation CloudAccountAddManualAuthProject
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationGcp -Op CloudAccountAddProjects
# -------------------------------------------------------------------

$query = New-RscMutationGcp -Op CloudAccountAddProjects
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationGcp.CloudAccountAddProjects" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationGcp.CloudAccountAddProjects" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationGcp.CloudAccountAddProjects" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationGcp -Operation CloudAccountAddProjects
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationGcp -Op CloudAccountDeleteProjects
# -------------------------------------------------------------------

$query = New-RscMutationGcp -Op CloudAccountDeleteProjects
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationGcp.CloudAccountDeleteProjects" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationGcp.CloudAccountDeleteProjects" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationGcp.CloudAccountDeleteProjects" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationGcp -Operation CloudAccountDeleteProjects
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationGcp -Op CloudAccountOauthComplete
# -------------------------------------------------------------------

$query = New-RscMutationGcp -Op CloudAccountOauthComplete
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationGcp.CloudAccountOauthComplete" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationGcp.CloudAccountOauthComplete" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationGcp.CloudAccountOauthComplete" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationGcp -Operation CloudAccountOauthComplete
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationGcp -Op CloudAccountOauthInitiate
# -------------------------------------------------------------------

$query = New-RscMutationGcp -Op CloudAccountOauthInitiate
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationGcp.CloudAccountOauthInitiate" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationGcp.CloudAccountOauthInitiate" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationGcp.CloudAccountOauthInitiate" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationGcp -Operation CloudAccountOauthInitiate
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationGcp -Op CloudAccountUpgradeProjects
# -------------------------------------------------------------------

$query = New-RscMutationGcp -Op CloudAccountUpgradeProjects
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationGcp.CloudAccountUpgradeProjects" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationGcp.CloudAccountUpgradeProjects" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationGcp.CloudAccountUpgradeProjects" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationGcp -Operation CloudAccountUpgradeProjects
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationGcp -Op CreateReaderTarget
# -------------------------------------------------------------------

$query = New-RscMutationGcp -Op CreateReaderTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationGcp.CreateReaderTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationGcp.CreateReaderTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationGcp.CreateReaderTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationGcp -Operation CreateReaderTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationGcp -Op CreateTarget
# -------------------------------------------------------------------

$query = New-RscMutationGcp -Op CreateTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationGcp.CreateTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationGcp.CreateTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationGcp.CreateTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationGcp -Operation CreateTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationGcp -Op SetDefaultServiceAccountJwtConfig
# -------------------------------------------------------------------

$query = New-RscMutationGcp -Op SetDefaultServiceAccountJwtConfig
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationGcp.SetDefaultServiceAccountJwtConfig" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationGcp.SetDefaultServiceAccountJwtConfig" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationGcp.SetDefaultServiceAccountJwtConfig" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationGcp -Operation SetDefaultServiceAccountJwtConfig
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationGcp -Op UpdateTarget
# -------------------------------------------------------------------

$query = New-RscMutationGcp -Op UpdateTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationGcp.UpdateTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationGcp.UpdateTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationGcp.UpdateTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationGcp -Operation UpdateTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationGcp -Op UpgradeCloudAccountPermissionsWithoutOauth
# -------------------------------------------------------------------

$query = New-RscMutationGcp -Op UpgradeCloudAccountPermissionsWithoutOauth
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationGcp.UpgradeCloudAccountPermissionsWithoutOauth" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationGcp.UpgradeCloudAccountPermissionsWithoutOauth" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationGcp.UpgradeCloudAccountPermissionsWithoutOauth" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationGcp -Operation UpgradeCloudAccountPermissionsWithoutOauth
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationGcpNative -Op DisableProject
# -------------------------------------------------------------------

$query = New-RscMutationGcpNative -Op DisableProject
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationGcpNative.DisableProject" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationGcpNative.DisableProject" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationGcpNative.DisableProject" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationGcpNative -Operation DisableProject
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationGcpNative -Op ExcludeDisksFromInstanceSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationGcpNative -Op ExcludeDisksFromInstanceSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationGcpNative.ExcludeDisksFromInstanceSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationGcpNative.ExcludeDisksFromInstanceSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationGcpNative.ExcludeDisksFromInstanceSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationGcpNative -Operation ExcludeDisksFromInstanceSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationGcpNative -Op ExportDisk
# -------------------------------------------------------------------

$query = New-RscMutationGcpNative -Op ExportDisk
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationGcpNative.ExportDisk" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationGcpNative.ExportDisk" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationGcpNative.ExportDisk" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationGcpNative -Operation ExportDisk
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationGcpNative -Op ExportGceInstance
# -------------------------------------------------------------------

$query = New-RscMutationGcpNative -Op ExportGceInstance
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationGcpNative.ExportGceInstance" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationGcpNative.ExportGceInstance" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationGcpNative.ExportGceInstance" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationGcpNative -Operation ExportGceInstance
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationGcpNative -Op RefreshProjects
# -------------------------------------------------------------------

$query = New-RscMutationGcpNative -Op RefreshProjects
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationGcpNative.RefreshProjects" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationGcpNative.RefreshProjects" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationGcpNative.RefreshProjects" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationGcpNative -Operation RefreshProjects
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationGcpNative -Op RestoreGceInstance
# -------------------------------------------------------------------

$query = New-RscMutationGcpNative -Op RestoreGceInstance
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationGcpNative.RestoreGceInstance" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationGcpNative.RestoreGceInstance" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationGcpNative.RestoreGceInstance" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationGcpNative -Operation RestoreGceInstance
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationHost -Op BulkDelete
# -------------------------------------------------------------------

$query = New-RscMutationHost -Op BulkDelete
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHost.BulkDelete" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHost.BulkDelete" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHost.BulkDelete" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHost -Operation BulkDelete
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHost -Op BulkRefresh
# -------------------------------------------------------------------

$query = New-RscMutationHost -Op BulkRefresh
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHost.BulkRefresh" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHost.BulkRefresh" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHost.BulkRefresh" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHost -Operation BulkRefresh
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHost -Op BulkRegister
# -------------------------------------------------------------------

$query = New-RscMutationHost -Op BulkRegister
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHost.BulkRegister" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHost.BulkRegister" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHost.BulkRegister" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHost -Operation BulkRegister
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHost -Op BulkRegisterAsync
# -------------------------------------------------------------------

$query = New-RscMutationHost -Op BulkRegisterAsync
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHost.BulkRegisterAsync" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHost.BulkRegisterAsync" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHost.BulkRegisterAsync" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHost -Operation BulkRegisterAsync
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHost -Op BulkUpdate
# -------------------------------------------------------------------

$query = New-RscMutationHost -Op BulkUpdate
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHost.BulkUpdate" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHost.BulkUpdate" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHost.BulkUpdate" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHost -Operation BulkUpdate
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHost -Op ChangeVfd
# -------------------------------------------------------------------

$query = New-RscMutationHost -Op ChangeVfd
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHost.ChangeVfd" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHost.ChangeVfd" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHost.ChangeVfd" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHost -Operation ChangeVfd
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHost -Op Refresh
# -------------------------------------------------------------------

$query = New-RscMutationHost -Op Refresh
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHost.Refresh" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHost.Refresh" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHost.Refresh" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHost -Operation Refresh
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationHyperv -Op BatchExportVm
# -------------------------------------------------------------------

$query = New-RscMutationHyperv -Op BatchExportVm
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHyperv.BatchExportVm" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHyperv.BatchExportVm" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHyperv.BatchExportVm" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHyperv -Operation BatchExportVm
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHyperv -Op BatchInstantRecoverVm
# -------------------------------------------------------------------

$query = New-RscMutationHyperv -Op BatchInstantRecoverVm
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHyperv.BatchInstantRecoverVm" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHyperv.BatchInstantRecoverVm" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHyperv.BatchInstantRecoverVm" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHyperv -Operation BatchInstantRecoverVm
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHyperv -Op BatchMountVm
# -------------------------------------------------------------------

$query = New-RscMutationHyperv -Op BatchMountVm
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHyperv.BatchMountVm" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHyperv.BatchMountVm" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHyperv.BatchMountVm" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHyperv -Operation BatchMountVm
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHyperv -Op BatchOnDemandBackupVm
# -------------------------------------------------------------------

$query = New-RscMutationHyperv -Op BatchOnDemandBackupVm
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHyperv.BatchOnDemandBackupVm" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHyperv.BatchOnDemandBackupVm" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHyperv.BatchOnDemandBackupVm" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHyperv -Operation BatchOnDemandBackupVm
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHyperv -Op CreateVirtualMachineSnapshotDiskMount
# -------------------------------------------------------------------

$query = New-RscMutationHyperv -Op CreateVirtualMachineSnapshotDiskMount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHyperv.CreateVirtualMachineSnapshotDiskMount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHyperv.CreateVirtualMachineSnapshotDiskMount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHyperv.CreateVirtualMachineSnapshotDiskMount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHyperv -Operation CreateVirtualMachineSnapshotDiskMount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHyperv -Op CreateVirtualMachineSnapshotMount
# -------------------------------------------------------------------

$query = New-RscMutationHyperv -Op CreateVirtualMachineSnapshotMount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHyperv.CreateVirtualMachineSnapshotMount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHyperv.CreateVirtualMachineSnapshotMount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHyperv.CreateVirtualMachineSnapshotMount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHyperv -Operation CreateVirtualMachineSnapshotMount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHyperv -Op DeleteAllSnapshots
# -------------------------------------------------------------------

$query = New-RscMutationHyperv -Op DeleteAllSnapshots
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHyperv.DeleteAllSnapshots" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHyperv.DeleteAllSnapshots" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHyperv.DeleteAllSnapshots" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHyperv -Operation DeleteAllSnapshots
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHyperv -Op DeleteVirtualMachineSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationHyperv -Op DeleteVirtualMachineSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHyperv.DeleteVirtualMachineSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHyperv.DeleteVirtualMachineSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHyperv.DeleteVirtualMachineSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHyperv -Operation DeleteVirtualMachineSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHyperv -Op DeleteVirtualMachineSnapshotMount
# -------------------------------------------------------------------

$query = New-RscMutationHyperv -Op DeleteVirtualMachineSnapshotMount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHyperv.DeleteVirtualMachineSnapshotMount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHyperv.DeleteVirtualMachineSnapshotMount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHyperv.DeleteVirtualMachineSnapshotMount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHyperv -Operation DeleteVirtualMachineSnapshotMount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHyperv -Op DownloadSnapshotFromLocation
# -------------------------------------------------------------------

$query = New-RscMutationHyperv -Op DownloadSnapshotFromLocation
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHyperv.DownloadSnapshotFromLocation" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHyperv.DownloadSnapshotFromLocation" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHyperv.DownloadSnapshotFromLocation" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHyperv -Operation DownloadSnapshotFromLocation
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHyperv -Op DownloadVirtualMachineLevelFiles
# -------------------------------------------------------------------

$query = New-RscMutationHyperv -Op DownloadVirtualMachineLevelFiles
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHyperv.DownloadVirtualMachineLevelFiles" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHyperv.DownloadVirtualMachineLevelFiles" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHyperv.DownloadVirtualMachineLevelFiles" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHyperv -Operation DownloadVirtualMachineLevelFiles
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHyperv -Op DownloadVirtualMachineSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationHyperv -Op DownloadVirtualMachineSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHyperv.DownloadVirtualMachineSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHyperv.DownloadVirtualMachineSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHyperv.DownloadVirtualMachineSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHyperv -Operation DownloadVirtualMachineSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHyperv -Op DownloadVirtualMachineSnapshotFiles
# -------------------------------------------------------------------

$query = New-RscMutationHyperv -Op DownloadVirtualMachineSnapshotFiles
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHyperv.DownloadVirtualMachineSnapshotFiles" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHyperv.DownloadVirtualMachineSnapshotFiles" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHyperv.DownloadVirtualMachineSnapshotFiles" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHyperv -Operation DownloadVirtualMachineSnapshotFiles
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHyperv -Op ExportVirtualMachine
# -------------------------------------------------------------------

$query = New-RscMutationHyperv -Op ExportVirtualMachine
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHyperv.ExportVirtualMachine" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHyperv.ExportVirtualMachine" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHyperv.ExportVirtualMachine" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHyperv -Operation ExportVirtualMachine
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHyperv -Op InplaceExportVirtualMachine
# -------------------------------------------------------------------

$query = New-RscMutationHyperv -Op InplaceExportVirtualMachine
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHyperv.InplaceExportVirtualMachine" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHyperv.InplaceExportVirtualMachine" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHyperv.InplaceExportVirtualMachine" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHyperv -Operation InplaceExportVirtualMachine
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHyperv -Op InstantRecoverVirtualMachineSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationHyperv -Op InstantRecoverVirtualMachineSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHyperv.InstantRecoverVirtualMachineSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHyperv.InstantRecoverVirtualMachineSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHyperv.InstantRecoverVirtualMachineSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHyperv -Operation InstantRecoverVirtualMachineSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHyperv -Op OnDemandSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationHyperv -Op OnDemandSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHyperv.OnDemandSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHyperv.OnDemandSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHyperv.OnDemandSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHyperv -Operation OnDemandSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHyperv -Op RefreshScvmm
# -------------------------------------------------------------------

$query = New-RscMutationHyperv -Op RefreshScvmm
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHyperv.RefreshScvmm" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHyperv.RefreshScvmm" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHyperv.RefreshScvmm" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHyperv -Operation RefreshScvmm
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHyperv -Op RefreshServer
# -------------------------------------------------------------------

$query = New-RscMutationHyperv -Op RefreshServer
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHyperv.RefreshServer" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHyperv.RefreshServer" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHyperv.RefreshServer" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHyperv -Operation RefreshServer
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHyperv -Op RegisterAgentVirtualMachine
# -------------------------------------------------------------------

$query = New-RscMutationHyperv -Op RegisterAgentVirtualMachine
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHyperv.RegisterAgentVirtualMachine" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHyperv.RegisterAgentVirtualMachine" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHyperv.RegisterAgentVirtualMachine" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHyperv -Operation RegisterAgentVirtualMachine
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHyperv -Op RegisterScvmm
# -------------------------------------------------------------------

$query = New-RscMutationHyperv -Op RegisterScvmm
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHyperv.RegisterScvmm" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHyperv.RegisterScvmm" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHyperv.RegisterScvmm" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHyperv -Operation RegisterScvmm
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHyperv -Op RestoreVirtualMachineSnapshotFiles
# -------------------------------------------------------------------

$query = New-RscMutationHyperv -Op RestoreVirtualMachineSnapshotFiles
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHyperv.RestoreVirtualMachineSnapshotFiles" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHyperv.RestoreVirtualMachineSnapshotFiles" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHyperv.RestoreVirtualMachineSnapshotFiles" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHyperv -Operation RestoreVirtualMachineSnapshotFiles
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHyperv -Op ScvmmDelete
# -------------------------------------------------------------------

$query = New-RscMutationHyperv -Op ScvmmDelete
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHyperv.ScvmmDelete" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHyperv.ScvmmDelete" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHyperv.ScvmmDelete" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHyperv -Operation ScvmmDelete
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHyperv -Op ScvmmUpdate
# -------------------------------------------------------------------

$query = New-RscMutationHyperv -Op ScvmmUpdate
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHyperv.ScvmmUpdate" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHyperv.ScvmmUpdate" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHyperv.ScvmmUpdate" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHyperv -Operation ScvmmUpdate
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHyperv -Op UpdateVirtualMachine
# -------------------------------------------------------------------

$query = New-RscMutationHyperv -Op UpdateVirtualMachine
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHyperv.UpdateVirtualMachine" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHyperv.UpdateVirtualMachine" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHyperv.UpdateVirtualMachine" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHyperv -Operation UpdateVirtualMachine
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationHyperv -Op UpdateVirtualMachineSnapshotMount
# -------------------------------------------------------------------

$query = New-RscMutationHyperv -Op UpdateVirtualMachineSnapshotMount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationHyperv.UpdateVirtualMachineSnapshotMount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationHyperv.UpdateVirtualMachineSnapshotMount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationHyperv.UpdateVirtualMachineSnapshotMount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationHyperv -Operation UpdateVirtualMachineSnapshotMount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationIntegration -Op CreateIntegration
# -------------------------------------------------------------------

$query = New-RscMutationIntegration -Op CreateIntegration
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationIntegration.CreateIntegration" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationIntegration.CreateIntegration" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationIntegration.CreateIntegration" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationIntegration -Operation CreateIntegration
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationIntegration -Op CreateIntegrations
# -------------------------------------------------------------------

$query = New-RscMutationIntegration -Op CreateIntegrations
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationIntegration.CreateIntegrations" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationIntegration.CreateIntegrations" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationIntegration.CreateIntegrations" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationIntegration -Operation CreateIntegrations
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationIntegration -Op DeleteIntegration
# -------------------------------------------------------------------

$query = New-RscMutationIntegration -Op DeleteIntegration
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationIntegration.DeleteIntegration" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationIntegration.DeleteIntegration" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationIntegration.DeleteIntegration" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationIntegration -Operation DeleteIntegration
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationIntegration -Op DeleteIntegrations
# -------------------------------------------------------------------

$query = New-RscMutationIntegration -Op DeleteIntegrations
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationIntegration.DeleteIntegrations" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationIntegration.DeleteIntegrations" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationIntegration.DeleteIntegrations" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationIntegration -Operation DeleteIntegrations
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationIntegration -Op UpdateIntegration
# -------------------------------------------------------------------

$query = New-RscMutationIntegration -Op UpdateIntegration
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationIntegration.UpdateIntegration" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationIntegration.UpdateIntegration" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationIntegration.UpdateIntegration" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationIntegration -Operation UpdateIntegration
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationIntegration -Op UpdateIntegrations
# -------------------------------------------------------------------

$query = New-RscMutationIntegration -Op UpdateIntegrations
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationIntegration.UpdateIntegrations" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationIntegration.UpdateIntegrations" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationIntegration.UpdateIntegrations" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationIntegration -Operation UpdateIntegrations
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationK8s -Op AddCluster
# -------------------------------------------------------------------

$query = New-RscMutationK8s -Op AddCluster
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationK8s.AddCluster" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationK8s.AddCluster" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationK8s.AddCluster" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationK8s -Operation AddCluster
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationK8s -Op AddProtectionSet
# -------------------------------------------------------------------

$query = New-RscMutationK8s -Op AddProtectionSet
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationK8s.AddProtectionSet" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationK8s.AddProtectionSet" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationK8s.AddProtectionSet" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationK8s -Operation AddProtectionSet
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationK8s -Op ArchiveCluster
# -------------------------------------------------------------------

$query = New-RscMutationK8s -Op ArchiveCluster
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationK8s.ArchiveCluster" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationK8s.ArchiveCluster" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationK8s.ArchiveCluster" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationK8s -Operation ArchiveCluster
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationK8s -Op CreateAgentManifest
# -------------------------------------------------------------------

$query = New-RscMutationK8s -Op CreateAgentManifest
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationK8s.CreateAgentManifest" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationK8s.CreateAgentManifest" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationK8s.CreateAgentManifest" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationK8s -Operation CreateAgentManifest
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationK8s -Op CreateCluster
# -------------------------------------------------------------------

$query = New-RscMutationK8s -Op CreateCluster
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationK8s.CreateCluster" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationK8s.CreateCluster" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationK8s.CreateCluster" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationK8s -Operation CreateCluster
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationK8s -Op CreateNamespaceSnapshots
# -------------------------------------------------------------------

$query = New-RscMutationK8s -Op CreateNamespaceSnapshots
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationK8s.CreateNamespaceSnapshots" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationK8s.CreateNamespaceSnapshots" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationK8s.CreateNamespaceSnapshots" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationK8s -Operation CreateNamespaceSnapshots
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationK8s -Op CreateProtectionSetSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationK8s -Op CreateProtectionSetSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationK8s.CreateProtectionSetSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationK8s.CreateProtectionSetSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationK8s.CreateProtectionSetSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationK8s -Operation CreateProtectionSetSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationK8s -Op DeleteCluster
# -------------------------------------------------------------------

$query = New-RscMutationK8s -Op DeleteCluster
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationK8s.DeleteCluster" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationK8s.DeleteCluster" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationK8s.DeleteCluster" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationK8s -Operation DeleteCluster
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationK8s -Op DeleteProtectionSet
# -------------------------------------------------------------------

$query = New-RscMutationK8s -Op DeleteProtectionSet
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationK8s.DeleteProtectionSet" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationK8s.DeleteProtectionSet" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationK8s.DeleteProtectionSet" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationK8s -Operation DeleteProtectionSet
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationK8s -Op ExportNamespace
# -------------------------------------------------------------------

$query = New-RscMutationK8s -Op ExportNamespace
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationK8s.ExportNamespace" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationK8s.ExportNamespace" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationK8s.ExportNamespace" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationK8s -Operation ExportNamespace
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationK8s -Op ExportProtectionSetSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationK8s -Op ExportProtectionSetSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationK8s.ExportProtectionSetSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationK8s.ExportProtectionSetSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationK8s.ExportProtectionSetSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationK8s -Operation ExportProtectionSetSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationK8s -Op RefreshCluster
# -------------------------------------------------------------------

$query = New-RscMutationK8s -Op RefreshCluster
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationK8s.RefreshCluster" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationK8s.RefreshCluster" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationK8s.RefreshCluster" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationK8s -Operation RefreshCluster
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationK8s -Op RefreshV2Cluster
# -------------------------------------------------------------------

$query = New-RscMutationK8s -Op RefreshV2Cluster
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationK8s.RefreshV2Cluster" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationK8s.RefreshV2Cluster" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationK8s.RefreshV2Cluster" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationK8s -Operation RefreshV2Cluster
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationK8s -Op RestoreNamespace
# -------------------------------------------------------------------

$query = New-RscMutationK8s -Op RestoreNamespace
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationK8s.RestoreNamespace" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationK8s.RestoreNamespace" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationK8s.RestoreNamespace" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationK8s -Operation RestoreNamespace
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationK8s -Op RestoreProtectionSetSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationK8s -Op RestoreProtectionSetSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationK8s.RestoreProtectionSetSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationK8s.RestoreProtectionSetSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationK8s.RestoreProtectionSetSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationK8s -Operation RestoreProtectionSetSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationK8s -Op UpdateCluster
# -------------------------------------------------------------------

$query = New-RscMutationK8s -Op UpdateCluster
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationK8s.UpdateCluster" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationK8s.UpdateCluster" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationK8s.UpdateCluster" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationK8s -Operation UpdateCluster
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationK8s -Op UpdateProtectionSet
# -------------------------------------------------------------------

$query = New-RscMutationK8s -Op UpdateProtectionSet
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationK8s.UpdateProtectionSet" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationK8s.UpdateProtectionSet" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationK8s.UpdateProtectionSet" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationK8s -Operation UpdateProtectionSet
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationLdap -Op DeletePrincipals
# -------------------------------------------------------------------

$query = New-RscMutationLdap -Op DeletePrincipals
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationLdap.DeletePrincipals" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationLdap.DeletePrincipals" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationLdap.DeletePrincipals" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationLdap -Operation DeletePrincipals
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationLdap -Op RemoveIntegration
# -------------------------------------------------------------------

$query = New-RscMutationLdap -Op RemoveIntegration
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationLdap.RemoveIntegration" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationLdap.RemoveIntegration" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationLdap.RemoveIntegration" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationLdap -Operation RemoveIntegration
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationLdap -Op SetMfaSetting
# -------------------------------------------------------------------

$query = New-RscMutationLdap -Op SetMfaSetting
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationLdap.SetMfaSetting" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationLdap.SetMfaSetting" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationLdap.SetMfaSetting" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationLdap -Operation SetMfaSetting
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationLdap -Op UpdateIntegration
# -------------------------------------------------------------------

$query = New-RscMutationLdap -Op UpdateIntegration
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationLdap.UpdateIntegration" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationLdap.UpdateIntegration" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationLdap.UpdateIntegration" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationLdap -Operation UpdateIntegration
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationM365 -Op BackupMailbox
# -------------------------------------------------------------------

$query = New-RscMutationM365 -Op BackupMailbox
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationM365.BackupMailbox" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationM365.BackupMailbox" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationM365.BackupMailbox" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationM365 -Operation BackupMailbox
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationM365 -Op BackupOnedrive
# -------------------------------------------------------------------

$query = New-RscMutationM365 -Op BackupOnedrive
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationM365.BackupOnedrive" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationM365.BackupOnedrive" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationM365.BackupOnedrive" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationM365 -Operation BackupOnedrive
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationM365 -Op BackupSharepointDrive
# -------------------------------------------------------------------

$query = New-RscMutationM365 -Op BackupSharepointDrive
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationM365.BackupSharepointDrive" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationM365.BackupSharepointDrive" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationM365.BackupSharepointDrive" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationM365 -Operation BackupSharepointDrive
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationM365 -Op BackupTeam
# -------------------------------------------------------------------

$query = New-RscMutationM365 -Op BackupTeam
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationM365.BackupTeam" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationM365.BackupTeam" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationM365.BackupTeam" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationM365 -Operation BackupTeam
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationManagedVolume -Op Add
# -------------------------------------------------------------------

$query = New-RscMutationManagedVolume -Op Add
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationManagedVolume.Add" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationManagedVolume.Add" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationManagedVolume.Add" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationManagedVolume -Operation Add
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationManagedVolume -Op BeginSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationManagedVolume -Op BeginSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationManagedVolume.BeginSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationManagedVolume.BeginSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationManagedVolume.BeginSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationManagedVolume -Operation BeginSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationManagedVolume -Op Delete
# -------------------------------------------------------------------

$query = New-RscMutationManagedVolume -Op Delete
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationManagedVolume.Delete" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationManagedVolume.Delete" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationManagedVolume.Delete" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationManagedVolume -Operation Delete
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationManagedVolume -Op DeleteSnapshotExport
# -------------------------------------------------------------------

$query = New-RscMutationManagedVolume -Op DeleteSnapshotExport
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationManagedVolume.DeleteSnapshotExport" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationManagedVolume.DeleteSnapshotExport" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationManagedVolume.DeleteSnapshotExport" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationManagedVolume -Operation DeleteSnapshotExport
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationManagedVolume -Op DownloadFiles
# -------------------------------------------------------------------

$query = New-RscMutationManagedVolume -Op DownloadFiles
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationManagedVolume.DownloadFiles" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationManagedVolume.DownloadFiles" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationManagedVolume.DownloadFiles" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationManagedVolume -Operation DownloadFiles
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationManagedVolume -Op DownloadFromLocation
# -------------------------------------------------------------------

$query = New-RscMutationManagedVolume -Op DownloadFromLocation
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationManagedVolume.DownloadFromLocation" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationManagedVolume.DownloadFromLocation" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationManagedVolume.DownloadFromLocation" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationManagedVolume -Operation DownloadFromLocation
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationManagedVolume -Op EndSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationManagedVolume -Op EndSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationManagedVolume.EndSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationManagedVolume.EndSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationManagedVolume.EndSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationManagedVolume -Operation EndSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationManagedVolume -Op ExportSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationManagedVolume -Op ExportSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationManagedVolume.ExportSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationManagedVolume.ExportSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationManagedVolume.ExportSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationManagedVolume -Operation ExportSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationManagedVolume -Op Resize
# -------------------------------------------------------------------

$query = New-RscMutationManagedVolume -Op Resize
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationManagedVolume.Resize" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationManagedVolume.Resize" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationManagedVolume.Resize" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationManagedVolume -Operation Resize
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationManagedVolume -Op TakeOnDemandSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationManagedVolume -Op TakeOnDemandSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationManagedVolume.TakeOnDemandSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationManagedVolume.TakeOnDemandSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationManagedVolume.TakeOnDemandSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationManagedVolume -Operation TakeOnDemandSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationManagedVolume -Op Update
# -------------------------------------------------------------------

$query = New-RscMutationManagedVolume -Op Update
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationManagedVolume.Update" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationManagedVolume.Update" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationManagedVolume.Update" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationManagedVolume -Operation Update
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationMisc -Op AddAdGroupsToHierarchy
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op AddAdGroupsToHierarchy
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.AddAdGroupsToHierarchy" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.AddAdGroupsToHierarchy" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.AddAdGroupsToHierarchy" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation AddAdGroupsToHierarchy
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op AddConfiguredGroupToHierarchy
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op AddConfiguredGroupToHierarchy
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.AddConfiguredGroupToHierarchy" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.AddConfiguredGroupToHierarchy" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.AddConfiguredGroupToHierarchy" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation AddConfiguredGroupToHierarchy
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op AddCustomIntelFeed
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op AddCustomIntelFeed
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.AddCustomIntelFeed" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.AddCustomIntelFeed" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.AddCustomIntelFeed" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation AddCustomIntelFeed
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op AddInventoryWorkloads
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op AddInventoryWorkloads
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.AddInventoryWorkloads" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.AddInventoryWorkloads" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.AddInventoryWorkloads" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation AddInventoryWorkloads
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op AddRoleAssignments
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op AddRoleAssignments
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.AddRoleAssignments" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.AddRoleAssignments" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.AddRoleAssignments" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation AddRoleAssignments
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op AddVlan
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op AddVlan
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.AddVlan" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.AddVlan" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.AddVlan" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation AddVlan
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op AddVmAppConsistentSpecs
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op AddVmAppConsistentSpecs
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.AddVmAppConsistentSpecs" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.AddVmAppConsistentSpecs" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.AddVmAppConsistentSpecs" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation AddVmAppConsistentSpecs
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op AirGapStatus
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op AirGapStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.AirGapStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.AirGapStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.AirGapStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation AirGapStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op ArchiveCrawl
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op ArchiveCrawl
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.ArchiveCrawl" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.ArchiveCrawl" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.ArchiveCrawl" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation ArchiveCrawl
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op AssignProtection
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op AssignProtection
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.AssignProtection" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.AssignProtection" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.AssignProtection" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation AssignProtection
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op BatchDeassignRoleFromUserGroups
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op BatchDeassignRoleFromUserGroups
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.BatchDeassignRoleFromUserGroups" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.BatchDeassignRoleFromUserGroups" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.BatchDeassignRoleFromUserGroups" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation BatchDeassignRoleFromUserGroups
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op BulkCreateNasFilesets
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op BulkCreateNasFilesets
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.BulkCreateNasFilesets" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.BulkCreateNasFilesets" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.BulkCreateNasFilesets" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation BulkCreateNasFilesets
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op CancelDownloadPackage
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op CancelDownloadPackage
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.CancelDownloadPackage" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.CancelDownloadPackage" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.CancelDownloadPackage" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation CancelDownloadPackage
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op CancelScheduledUpgrade
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op CancelScheduledUpgrade
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.CancelScheduledUpgrade" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.CancelScheduledUpgrade" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.CancelScheduledUpgrade" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation CancelScheduledUpgrade
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op CancelTaskchain
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op CancelTaskchain
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.CancelTaskchain" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.CancelTaskchain" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.CancelTaskchain" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation CancelTaskchain
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op ChangePassword
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op ChangePassword
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.ChangePassword" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.ChangePassword" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.ChangePassword" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation ChangePassword
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op CreateCustomAnalyzer
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op CreateCustomAnalyzer
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.CreateCustomAnalyzer" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.CreateCustomAnalyzer" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.CreateCustomAnalyzer" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation CreateCustomAnalyzer
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op CreateEventDigestBatch
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op CreateEventDigestBatch
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.CreateEventDigestBatch" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.CreateEventDigestBatch" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.CreateEventDigestBatch" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation CreateEventDigestBatch
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op CreateGuestCredential
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op CreateGuestCredential
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.CreateGuestCredential" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.CreateGuestCredential" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.CreateGuestCredential" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation CreateGuestCredential
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op CreateLegalHold
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op CreateLegalHold
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.CreateLegalHold" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.CreateLegalHold" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.CreateLegalHold" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation CreateLegalHold
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op CreateOnDemandVolumeGroupBackup
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op CreateOnDemandVolumeGroupBackup
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.CreateOnDemandVolumeGroupBackup" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.CreateOnDemandVolumeGroupBackup" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.CreateOnDemandVolumeGroupBackup" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation CreateOnDemandVolumeGroupBackup
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op CreateVappsInstantRecovery
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op CreateVappsInstantRecovery
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.CreateVappsInstantRecovery" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.CreateVappsInstantRecovery" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.CreateVappsInstantRecovery" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation CreateVappsInstantRecovery
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op DeactivateCustomAnalyzer
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op DeactivateCustomAnalyzer
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.DeactivateCustomAnalyzer" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.DeactivateCustomAnalyzer" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.DeactivateCustomAnalyzer" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation DeactivateCustomAnalyzer
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op DeleteAdGroupsFromHierarchy
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op DeleteAdGroupsFromHierarchy
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.DeleteAdGroupsFromHierarchy" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.DeleteAdGroupsFromHierarchy" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.DeleteAdGroupsFromHierarchy" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation DeleteAdGroupsFromHierarchy
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op DeleteDistributionListDigestBatch
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op DeleteDistributionListDigestBatch
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.DeleteDistributionListDigestBatch" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.DeleteDistributionListDigestBatch" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.DeleteDistributionListDigestBatch" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation DeleteDistributionListDigestBatch
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op DeleteEventDigest
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op DeleteEventDigest
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.DeleteEventDigest" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.DeleteEventDigest" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.DeleteEventDigest" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation DeleteEventDigest
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op DeleteGuestCredentialById
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op DeleteGuestCredentialById
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.DeleteGuestCredentialById" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.DeleteGuestCredentialById" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.DeleteGuestCredentialById" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation DeleteGuestCredentialById
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op DeleteIntelFeed
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op DeleteIntelFeed
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.DeleteIntelFeed" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.DeleteIntelFeed" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.DeleteIntelFeed" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation DeleteIntelFeed
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op DeleteVolumeGroupMount
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op DeleteVolumeGroupMount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.DeleteVolumeGroupMount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.DeleteVolumeGroupMount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.DeleteVolumeGroupMount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation DeleteVolumeGroupMount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op DeregisterPrivateContainerRegistry
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op DeregisterPrivateContainerRegistry
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.DeregisterPrivateContainerRegistry" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.DeregisterPrivateContainerRegistry" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.DeregisterPrivateContainerRegistry" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation DeregisterPrivateContainerRegistry
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op DisableSupportUserAccess
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op DisableSupportUserAccess
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.DisableSupportUserAccess" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.DisableSupportUserAccess" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.DisableSupportUserAccess" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation DisableSupportUserAccess
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op DissolveLegalHold
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op DissolveLegalHold
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.DissolveLegalHold" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.DissolveLegalHold" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.DissolveLegalHold" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation DissolveLegalHold
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op EnableAutomaticFmdUpload
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op EnableAutomaticFmdUpload
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.EnableAutomaticFmdUpload" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.EnableAutomaticFmdUpload" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.EnableAutomaticFmdUpload" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation EnableAutomaticFmdUpload
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op EnableDisableAppConsistency
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op EnableDisableAppConsistency
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.EnableDisableAppConsistency" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.EnableDisableAppConsistency" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.EnableDisableAppConsistency" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation EnableDisableAppConsistency
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op EnableSupportUserAccess
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op EnableSupportUserAccess
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.EnableSupportUserAccess" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.EnableSupportUserAccess" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.EnableSupportUserAccess" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation EnableSupportUserAccess
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op ExcludeVmDisks
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op ExcludeVmDisks
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.ExcludeVmDisks" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.ExcludeVmDisks" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.ExcludeVmDisks" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation ExcludeVmDisks
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op ExpireSnoozedDirectories
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op ExpireSnoozedDirectories
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.ExpireSnoozedDirectories" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.ExpireSnoozedDirectories" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.ExpireSnoozedDirectories" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation ExpireSnoozedDirectories
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op GenerateConfigProtectionRestoreForm
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op GenerateConfigProtectionRestoreForm
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.GenerateConfigProtectionRestoreForm" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.GenerateConfigProtectionRestoreForm" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.GenerateConfigProtectionRestoreForm" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation GenerateConfigProtectionRestoreForm
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op GenerateSupportBundle
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op GenerateSupportBundle
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.GenerateSupportBundle" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.GenerateSupportBundle" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.GenerateSupportBundle" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation GenerateSupportBundle
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op GetDownloadUrl
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op GetDownloadUrl
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.GetDownloadUrl" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.GetDownloadUrl" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.GetDownloadUrl" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation GetDownloadUrl
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op HideRevealNasNamespaces
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op HideRevealNasNamespaces
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.HideRevealNasNamespaces" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.HideRevealNasNamespaces" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.HideRevealNasNamespaces" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation HideRevealNasNamespaces
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op InstallIoFilter
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op InstallIoFilter
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.InstallIoFilter" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.InstallIoFilter" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.InstallIoFilter" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation InstallIoFilter
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op InviteSsoGroup
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op InviteSsoGroup
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.InviteSsoGroup" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.InviteSsoGroup" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.InviteSsoGroup" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation InviteSsoGroup
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op ListCidrsForComputeSetting
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op ListCidrsForComputeSetting
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.ListCidrsForComputeSetting" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.ListCidrsForComputeSetting" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.ListCidrsForComputeSetting" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation ListCidrsForComputeSetting
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op LockUsersByAdmin
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op LockUsersByAdmin
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.LockUsersByAdmin" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.LockUsersByAdmin" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.LockUsersByAdmin" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation LockUsersByAdmin
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op LogoutFromRubrikSupportPortal
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op LogoutFromRubrikSupportPortal
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.LogoutFromRubrikSupportPortal" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.LogoutFromRubrikSupportPortal" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.LogoutFromRubrikSupportPortal" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation LogoutFromRubrikSupportPortal
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op MakePrimary
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op MakePrimary
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.MakePrimary" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.MakePrimary" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.MakePrimary" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation MakePrimary
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op ModifyEventDigestBatch
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op ModifyEventDigestBatch
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.ModifyEventDigestBatch" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.ModifyEventDigestBatch" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.ModifyEventDigestBatch" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation ModifyEventDigestBatch
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op ModifyIpmi
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op ModifyIpmi
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.ModifyIpmi" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.ModifyIpmi" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.ModifyIpmi" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation ModifyIpmi
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op MountDisk
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op MountDisk
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.MountDisk" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.MountDisk" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.MountDisk" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation MountDisk
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op NotificationForGetLicense
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op NotificationForGetLicense
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.NotificationForGetLicense" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.NotificationForGetLicense" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.NotificationForGetLicense" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation NotificationForGetLicense
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op RecoverCloudDirectMultiPaths
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op RecoverCloudDirectMultiPaths
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.RecoverCloudDirectMultiPaths" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.RecoverCloudDirectMultiPaths" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.RecoverCloudDirectMultiPaths" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation RecoverCloudDirectMultiPaths
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op RecoverCloudDirectPath
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op RecoverCloudDirectPath
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.RecoverCloudDirectPath" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.RecoverCloudDirectPath" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.RecoverCloudDirectPath" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation RecoverCloudDirectPath
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op RefreshDomain
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op RefreshDomain
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.RefreshDomain" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.RefreshDomain" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.RefreshDomain" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation RefreshDomain
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op RefreshGlobalManagerConnectivityStatus
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op RefreshGlobalManagerConnectivityStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.RefreshGlobalManagerConnectivityStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.RefreshGlobalManagerConnectivityStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.RefreshGlobalManagerConnectivityStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation RefreshGlobalManagerConnectivityStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op RemoveDisk
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op RemoveDisk
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.RemoveDisk" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.RemoveDisk" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.RemoveDisk" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation RemoveDisk
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op RemoveInventoryWorkloads
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op RemoveInventoryWorkloads
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.RemoveInventoryWorkloads" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.RemoveInventoryWorkloads" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.RemoveInventoryWorkloads" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation RemoveInventoryWorkloads
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op RemovePrivateEndpointList
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op RemovePrivateEndpointList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.RemovePrivateEndpointList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.RemovePrivateEndpointList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.RemovePrivateEndpointList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation RemovePrivateEndpointList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op RemoveProxyConfig
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op RemoveProxyConfig
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.RemoveProxyConfig" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.RemoveProxyConfig" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.RemoveProxyConfig" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation RemoveProxyConfig
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op RemoveVlans
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op RemoveVlans
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.RemoveVlans" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.RemoveVlans" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.RemoveVlans" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation RemoveVlans
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op ReseedLogShippingSecondary
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op ReseedLogShippingSecondary
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.ReseedLogShippingSecondary" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.ReseedLogShippingSecondary" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.ReseedLogShippingSecondary" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation ReseedLogShippingSecondary
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op ResetAllOrgUsersPasswords
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op ResetAllOrgUsersPasswords
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.ResetAllOrgUsersPasswords" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.ResetAllOrgUsersPasswords" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.ResetAllOrgUsersPasswords" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation ResetAllOrgUsersPasswords
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op ResetUsersPasswordsWithUserIds
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op ResetUsersPasswordsWithUserIds
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.ResetUsersPasswordsWithUserIds" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.ResetUsersPasswordsWithUserIds" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.ResetUsersPasswordsWithUserIds" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation ResetUsersPasswordsWithUserIds
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op ResizeDisk
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op ResizeDisk
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.ResizeDisk" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.ResizeDisk" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.ResizeDisk" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation ResizeDisk
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op ResolveAnomaly
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op ResolveAnomaly
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.ResolveAnomaly" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.ResolveAnomaly" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.ResolveAnomaly" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation ResolveAnomaly
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op ResolveVolumeGroupsConflict
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op ResolveVolumeGroupsConflict
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.ResolveVolumeGroupsConflict" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.ResolveVolumeGroupsConflict" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.ResolveVolumeGroupsConflict" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation ResolveVolumeGroupsConflict
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op RetryBackup
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op RetryBackup
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.RetryBackup" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.RetryBackup" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.RetryBackup" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation RetryBackup
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op RetryDownloadPackageJob
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op RetryDownloadPackageJob
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.RetryDownloadPackageJob" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.RetryDownloadPackageJob" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.RetryDownloadPackageJob" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation RetryDownloadPackageJob
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op RevokeAllOrgRoles
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op RevokeAllOrgRoles
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.RevokeAllOrgRoles" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.RevokeAllOrgRoles" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.RevokeAllOrgRoles" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation RevokeAllOrgRoles
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op RunCustomAnalyzer
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op RunCustomAnalyzer
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.RunCustomAnalyzer" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.RunCustomAnalyzer" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.RunCustomAnalyzer" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation RunCustomAnalyzer
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op ScheduleUpgradeBatchJob
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op ScheduleUpgradeBatchJob
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.ScheduleUpgradeBatchJob" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.ScheduleUpgradeBatchJob" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.ScheduleUpgradeBatchJob" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation ScheduleUpgradeBatchJob
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op SetAnalyzerRisks
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op SetAnalyzerRisks
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.SetAnalyzerRisks" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.SetAnalyzerRisks" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.SetAnalyzerRisks" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation SetAnalyzerRisks
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op SetBundleApprovalStatus
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op SetBundleApprovalStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.SetBundleApprovalStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.SetBundleApprovalStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.SetBundleApprovalStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation SetBundleApprovalStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op SetCustomerTags
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op SetCustomerTags
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.SetCustomerTags" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.SetCustomerTags" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.SetCustomerTags" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation SetCustomerTags
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op SetDatastoreFreespaceThresholds
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op SetDatastoreFreespaceThresholds
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.SetDatastoreFreespaceThresholds" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.SetDatastoreFreespaceThresholds" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.SetDatastoreFreespaceThresholds" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation SetDatastoreFreespaceThresholds
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op SetIpWhitelistEnabled
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op SetIpWhitelistEnabled
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.SetIpWhitelistEnabled" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.SetIpWhitelistEnabled" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.SetIpWhitelistEnabled" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation SetIpWhitelistEnabled
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op SetMfaSetting
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op SetMfaSetting
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.SetMfaSetting" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.SetMfaSetting" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.SetMfaSetting" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation SetMfaSetting
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op SetPrivateContainerRegistry
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op SetPrivateContainerRegistry
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.SetPrivateContainerRegistry" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.SetPrivateContainerRegistry" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.SetPrivateContainerRegistry" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation SetPrivateContainerRegistry
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op SetTotpConfig
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op SetTotpConfig
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.SetTotpConfig" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.SetTotpConfig" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.SetTotpConfig" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation SetTotpConfig
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op SetUpgradeType
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op SetUpgradeType
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.SetUpgradeType" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.SetUpgradeType" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.SetUpgradeType" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation SetUpgradeType
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op SetUserLevelTotpEnforcement
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op SetUserLevelTotpEnforcement
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.SetUserLevelTotpEnforcement" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.SetUserLevelTotpEnforcement" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.SetUserLevelTotpEnforcement" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation SetUserLevelTotpEnforcement
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op SetWorkloadAlertSetting
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op SetWorkloadAlertSetting
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.SetWorkloadAlertSetting" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.SetWorkloadAlertSetting" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.SetWorkloadAlertSetting" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation SetWorkloadAlertSetting
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op SetupDisk
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op SetupDisk
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.SetupDisk" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.SetupDisk" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.SetupDisk" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation SetupDisk
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op StartCrawl
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op StartCrawl
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.StartCrawl" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.StartCrawl" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.StartCrawl" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation StartCrawl
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op StartDownloadPackageBatchJob
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op StartDownloadPackageBatchJob
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.StartDownloadPackageBatchJob" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.StartDownloadPackageBatchJob" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.StartDownloadPackageBatchJob" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation StartDownloadPackageBatchJob
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op StartExportRdsInstanceJob
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op StartExportRdsInstanceJob
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.StartExportRdsInstanceJob" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.StartExportRdsInstanceJob" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.StartExportRdsInstanceJob" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation StartExportRdsInstanceJob
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op StartPeriodicUpgradePrechecksOnDemandJob
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op StartPeriodicUpgradePrechecksOnDemandJob
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.StartPeriodicUpgradePrechecksOnDemandJob" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.StartPeriodicUpgradePrechecksOnDemandJob" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.StartPeriodicUpgradePrechecksOnDemandJob" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation StartPeriodicUpgradePrechecksOnDemandJob
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op StartUpgradeBatchJob
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op StartUpgradeBatchJob
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.StartUpgradeBatchJob" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.StartUpgradeBatchJob" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.StartUpgradeBatchJob" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation StartUpgradeBatchJob
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op StartVolumeGroupMount
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op StartVolumeGroupMount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.StartVolumeGroupMount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.StartVolumeGroupMount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.StartVolumeGroupMount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation StartVolumeGroupMount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op StopJobInstance
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op StopJobInstance
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.StopJobInstance" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.StopJobInstance" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.StopJobInstance" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation StopJobInstance
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op StopJobInstanceFromEventSeries
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op StopJobInstanceFromEventSeries
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.StopJobInstanceFromEventSeries" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.StopJobInstanceFromEventSeries" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.StopJobInstanceFromEventSeries" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation StopJobInstanceFromEventSeries
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op SupportPortalLogin
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op SupportPortalLogin
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.SupportPortalLogin" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.SupportPortalLogin" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.SupportPortalLogin" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation SupportPortalLogin
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op SwitchProductToOnboardingMode
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op SwitchProductToOnboardingMode
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.SwitchProductToOnboardingMode" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.SwitchProductToOnboardingMode" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.SwitchProductToOnboardingMode" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation SwitchProductToOnboardingMode
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op TriggerCloudComputeConnectivityCheck
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op TriggerCloudComputeConnectivityCheck
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.TriggerCloudComputeConnectivityCheck" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.TriggerCloudComputeConnectivityCheck" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.TriggerCloudComputeConnectivityCheck" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation TriggerCloudComputeConnectivityCheck
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op TriggerExocomputeHealthCheck
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op TriggerExocomputeHealthCheck
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.TriggerExocomputeHealthCheck" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.TriggerExocomputeHealthCheck" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.TriggerExocomputeHealthCheck" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation TriggerExocomputeHealthCheck
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UninstallIoFilter
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UninstallIoFilter
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UninstallIoFilter" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UninstallIoFilter" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UninstallIoFilter" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UninstallIoFilter
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UnlockUsersByAdmin
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UnlockUsersByAdmin
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UnlockUsersByAdmin" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UnlockUsersByAdmin" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UnlockUsersByAdmin" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UnlockUsersByAdmin
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UnmountDisk
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UnmountDisk
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UnmountDisk" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UnmountDisk" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UnmountDisk" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UnmountDisk
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpdateAccountOwner
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpdateAccountOwner
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateAccountOwner" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateAccountOwner" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateAccountOwner" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpdateAccountOwner
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpdateAdGroup
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpdateAdGroup
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateAdGroup" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateAdGroup" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateAdGroup" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpdateAdGroup
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpdateAgentDeploymentSetting
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpdateAgentDeploymentSetting
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateAgentDeploymentSetting" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateAgentDeploymentSetting" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateAgentDeploymentSetting" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpdateAgentDeploymentSetting
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpdateAgentDeploymentSettingInBatch
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpdateAgentDeploymentSettingInBatch
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateAgentDeploymentSettingInBatch" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateAgentDeploymentSettingInBatch" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateAgentDeploymentSettingInBatch" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpdateAgentDeploymentSettingInBatch
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpdateAuthDomainUsersHiddenStatus
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpdateAuthDomainUsersHiddenStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateAuthDomainUsersHiddenStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateAuthDomainUsersHiddenStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateAuthDomainUsersHiddenStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpdateAuthDomainUsersHiddenStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpdateBackupThrottleSetting
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpdateBackupThrottleSetting
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateBackupThrottleSetting" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateBackupThrottleSetting" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateBackupThrottleSetting" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpdateBackupThrottleSetting
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpdateBadDiskLedStatus
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpdateBadDiskLedStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateBadDiskLedStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateBadDiskLedStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateBadDiskLedStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpdateBadDiskLedStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpdateConfiguredGroup
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpdateConfiguredGroup
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateConfiguredGroup" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateConfiguredGroup" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateConfiguredGroup" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpdateConfiguredGroup
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpdateCustomAnalyzer
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpdateCustomAnalyzer
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateCustomAnalyzer" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateCustomAnalyzer" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateCustomAnalyzer" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpdateCustomAnalyzer
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpdateCustomIntelFeed
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpdateCustomIntelFeed
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateCustomIntelFeed" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateCustomIntelFeed" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateCustomIntelFeed" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpdateCustomIntelFeed
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpdateCustomerAppPermissions
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpdateCustomerAppPermissions
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateCustomerAppPermissions" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateCustomerAppPermissions" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateCustomerAppPermissions" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpdateCustomerAppPermissions
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpdateDistributionListDigest
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpdateDistributionListDigest
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateDistributionListDigest" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateDistributionListDigest" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateDistributionListDigest" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpdateDistributionListDigest
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpdateDnsServersAndSearchDomains
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpdateDnsServersAndSearchDomains
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateDnsServersAndSearchDomains" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateDnsServersAndSearchDomains" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateDnsServersAndSearchDomains" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpdateDnsServersAndSearchDomains
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpdateEventDigest
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpdateEventDigest
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateEventDigest" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateEventDigest" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateEventDigest" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpdateEventDigest
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpdateFloatingIps
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpdateFloatingIps
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateFloatingIps" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateFloatingIps" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateFloatingIps" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpdateFloatingIps
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpdateGuestCredential
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpdateGuestCredential
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateGuestCredential" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateGuestCredential" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateGuestCredential" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpdateGuestCredential
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpdateInsightState
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpdateInsightState
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateInsightState" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateInsightState" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateInsightState" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpdateInsightState
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpdateIpWhitelist
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpdateIpWhitelist
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateIpWhitelist" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateIpWhitelist" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateIpWhitelist" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpdateIpWhitelist
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpdateLambdaSettings
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpdateLambdaSettings
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateLambdaSettings" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateLambdaSettings" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateLambdaSettings" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpdateLambdaSettings
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpdateLockoutConfig
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpdateLockoutConfig
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateLockoutConfig" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateLockoutConfig" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateLockoutConfig" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpdateLockoutConfig
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpdateManagedIdentities
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpdateManagedIdentities
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateManagedIdentities" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateManagedIdentities" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateManagedIdentities" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpdateManagedIdentities
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpdateNetworkThrottle
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpdateNetworkThrottle
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateNetworkThrottle" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateNetworkThrottle" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateNetworkThrottle" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpdateNetworkThrottle
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpdateProxyConfig
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpdateProxyConfig
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateProxyConfig" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateProxyConfig" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateProxyConfig" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpdateProxyConfig
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpdateRoleAssignments
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpdateRoleAssignments
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateRoleAssignments" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateRoleAssignments" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateRoleAssignments" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpdateRoleAssignments
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpdateSupportUserAccess
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpdateSupportUserAccess
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateSupportUserAccess" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateSupportUserAccess" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateSupportUserAccess" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpdateSupportUserAccess
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpdateTunnelStatus
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpdateTunnelStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateTunnelStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateTunnelStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateTunnelStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpdateTunnelStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpdateVlan
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpdateVlan
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateVlan" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateVlan" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateVlan" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpdateVlan
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpdateVolumeGroup
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpdateVolumeGroup
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateVolumeGroup" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateVolumeGroup" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateVolumeGroup" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpdateVolumeGroup
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpdateWhitelistedAnalyzers
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpdateWhitelistedAnalyzers
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateWhitelistedAnalyzers" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateWhitelistedAnalyzers" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpdateWhitelistedAnalyzers" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpdateWhitelistedAnalyzers
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpgradeIoFilter
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpgradeIoFilter
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpgradeIoFilter" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpgradeIoFilter" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpgradeIoFilter" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpgradeIoFilter
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op UpgradeToRsc
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op UpgradeToRsc
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.UpgradeToRsc" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.UpgradeToRsc" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.UpgradeToRsc" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation UpgradeToRsc
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op ValidateAndSaveCustomerKmsInfo
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op ValidateAndSaveCustomerKmsInfo
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.ValidateAndSaveCustomerKmsInfo" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.ValidateAndSaveCustomerKmsInfo" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.ValidateAndSaveCustomerKmsInfo" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation ValidateAndSaveCustomerKmsInfo
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op VmMakePrimary
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op VmMakePrimary
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.VmMakePrimary" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.VmMakePrimary" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.VmMakePrimary" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation VmMakePrimary
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMisc -Op WarmSearchCache
# -------------------------------------------------------------------

$query = New-RscMutationMisc -Op WarmSearchCache
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMisc.WarmSearchCache" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMisc.WarmSearchCache" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMisc.WarmSearchCache" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMisc -Operation WarmSearchCache
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationMongo -Op AddSource
# -------------------------------------------------------------------

$query = New-RscMutationMongo -Op AddSource
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMongo.AddSource" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMongo.AddSource" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMongo.AddSource" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMongo -Operation AddSource
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMongo -Op DeleteSource
# -------------------------------------------------------------------

$query = New-RscMutationMongo -Op DeleteSource
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMongo.DeleteSource" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMongo.DeleteSource" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMongo.DeleteSource" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMongo -Operation DeleteSource
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMongo -Op DiscoverSource
# -------------------------------------------------------------------

$query = New-RscMutationMongo -Op DiscoverSource
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMongo.DiscoverSource" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMongo.DiscoverSource" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMongo.DiscoverSource" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMongo -Operation DiscoverSource
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMongo -Op PatchSource
# -------------------------------------------------------------------

$query = New-RscMutationMongo -Op PatchSource
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMongo.PatchSource" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMongo.PatchSource" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMongo.PatchSource" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMongo -Operation PatchSource
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMongo -Op RecoverSource
# -------------------------------------------------------------------

$query = New-RscMutationMongo -Op RecoverSource
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMongo.RecoverSource" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMongo.RecoverSource" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMongo.RecoverSource" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMongo -Operation RecoverSource
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMongo -Op RetryAddSource
# -------------------------------------------------------------------

$query = New-RscMutationMongo -Op RetryAddSource
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMongo.RetryAddSource" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMongo.RetryAddSource" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMongo.RetryAddSource" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMongo -Operation RetryAddSource
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationMongoDb -Op AssignSlaToCollection
# -------------------------------------------------------------------

$query = New-RscMutationMongoDb -Op AssignSlaToCollection
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMongoDb.AssignSlaToCollection" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMongoDb.AssignSlaToCollection" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMongoDb.AssignSlaToCollection" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMongoDb -Operation AssignSlaToCollection
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMongoDb -Op BulkDeleteSources
# -------------------------------------------------------------------

$query = New-RscMutationMongoDb -Op BulkDeleteSources
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMongoDb.BulkDeleteSources" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMongoDb.BulkDeleteSources" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMongoDb.BulkDeleteSources" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMongoDb -Operation BulkDeleteSources
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMongoDb -Op CreateSource
# -------------------------------------------------------------------

$query = New-RscMutationMongoDb -Op CreateSource
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMongoDb.CreateSource" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMongoDb.CreateSource" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMongoDb.CreateSource" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMongoDb -Operation CreateSource
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMongoDb -Op DeleteSource
# -------------------------------------------------------------------

$query = New-RscMutationMongoDb -Op DeleteSource
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMongoDb.DeleteSource" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMongoDb.DeleteSource" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMongoDb.DeleteSource" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMongoDb -Operation DeleteSource
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMongoDb -Op RecoverSource
# -------------------------------------------------------------------

$query = New-RscMutationMongoDb -Op RecoverSource
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMongoDb.RecoverSource" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMongoDb.RecoverSource" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMongoDb.RecoverSource" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMongoDb -Operation RecoverSource
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMongoDb -Op UpdateSource
# -------------------------------------------------------------------

$query = New-RscMutationMongoDb -Op UpdateSource
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMongoDb.UpdateSource" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMongoDb.UpdateSource" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMongoDb.UpdateSource" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMongoDb -Operation UpdateSource
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationMosaic -Op AddStore
# -------------------------------------------------------------------

$query = New-RscMutationMosaic -Op AddStore
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMosaic.AddStore" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMosaic.AddStore" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMosaic.AddStore" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMosaic -Operation AddStore
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMosaic -Op DeleteStore
# -------------------------------------------------------------------

$query = New-RscMutationMosaic -Op DeleteStore
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMosaic.DeleteStore" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMosaic.DeleteStore" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMosaic.DeleteStore" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMosaic -Operation DeleteStore
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMosaic -Op UpdateStore
# -------------------------------------------------------------------

$query = New-RscMutationMosaic -Op UpdateStore
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMosaic.UpdateStore" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMosaic.UpdateStore" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMosaic.UpdateStore" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMosaic -Operation UpdateStore
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationMssql -Op AddHost
# -------------------------------------------------------------------

$query = New-RscMutationMssql -Op AddHost
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMssql.AddHost" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMssql.AddHost" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMssql.AddHost" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMssql -Operation AddHost
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMssql -Op AssignSlaDomainProperties
# -------------------------------------------------------------------

$query = New-RscMutationMssql -Op AssignSlaDomainProperties
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMssql.AssignSlaDomainProperties" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMssql.AssignSlaDomainProperties" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMssql.AssignSlaDomainProperties" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMssql -Operation AssignSlaDomainProperties
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMssql -Op AssignSlaDomainPropertiesAsync
# -------------------------------------------------------------------

$query = New-RscMutationMssql -Op AssignSlaDomainPropertiesAsync
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMssql.AssignSlaDomainPropertiesAsync" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMssql.AssignSlaDomainPropertiesAsync" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMssql.AssignSlaDomainPropertiesAsync" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMssql -Operation AssignSlaDomainPropertiesAsync
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMssql -Op BrowseDatabaseSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationMssql -Op BrowseDatabaseSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMssql.BrowseDatabaseSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMssql.BrowseDatabaseSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMssql.BrowseDatabaseSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMssql -Operation BrowseDatabaseSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMssql -Op BulkCreateOnDemandBackup
# -------------------------------------------------------------------

$query = New-RscMutationMssql -Op BulkCreateOnDemandBackup
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMssql.BulkCreateOnDemandBackup" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMssql.BulkCreateOnDemandBackup" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMssql.BulkCreateOnDemandBackup" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMssql -Operation BulkCreateOnDemandBackup
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMssql -Op BulkUpdateAvailabilityGroup
# -------------------------------------------------------------------

$query = New-RscMutationMssql -Op BulkUpdateAvailabilityGroup
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMssql.BulkUpdateAvailabilityGroup" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMssql.BulkUpdateAvailabilityGroup" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMssql.BulkUpdateAvailabilityGroup" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMssql -Operation BulkUpdateAvailabilityGroup
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMssql -Op BulkUpdateDbs
# -------------------------------------------------------------------

$query = New-RscMutationMssql -Op BulkUpdateDbs
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMssql.BulkUpdateDbs" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMssql.BulkUpdateDbs" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMssql.BulkUpdateDbs" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMssql -Operation BulkUpdateDbs
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMssql -Op BulkUpdateInstance
# -------------------------------------------------------------------

$query = New-RscMutationMssql -Op BulkUpdateInstance
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMssql.BulkUpdateInstance" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMssql.BulkUpdateInstance" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMssql.BulkUpdateInstance" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMssql -Operation BulkUpdateInstance
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMssql -Op BulkUpdatePropertiesOnHost
# -------------------------------------------------------------------

$query = New-RscMutationMssql -Op BulkUpdatePropertiesOnHost
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMssql.BulkUpdatePropertiesOnHost" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMssql.BulkUpdatePropertiesOnHost" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMssql.BulkUpdatePropertiesOnHost" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMssql -Operation BulkUpdatePropertiesOnHost
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMssql -Op BulkUpdatePropertiesOnWindowsCluster
# -------------------------------------------------------------------

$query = New-RscMutationMssql -Op BulkUpdatePropertiesOnWindowsCluster
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMssql.BulkUpdatePropertiesOnWindowsCluster" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMssql.BulkUpdatePropertiesOnWindowsCluster" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMssql.BulkUpdatePropertiesOnWindowsCluster" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMssql -Operation BulkUpdatePropertiesOnWindowsCluster
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMssql -Op CreateLiveMount
# -------------------------------------------------------------------

$query = New-RscMutationMssql -Op CreateLiveMount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMssql.CreateLiveMount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMssql.CreateLiveMount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMssql.CreateLiveMount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMssql -Operation CreateLiveMount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMssql -Op CreateLogShippingConfiguration
# -------------------------------------------------------------------

$query = New-RscMutationMssql -Op CreateLogShippingConfiguration
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMssql.CreateLogShippingConfiguration" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMssql.CreateLogShippingConfiguration" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMssql.CreateLogShippingConfiguration" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMssql -Operation CreateLogShippingConfiguration
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMssql -Op CreateOnDemandBackup
# -------------------------------------------------------------------

$query = New-RscMutationMssql -Op CreateOnDemandBackup
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMssql.CreateOnDemandBackup" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMssql.CreateOnDemandBackup" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMssql.CreateOnDemandBackup" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMssql -Operation CreateOnDemandBackup
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMssql -Op DeleteDbSnapshots
# -------------------------------------------------------------------

$query = New-RscMutationMssql -Op DeleteDbSnapshots
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMssql.DeleteDbSnapshots" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMssql.DeleteDbSnapshots" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMssql.DeleteDbSnapshots" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMssql -Operation DeleteDbSnapshots
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMssql -Op DeleteLiveMount
# -------------------------------------------------------------------

$query = New-RscMutationMssql -Op DeleteLiveMount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMssql.DeleteLiveMount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMssql.DeleteLiveMount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMssql.DeleteLiveMount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMssql -Operation DeleteLiveMount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMssql -Op DeleteLogShipping
# -------------------------------------------------------------------

$query = New-RscMutationMssql -Op DeleteLogShipping
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMssql.DeleteLogShipping" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMssql.DeleteLogShipping" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMssql.DeleteLogShipping" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMssql -Operation DeleteLogShipping
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMssql -Op DownloadDatabaseBackupFiles
# -------------------------------------------------------------------

$query = New-RscMutationMssql -Op DownloadDatabaseBackupFiles
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMssql.DownloadDatabaseBackupFiles" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMssql.DownloadDatabaseBackupFiles" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMssql.DownloadDatabaseBackupFiles" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMssql -Operation DownloadDatabaseBackupFiles
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMssql -Op DownloadDatabaseFilesFromArchivalLocation
# -------------------------------------------------------------------

$query = New-RscMutationMssql -Op DownloadDatabaseFilesFromArchivalLocation
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMssql.DownloadDatabaseFilesFromArchivalLocation" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMssql.DownloadDatabaseFilesFromArchivalLocation" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMssql.DownloadDatabaseFilesFromArchivalLocation" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMssql -Operation DownloadDatabaseFilesFromArchivalLocation
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMssql -Op ExportDatabase
# -------------------------------------------------------------------

$query = New-RscMutationMssql -Op ExportDatabase
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMssql.ExportDatabase" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMssql.ExportDatabase" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMssql.ExportDatabase" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMssql -Operation ExportDatabase
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMssql -Op RestoreDatabase
# -------------------------------------------------------------------

$query = New-RscMutationMssql -Op RestoreDatabase
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMssql.RestoreDatabase" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMssql.RestoreDatabase" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMssql.RestoreDatabase" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMssql -Operation RestoreDatabase
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMssql -Op TakeLogBackup
# -------------------------------------------------------------------

$query = New-RscMutationMssql -Op TakeLogBackup
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMssql.TakeLogBackup" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMssql.TakeLogBackup" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMssql.TakeLogBackup" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMssql -Operation TakeLogBackup
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMssql -Op UpdateDefaultProperties
# -------------------------------------------------------------------

$query = New-RscMutationMssql -Op UpdateDefaultProperties
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMssql.UpdateDefaultProperties" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMssql.UpdateDefaultProperties" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMssql.UpdateDefaultProperties" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMssql -Operation UpdateDefaultProperties
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMssql -Op UpdateLogShippingConfiguration
# -------------------------------------------------------------------

$query = New-RscMutationMssql -Op UpdateLogShippingConfiguration
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMssql.UpdateLogShippingConfiguration" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMssql.UpdateLogShippingConfiguration" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMssql.UpdateLogShippingConfiguration" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMssql -Operation UpdateLogShippingConfiguration
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationMssql -Op UpdateLogShippingConfigurationV1
# -------------------------------------------------------------------

$query = New-RscMutationMssql -Op UpdateLogShippingConfigurationV1
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationMssql.UpdateLogShippingConfigurationV1" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationMssql.UpdateLogShippingConfigurationV1" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationMssql.UpdateLogShippingConfigurationV1" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationMssql -Operation UpdateLogShippingConfigurationV1
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationNas -Op BulkAddNasShares
# -------------------------------------------------------------------

$query = New-RscMutationNas -Op BulkAddNasShares
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNas.BulkAddNasShares" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNas.BulkAddNasShares" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNas.BulkAddNasShares" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNas -Operation BulkAddNasShares
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNas -Op BulkDeleteNasShares
# -------------------------------------------------------------------

$query = New-RscMutationNas -Op BulkDeleteNasShares
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNas.BulkDeleteNasShares" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNas.BulkDeleteNasShares" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNas.BulkDeleteNasShares" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNas -Operation BulkDeleteNasShares
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNas -Op BulkDeleteNasSystems
# -------------------------------------------------------------------

$query = New-RscMutationNas -Op BulkDeleteNasSystems
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNas.BulkDeleteNasSystems" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNas.BulkDeleteNasSystems" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNas.BulkDeleteNasSystems" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNas -Operation BulkDeleteNasSystems
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNas -Op BulkUpdateNasShares
# -------------------------------------------------------------------

$query = New-RscMutationNas -Op BulkUpdateNasShares
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNas.BulkUpdateNasShares" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNas.BulkUpdateNasShares" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNas.BulkUpdateNasShares" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNas -Operation BulkUpdateNasShares
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNas -Op DeleteNasSystem
# -------------------------------------------------------------------

$query = New-RscMutationNas -Op DeleteNasSystem
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNas.DeleteNasSystem" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNas.DeleteNasSystem" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNas.DeleteNasSystem" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNas -Operation DeleteNasSystem
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNas -Op HideRevealNasShares
# -------------------------------------------------------------------

$query = New-RscMutationNas -Op HideRevealNasShares
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNas.HideRevealNasShares" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNas.HideRevealNasShares" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNas.HideRevealNasShares" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNas -Operation HideRevealNasShares
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNas -Op RefreshNasSystems
# -------------------------------------------------------------------

$query = New-RscMutationNas -Op RefreshNasSystems
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNas.RefreshNasSystems" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNas.RefreshNasSystems" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNas.RefreshNasSystems" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNas -Operation RefreshNasSystems
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNas -Op RegisterNasSystem
# -------------------------------------------------------------------

$query = New-RscMutationNas -Op RegisterNasSystem
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNas.RegisterNasSystem" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNas.RegisterNasSystem" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNas.RegisterNasSystem" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNas -Operation RegisterNasSystem
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNas -Op UpdateNasShares
# -------------------------------------------------------------------

$query = New-RscMutationNas -Op UpdateNasShares
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNas.UpdateNasShares" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNas.UpdateNasShares" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNas.UpdateNasShares" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNas -Operation UpdateNasShares
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNas -Op UpdateNasSystem
# -------------------------------------------------------------------

$query = New-RscMutationNas -Op UpdateNasSystem
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNas.UpdateNasSystem" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNas.UpdateNasSystem" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNas.UpdateNasSystem" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNas -Operation UpdateNasSystem
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationNfs -Op CreateReaderTarget
# -------------------------------------------------------------------

$query = New-RscMutationNfs -Op CreateReaderTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNfs.CreateReaderTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNfs.CreateReaderTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNfs.CreateReaderTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNfs -Operation CreateReaderTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNfs -Op CreateTarget
# -------------------------------------------------------------------

$query = New-RscMutationNfs -Op CreateTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNfs.CreateTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNfs.CreateTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNfs.CreateTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNfs -Operation CreateTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNfs -Op UpdateTarget
# -------------------------------------------------------------------

$query = New-RscMutationNfs -Op UpdateTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNfs.UpdateTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNfs.UpdateTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNfs.UpdateTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNfs -Operation UpdateTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationNutanix -Op BatchExportVm
# -------------------------------------------------------------------

$query = New-RscMutationNutanix -Op BatchExportVm
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNutanix.BatchExportVm" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNutanix.BatchExportVm" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNutanix.BatchExportVm" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNutanix -Operation BatchExportVm
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNutanix -Op BatchMountVm
# -------------------------------------------------------------------

$query = New-RscMutationNutanix -Op BatchMountVm
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNutanix.BatchMountVm" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNutanix.BatchMountVm" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNutanix.BatchMountVm" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNutanix -Operation BatchMountVm
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNutanix -Op BulkOnDemandSnapshotVm
# -------------------------------------------------------------------

$query = New-RscMutationNutanix -Op BulkOnDemandSnapshotVm
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNutanix.BulkOnDemandSnapshotVm" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNutanix.BulkOnDemandSnapshotVm" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNutanix.BulkOnDemandSnapshotVm" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNutanix -Operation BulkOnDemandSnapshotVm
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNutanix -Op CreateCluster
# -------------------------------------------------------------------

$query = New-RscMutationNutanix -Op CreateCluster
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNutanix.CreateCluster" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNutanix.CreateCluster" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNutanix.CreateCluster" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNutanix -Operation CreateCluster
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNutanix -Op CreateOnDemandBackup
# -------------------------------------------------------------------

$query = New-RscMutationNutanix -Op CreateOnDemandBackup
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNutanix.CreateOnDemandBackup" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNutanix.CreateOnDemandBackup" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNutanix.CreateOnDemandBackup" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNutanix -Operation CreateOnDemandBackup
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNutanix -Op CreatePrismCentral
# -------------------------------------------------------------------

$query = New-RscMutationNutanix -Op CreatePrismCentral
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNutanix.CreatePrismCentral" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNutanix.CreatePrismCentral" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNutanix.CreatePrismCentral" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNutanix -Operation CreatePrismCentral
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNutanix -Op DeleteCluster
# -------------------------------------------------------------------

$query = New-RscMutationNutanix -Op DeleteCluster
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNutanix.DeleteCluster" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNutanix.DeleteCluster" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNutanix.DeleteCluster" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNutanix -Operation DeleteCluster
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNutanix -Op DeleteMountV1
# -------------------------------------------------------------------

$query = New-RscMutationNutanix -Op DeleteMountV1
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNutanix.DeleteMountV1" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNutanix.DeleteMountV1" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNutanix.DeleteMountV1" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNutanix -Operation DeleteMountV1
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNutanix -Op DeletePrismCentral
# -------------------------------------------------------------------

$query = New-RscMutationNutanix -Op DeletePrismCentral
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNutanix.DeletePrismCentral" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNutanix.DeletePrismCentral" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNutanix.DeletePrismCentral" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNutanix -Operation DeletePrismCentral
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNutanix -Op DeleteSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationNutanix -Op DeleteSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNutanix.DeleteSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNutanix.DeleteSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNutanix.DeleteSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNutanix -Operation DeleteSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNutanix -Op DeleteSnapshots
# -------------------------------------------------------------------

$query = New-RscMutationNutanix -Op DeleteSnapshots
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNutanix.DeleteSnapshots" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNutanix.DeleteSnapshots" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNutanix.DeleteSnapshots" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNutanix -Operation DeleteSnapshots
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNutanix -Op DownloadFilesSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationNutanix -Op DownloadFilesSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNutanix.DownloadFilesSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNutanix.DownloadFilesSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNutanix.DownloadFilesSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNutanix -Operation DownloadFilesSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNutanix -Op DownloadSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationNutanix -Op DownloadSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNutanix.DownloadSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNutanix.DownloadSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNutanix.DownloadSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNutanix -Operation DownloadSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNutanix -Op DownloadVdisks
# -------------------------------------------------------------------

$query = New-RscMutationNutanix -Op DownloadVdisks
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNutanix.DownloadVdisks" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNutanix.DownloadVdisks" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNutanix.DownloadVdisks" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNutanix -Operation DownloadVdisks
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNutanix -Op DownloadVmFromLocation
# -------------------------------------------------------------------

$query = New-RscMutationNutanix -Op DownloadVmFromLocation
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNutanix.DownloadVmFromLocation" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNutanix.DownloadVmFromLocation" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNutanix.DownloadVmFromLocation" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNutanix -Operation DownloadVmFromLocation
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNutanix -Op ExportSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationNutanix -Op ExportSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNutanix.ExportSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNutanix.ExportSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNutanix.ExportSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNutanix -Operation ExportSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNutanix -Op MigrateMountV1
# -------------------------------------------------------------------

$query = New-RscMutationNutanix -Op MigrateMountV1
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNutanix.MigrateMountV1" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNutanix.MigrateMountV1" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNutanix.MigrateMountV1" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNutanix -Operation MigrateMountV1
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNutanix -Op MountSnapshotV1
# -------------------------------------------------------------------

$query = New-RscMutationNutanix -Op MountSnapshotV1
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNutanix.MountSnapshotV1" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNutanix.MountSnapshotV1" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNutanix.MountSnapshotV1" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNutanix -Operation MountSnapshotV1
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNutanix -Op MountVdisks
# -------------------------------------------------------------------

$query = New-RscMutationNutanix -Op MountVdisks
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNutanix.MountVdisks" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNutanix.MountVdisks" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNutanix.MountVdisks" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNutanix -Operation MountVdisks
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNutanix -Op PatchMountV1
# -------------------------------------------------------------------

$query = New-RscMutationNutanix -Op PatchMountV1
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNutanix.PatchMountV1" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNutanix.PatchMountV1" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNutanix.PatchMountV1" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNutanix -Operation PatchMountV1
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNutanix -Op RefreshCluster
# -------------------------------------------------------------------

$query = New-RscMutationNutanix -Op RefreshCluster
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNutanix.RefreshCluster" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNutanix.RefreshCluster" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNutanix.RefreshCluster" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNutanix -Operation RefreshCluster
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNutanix -Op RefreshPrismCentral
# -------------------------------------------------------------------

$query = New-RscMutationNutanix -Op RefreshPrismCentral
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNutanix.RefreshPrismCentral" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNutanix.RefreshPrismCentral" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNutanix.RefreshPrismCentral" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNutanix -Operation RefreshPrismCentral
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNutanix -Op RegisterAgentVm
# -------------------------------------------------------------------

$query = New-RscMutationNutanix -Op RegisterAgentVm
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNutanix.RegisterAgentVm" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNutanix.RegisterAgentVm" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNutanix.RegisterAgentVm" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNutanix -Operation RegisterAgentVm
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNutanix -Op RestoreFilesSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationNutanix -Op RestoreFilesSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNutanix.RestoreFilesSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNutanix.RestoreFilesSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNutanix.RestoreFilesSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNutanix -Operation RestoreFilesSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNutanix -Op UpdateCluster
# -------------------------------------------------------------------

$query = New-RscMutationNutanix -Op UpdateCluster
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNutanix.UpdateCluster" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNutanix.UpdateCluster" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNutanix.UpdateCluster" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNutanix -Operation UpdateCluster
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNutanix -Op UpdatePrismCentral
# -------------------------------------------------------------------

$query = New-RscMutationNutanix -Op UpdatePrismCentral
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNutanix.UpdatePrismCentral" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNutanix.UpdatePrismCentral" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNutanix.UpdatePrismCentral" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNutanix -Operation UpdatePrismCentral
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationNutanix -Op UpdateVm
# -------------------------------------------------------------------

$query = New-RscMutationNutanix -Op UpdateVm
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationNutanix.UpdateVm" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationNutanix.UpdateVm" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationNutanix.UpdateVm" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationNutanix -Operation UpdateVm
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationO365 -Op AddOrg
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op AddOrg
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.AddOrg" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.AddOrg" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.AddOrg" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation AddOrg
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op BackupMailbox
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op BackupMailbox
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.BackupMailbox" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.BackupMailbox" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.BackupMailbox" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation BackupMailbox
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op BackupOnedrive
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op BackupOnedrive
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.BackupOnedrive" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.BackupOnedrive" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.BackupOnedrive" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation BackupOnedrive
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op BackupSharePointSite
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op BackupSharePointSite
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.BackupSharePointSite" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.BackupSharePointSite" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.BackupSharePointSite" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation BackupSharePointSite
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op BackupSharepointDrive
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op BackupSharepointDrive
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.BackupSharepointDrive" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.BackupSharepointDrive" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.BackupSharepointDrive" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation BackupSharepointDrive
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op BackupSharepointList
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op BackupSharepointList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.BackupSharepointList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.BackupSharepointList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.BackupSharepointList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation BackupSharepointList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op BackupTeam
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op BackupTeam
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.BackupTeam" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.BackupTeam" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.BackupTeam" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation BackupTeam
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op CreateAppComplete
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op CreateAppComplete
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.CreateAppComplete" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.CreateAppComplete" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.CreateAppComplete" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation CreateAppComplete
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op CreateAppKickoff
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op CreateAppKickoff
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.CreateAppKickoff" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.CreateAppKickoff" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.CreateAppKickoff" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation CreateAppKickoff
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op DeleteAzureApp
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op DeleteAzureApp
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.DeleteAzureApp" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.DeleteAzureApp" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.DeleteAzureApp" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation DeleteAzureApp
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op DeleteOrg
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op DeleteOrg
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.DeleteOrg" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.DeleteOrg" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.DeleteOrg" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation DeleteOrg
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op DeleteServiceAccount
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op DeleteServiceAccount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.DeleteServiceAccount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.DeleteServiceAccount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.DeleteServiceAccount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation DeleteServiceAccount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op EnableSharePoint
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op EnableSharePoint
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.EnableSharePoint" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.EnableSharePoint" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.EnableSharePoint" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation EnableSharePoint
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op EnableTeams
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op EnableTeams
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.EnableTeams" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.EnableTeams" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.EnableTeams" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation EnableTeams
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op ExportMailbox
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op ExportMailbox
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.ExportMailbox" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.ExportMailbox" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.ExportMailbox" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation ExportMailbox
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op ExportMailboxV2
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op ExportMailboxV2
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.ExportMailboxV2" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.ExportMailboxV2" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.ExportMailboxV2" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation ExportMailboxV2
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op InsertCustomerApp
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op InsertCustomerApp
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.InsertCustomerApp" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.InsertCustomerApp" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.InsertCustomerApp" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation InsertCustomerApp
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op OauthConsentComplete
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op OauthConsentComplete
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.OauthConsentComplete" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.OauthConsentComplete" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.OauthConsentComplete" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation OauthConsentComplete
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op OauthConsentKickoff
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op OauthConsentKickoff
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.OauthConsentKickoff" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.OauthConsentKickoff" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.OauthConsentKickoff" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation OauthConsentKickoff
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op PdlGroups
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op PdlGroups
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.PdlGroups" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.PdlGroups" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.PdlGroups" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation PdlGroups
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op RefreshOrg
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op RefreshOrg
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.RefreshOrg" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.RefreshOrg" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.RefreshOrg" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation RefreshOrg
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op RestoreMailbox
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op RestoreMailbox
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.RestoreMailbox" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.RestoreMailbox" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.RestoreMailbox" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation RestoreMailbox
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op RestoreMailboxV2
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op RestoreMailboxV2
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.RestoreMailboxV2" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.RestoreMailboxV2" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.RestoreMailboxV2" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation RestoreMailboxV2
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op RestoreSnappable
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op RestoreSnappable
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.RestoreSnappable" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.RestoreSnappable" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.RestoreSnappable" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation RestoreSnappable
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op RestoreTeamsConversations
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op RestoreTeamsConversations
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.RestoreTeamsConversations" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.RestoreTeamsConversations" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.RestoreTeamsConversations" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation RestoreTeamsConversations
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op RestoreTeamsFiles
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op RestoreTeamsFiles
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.RestoreTeamsFiles" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.RestoreTeamsFiles" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.RestoreTeamsFiles" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation RestoreTeamsFiles
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op SaaSSetupKickoff
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op SaaSSetupKickoff
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.SaaSSetupKickoff" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.SaaSSetupKickoff" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.SaaSSetupKickoff" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation SaaSSetupKickoff
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op SaasSetupComplete
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op SaasSetupComplete
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.SaasSetupComplete" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.SaasSetupComplete" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.SaasSetupComplete" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation SaasSetupComplete
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op SetServiceAccount
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op SetServiceAccount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.SetServiceAccount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.SetServiceAccount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.SetServiceAccount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation SetServiceAccount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op SetupKickoff
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op SetupKickoff
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.SetupKickoff" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.SetupKickoff" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.SetupKickoff" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation SetupKickoff
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op UpdateAppAuthStatus
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op UpdateAppAuthStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.UpdateAppAuthStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.UpdateAppAuthStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.UpdateAppAuthStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation UpdateAppAuthStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op UpdateAppPermissions
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op UpdateAppPermissions
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.UpdateAppPermissions" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.UpdateAppPermissions" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.UpdateAppPermissions" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation UpdateAppPermissions
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationO365 -Op UpdateOrgCustomName
# -------------------------------------------------------------------

$query = New-RscMutationO365 -Op UpdateOrgCustomName
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationO365.UpdateOrgCustomName" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationO365.UpdateOrgCustomName" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationO365.UpdateOrgCustomName" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationO365 -Operation UpdateOrgCustomName
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationOracle -Op BulkUpdateDatabases
# -------------------------------------------------------------------

$query = New-RscMutationOracle -Op BulkUpdateDatabases
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationOracle.BulkUpdateDatabases" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationOracle.BulkUpdateDatabases" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationOracle.BulkUpdateDatabases" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationOracle -Operation BulkUpdateDatabases
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationOracle -Op BulkUpdateHosts
# -------------------------------------------------------------------

$query = New-RscMutationOracle -Op BulkUpdateHosts
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationOracle.BulkUpdateHosts" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationOracle.BulkUpdateHosts" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationOracle.BulkUpdateHosts" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationOracle -Operation BulkUpdateHosts
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationOracle -Op BulkUpdateRacs
# -------------------------------------------------------------------

$query = New-RscMutationOracle -Op BulkUpdateRacs
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationOracle.BulkUpdateRacs" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationOracle.BulkUpdateRacs" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationOracle.BulkUpdateRacs" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationOracle -Operation BulkUpdateRacs
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationOracle -Op CreatePdbRestore
# -------------------------------------------------------------------

$query = New-RscMutationOracle -Op CreatePdbRestore
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationOracle.CreatePdbRestore" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationOracle.CreatePdbRestore" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationOracle.CreatePdbRestore" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationOracle -Operation CreatePdbRestore
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationOracle -Op DeleteAllDatabaseSnapshots
# -------------------------------------------------------------------

$query = New-RscMutationOracle -Op DeleteAllDatabaseSnapshots
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationOracle.DeleteAllDatabaseSnapshots" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationOracle.DeleteAllDatabaseSnapshots" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationOracle.DeleteAllDatabaseSnapshots" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationOracle -Operation DeleteAllDatabaseSnapshots
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationOracle -Op DeleteMount
# -------------------------------------------------------------------

$query = New-RscMutationOracle -Op DeleteMount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationOracle.DeleteMount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationOracle.DeleteMount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationOracle.DeleteMount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationOracle -Operation DeleteMount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationOracle -Op DownloadDatabaseSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationOracle -Op DownloadDatabaseSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationOracle.DownloadDatabaseSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationOracle.DownloadDatabaseSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationOracle.DownloadDatabaseSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationOracle -Operation DownloadDatabaseSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationOracle -Op ExportDatabase
# -------------------------------------------------------------------

$query = New-RscMutationOracle -Op ExportDatabase
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationOracle.ExportDatabase" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationOracle.ExportDatabase" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationOracle.ExportDatabase" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationOracle -Operation ExportDatabase
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationOracle -Op ExportTablespace
# -------------------------------------------------------------------

$query = New-RscMutationOracle -Op ExportTablespace
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationOracle.ExportTablespace" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationOracle.ExportTablespace" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationOracle.ExportTablespace" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationOracle -Operation ExportTablespace
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationOracle -Op InstantRecoverSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationOracle -Op InstantRecoverSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationOracle.InstantRecoverSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationOracle.InstantRecoverSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationOracle.InstantRecoverSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationOracle -Operation InstantRecoverSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationOracle -Op MountDatabase
# -------------------------------------------------------------------

$query = New-RscMutationOracle -Op MountDatabase
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationOracle.MountDatabase" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationOracle.MountDatabase" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationOracle.MountDatabase" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationOracle -Operation MountDatabase
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationOracle -Op RefreshDatabase
# -------------------------------------------------------------------

$query = New-RscMutationOracle -Op RefreshDatabase
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationOracle.RefreshDatabase" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationOracle.RefreshDatabase" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationOracle.RefreshDatabase" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationOracle -Operation RefreshDatabase
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationOracle -Op RestoreLogs
# -------------------------------------------------------------------

$query = New-RscMutationOracle -Op RestoreLogs
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationOracle.RestoreLogs" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationOracle.RestoreLogs" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationOracle.RestoreLogs" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationOracle -Operation RestoreLogs
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationOracle -Op TakeOnDemandDatabaseSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationOracle -Op TakeOnDemandDatabaseSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationOracle.TakeOnDemandDatabaseSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationOracle.TakeOnDemandDatabaseSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationOracle.TakeOnDemandDatabaseSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationOracle -Operation TakeOnDemandDatabaseSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationOracle -Op TakeOnDemandLogSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationOracle -Op TakeOnDemandLogSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationOracle.TakeOnDemandLogSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationOracle.TakeOnDemandLogSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationOracle.TakeOnDemandLogSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationOracle -Operation TakeOnDemandLogSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationOracle -Op UpdateDataGuardGroup
# -------------------------------------------------------------------

$query = New-RscMutationOracle -Op UpdateDataGuardGroup
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationOracle.UpdateDataGuardGroup" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationOracle.UpdateDataGuardGroup" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationOracle.UpdateDataGuardGroup" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationOracle -Operation UpdateDataGuardGroup
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationOracle -Op ValidateAcoFile
# -------------------------------------------------------------------

$query = New-RscMutationOracle -Op ValidateAcoFile
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationOracle.ValidateAcoFile" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationOracle.ValidateAcoFile" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationOracle.ValidateAcoFile" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationOracle -Operation ValidateAcoFile
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationOracle -Op ValidateDatabaseBackups
# -------------------------------------------------------------------

$query = New-RscMutationOracle -Op ValidateDatabaseBackups
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationOracle.ValidateDatabaseBackups" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationOracle.ValidateDatabaseBackups" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationOracle.ValidateDatabaseBackups" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationOracle -Operation ValidateDatabaseBackups
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationPolicy -Op AddPolicyObjects
# -------------------------------------------------------------------

$query = New-RscMutationPolicy -Op AddPolicyObjects
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationPolicy.AddPolicyObjects" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationPolicy.AddPolicyObjects" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationPolicy.AddPolicyObjects" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationPolicy -Operation AddPolicyObjects
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationPolicy -Op CreatePolicy
# -------------------------------------------------------------------

$query = New-RscMutationPolicy -Op CreatePolicy
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationPolicy.CreatePolicy" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationPolicy.CreatePolicy" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationPolicy.CreatePolicy" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationPolicy -Operation CreatePolicy
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationPolicy -Op DeactivatePolicy
# -------------------------------------------------------------------

$query = New-RscMutationPolicy -Op DeactivatePolicy
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationPolicy.DeactivatePolicy" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationPolicy.DeactivatePolicy" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationPolicy.DeactivatePolicy" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationPolicy -Operation DeactivatePolicy
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationPolicy -Op GetHealthMonitorPolicyStatus
# -------------------------------------------------------------------

$query = New-RscMutationPolicy -Op GetHealthMonitorPolicyStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationPolicy.GetHealthMonitorPolicyStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationPolicy.GetHealthMonitorPolicyStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationPolicy.GetHealthMonitorPolicyStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationPolicy -Operation GetHealthMonitorPolicyStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationPolicy -Op RemovePolicyObjects
# -------------------------------------------------------------------

$query = New-RscMutationPolicy -Op RemovePolicyObjects
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationPolicy.RemovePolicyObjects" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationPolicy.RemovePolicyObjects" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationPolicy.RemovePolicyObjects" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationPolicy -Operation RemovePolicyObjects
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationPolicy -Op SeedEnabledPolicies
# -------------------------------------------------------------------

$query = New-RscMutationPolicy -Op SeedEnabledPolicies
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationPolicy.SeedEnabledPolicies" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationPolicy.SeedEnabledPolicies" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationPolicy.SeedEnabledPolicies" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationPolicy -Operation SeedEnabledPolicies
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationPolicy -Op SeedInitialPolicies
# -------------------------------------------------------------------

$query = New-RscMutationPolicy -Op SeedInitialPolicies
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationPolicy.SeedInitialPolicies" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationPolicy.SeedInitialPolicies" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationPolicy.SeedInitialPolicies" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationPolicy -Operation SeedInitialPolicies
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationPolicy -Op SetPasswordComplexityPolicy
# -------------------------------------------------------------------

$query = New-RscMutationPolicy -Op SetPasswordComplexityPolicy
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationPolicy.SetPasswordComplexityPolicy" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationPolicy.SetPasswordComplexityPolicy" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationPolicy.SetPasswordComplexityPolicy" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationPolicy -Operation SetPasswordComplexityPolicy
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationPolicy -Op UpdateAutoEnablePolicyClusterConfig
# -------------------------------------------------------------------

$query = New-RscMutationPolicy -Op UpdateAutoEnablePolicyClusterConfig
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationPolicy.UpdateAutoEnablePolicyClusterConfig" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationPolicy.UpdateAutoEnablePolicyClusterConfig" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationPolicy.UpdateAutoEnablePolicyClusterConfig" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationPolicy -Operation UpdateAutoEnablePolicyClusterConfig
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationPolicy -Op UpdateHealthMonitorPolicyStatus
# -------------------------------------------------------------------

$query = New-RscMutationPolicy -Op UpdateHealthMonitorPolicyStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationPolicy.UpdateHealthMonitorPolicyStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationPolicy.UpdateHealthMonitorPolicyStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationPolicy.UpdateHealthMonitorPolicyStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationPolicy -Operation UpdateHealthMonitorPolicyStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationPolicy -Op UpdateOrgSecurityPolicy
# -------------------------------------------------------------------

$query = New-RscMutationPolicy -Op UpdateOrgSecurityPolicy
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationPolicy.UpdateOrgSecurityPolicy" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationPolicy.UpdateOrgSecurityPolicy" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationPolicy.UpdateOrgSecurityPolicy" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationPolicy -Operation UpdateOrgSecurityPolicy
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationPolicy -Op UpdatePolicy
# -------------------------------------------------------------------

$query = New-RscMutationPolicy -Op UpdatePolicy
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationPolicy.UpdatePolicy" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationPolicy.UpdatePolicy" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationPolicy.UpdatePolicy" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationPolicy -Operation UpdatePolicy
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationRansomware -Op BulkUpdateInvestigationStatus
# -------------------------------------------------------------------

$query = New-RscMutationRansomware -Op BulkUpdateInvestigationStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationRansomware.BulkUpdateInvestigationStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationRansomware.BulkUpdateInvestigationStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationRansomware.BulkUpdateInvestigationStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationRansomware -Operation BulkUpdateInvestigationStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationRansomware -Op TriggerDetection
# -------------------------------------------------------------------

$query = New-RscMutationRansomware -Op TriggerDetection
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationRansomware.TriggerDetection" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationRansomware.TriggerDetection" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationRansomware.TriggerDetection" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationRansomware -Operation TriggerDetection
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationRcs -Op CreateAutomaticRcsTargetMapping
# -------------------------------------------------------------------

$query = New-RscMutationRcs -Op CreateAutomaticRcsTargetMapping
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationRcs.CreateAutomaticRcsTargetMapping" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationRcs.CreateAutomaticRcsTargetMapping" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationRcs.CreateAutomaticRcsTargetMapping" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationRcs -Operation CreateAutomaticRcsTargetMapping
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationRcs -Op CreateRcsReaderTarget
# -------------------------------------------------------------------

$query = New-RscMutationRcs -Op CreateRcsReaderTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationRcs.CreateRcsReaderTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationRcs.CreateRcsReaderTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationRcs.CreateRcsReaderTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationRcs -Operation CreateRcsReaderTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationRcs -Op CreateRcsTarget
# -------------------------------------------------------------------

$query = New-RscMutationRcs -Op CreateRcsTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationRcs.CreateRcsTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationRcs.CreateRcsTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationRcs.CreateRcsTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationRcs -Operation CreateRcsTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationRcs -Op UpdateRcsAutomaticTargetMapping
# -------------------------------------------------------------------

$query = New-RscMutationRcs -Op UpdateRcsAutomaticTargetMapping
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationRcs.UpdateRcsAutomaticTargetMapping" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationRcs.UpdateRcsAutomaticTargetMapping" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationRcs.UpdateRcsAutomaticTargetMapping" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationRcs -Operation UpdateRcsAutomaticTargetMapping
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationRcv -Op ApprovePrivateEndpoint
# -------------------------------------------------------------------

$query = New-RscMutationRcv -Op ApprovePrivateEndpoint
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationRcv.ApprovePrivateEndpoint" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationRcv.ApprovePrivateEndpoint" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationRcv.ApprovePrivateEndpoint" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationRcv -Operation ApprovePrivateEndpoint
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationRcv -Op CreateLocationsFromTemplate
# -------------------------------------------------------------------

$query = New-RscMutationRcv -Op CreateLocationsFromTemplate
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationRcv.CreateLocationsFromTemplate" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationRcv.CreateLocationsFromTemplate" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationRcv.CreateLocationsFromTemplate" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationRcv -Operation CreateLocationsFromTemplate
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationRcv -Op CreatePrivateEndpointApprovalRequest
# -------------------------------------------------------------------

$query = New-RscMutationRcv -Op CreatePrivateEndpointApprovalRequest
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationRcv.CreatePrivateEndpointApprovalRequest" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationRcv.CreatePrivateEndpointApprovalRequest" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationRcv.CreatePrivateEndpointApprovalRequest" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationRcv -Operation CreatePrivateEndpointApprovalRequest
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationRcv -Op UpdateTarget
# -------------------------------------------------------------------

$query = New-RscMutationRcv -Op UpdateTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationRcv.UpdateTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationRcv.UpdateTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationRcv.UpdateTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationRcv -Operation UpdateTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationReplication -Op CreatePair
# -------------------------------------------------------------------

$query = New-RscMutationReplication -Op CreatePair
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationReplication.CreatePair" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationReplication.CreatePair" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationReplication.CreatePair" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationReplication -Operation CreatePair
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationReplication -Op DeletePair
# -------------------------------------------------------------------

$query = New-RscMutationReplication -Op DeletePair
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationReplication.DeletePair" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationReplication.DeletePair" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationReplication.DeletePair" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationReplication -Operation DeletePair
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationReplication -Op DisablePause
# -------------------------------------------------------------------

$query = New-RscMutationReplication -Op DisablePause
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationReplication.DisablePause" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationReplication.DisablePause" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationReplication.DisablePause" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationReplication -Operation DisablePause
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationReplication -Op EnablePause
# -------------------------------------------------------------------

$query = New-RscMutationReplication -Op EnablePause
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationReplication.EnablePause" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationReplication.EnablePause" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationReplication.EnablePause" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationReplication -Operation EnablePause
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationReplication -Op UpdateNetworkThrottleBypass
# -------------------------------------------------------------------

$query = New-RscMutationReplication -Op UpdateNetworkThrottleBypass
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationReplication.UpdateNetworkThrottleBypass" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationReplication.UpdateNetworkThrottleBypass" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationReplication.UpdateNetworkThrottleBypass" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationReplication -Operation UpdateNetworkThrottleBypass
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationReplication -Op UpdateTarget
# -------------------------------------------------------------------

$query = New-RscMutationReplication -Op UpdateTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationReplication.UpdateTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationReplication.UpdateTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationReplication.UpdateTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationReplication -Operation UpdateTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationReport -Op CreateCustom
# -------------------------------------------------------------------

$query = New-RscMutationReport -Op CreateCustom
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationReport.CreateCustom" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationReport.CreateCustom" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationReport.CreateCustom" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationReport -Operation CreateCustom
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationReport -Op CreateScheduled
# -------------------------------------------------------------------

$query = New-RscMutationReport -Op CreateScheduled
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationReport.CreateScheduled" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationReport.CreateScheduled" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationReport.CreateScheduled" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationReport -Operation CreateScheduled
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationReport -Op DeleteCustom
# -------------------------------------------------------------------

$query = New-RscMutationReport -Op DeleteCustom
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationReport.DeleteCustom" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationReport.DeleteCustom" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationReport.DeleteCustom" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationReport -Operation DeleteCustom
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationReport -Op DeleteScheduledReport
# -------------------------------------------------------------------

$query = New-RscMutationReport -Op DeleteScheduledReport
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationReport.DeleteScheduledReport" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationReport.DeleteScheduledReport" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationReport.DeleteScheduledReport" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationReport -Operation DeleteScheduledReport
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationReport -Op SendPdf
# -------------------------------------------------------------------

$query = New-RscMutationReport -Op SendPdf
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationReport.SendPdf" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationReport.SendPdf" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationReport.SendPdf" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationReport -Operation SendPdf
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationReport -Op SendScheduledReportAsync
# -------------------------------------------------------------------

$query = New-RscMutationReport -Op SendScheduledReportAsync
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationReport.SendScheduledReportAsync" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationReport.SendScheduledReportAsync" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationReport.SendScheduledReportAsync" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationReport -Operation SendScheduledReportAsync
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationReport -Op StartClusterMigrationJob
# -------------------------------------------------------------------

$query = New-RscMutationReport -Op StartClusterMigrationJob
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationReport.StartClusterMigrationJob" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationReport.StartClusterMigrationJob" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationReport.StartClusterMigrationJob" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationReport -Operation StartClusterMigrationJob
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationReport -Op UpdateCustom
# -------------------------------------------------------------------

$query = New-RscMutationReport -Op UpdateCustom
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationReport.UpdateCustom" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationReport.UpdateCustom" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationReport.UpdateCustom" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationReport -Operation UpdateCustom
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationReport -Op UpdateDatabaseLogingPropertiesForCluster
# -------------------------------------------------------------------

$query = New-RscMutationReport -Op UpdateDatabaseLogingPropertiesForCluster
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationReport.UpdateDatabaseLogingPropertiesForCluster" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationReport.UpdateDatabaseLogingPropertiesForCluster" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationReport.UpdateDatabaseLogingPropertiesForCluster" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationReport -Operation UpdateDatabaseLogingPropertiesForCluster
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationReport -Op UpdateScheduledReport
# -------------------------------------------------------------------

$query = New-RscMutationReport -Op UpdateScheduledReport
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationReport.UpdateScheduledReport" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationReport.UpdateScheduledReport" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationReport.UpdateScheduledReport" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationReport -Operation UpdateScheduledReport
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationSapHana -Op AddSystem
# -------------------------------------------------------------------

$query = New-RscMutationSapHana -Op AddSystem
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSapHana.AddSystem" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSapHana.AddSystem" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSapHana.AddSystem" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSapHana -Operation AddSystem
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSapHana -Op ConfigureRestore
# -------------------------------------------------------------------

$query = New-RscMutationSapHana -Op ConfigureRestore
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSapHana.ConfigureRestore" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSapHana.ConfigureRestore" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSapHana.ConfigureRestore" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSapHana -Operation ConfigureRestore
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSapHana -Op CreateOnDemandBackup
# -------------------------------------------------------------------

$query = New-RscMutationSapHana -Op CreateOnDemandBackup
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSapHana.CreateOnDemandBackup" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSapHana.CreateOnDemandBackup" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSapHana.CreateOnDemandBackup" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSapHana -Operation CreateOnDemandBackup
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSapHana -Op CreateOnDemandStorageSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationSapHana -Op CreateOnDemandStorageSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSapHana.CreateOnDemandStorageSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSapHana.CreateOnDemandStorageSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSapHana.CreateOnDemandStorageSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSapHana -Operation CreateOnDemandStorageSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSapHana -Op CreateSystemRefresh
# -------------------------------------------------------------------

$query = New-RscMutationSapHana -Op CreateSystemRefresh
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSapHana.CreateSystemRefresh" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSapHana.CreateSystemRefresh" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSapHana.CreateSystemRefresh" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSapHana -Operation CreateSystemRefresh
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSapHana -Op DeleteDbSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationSapHana -Op DeleteDbSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSapHana.DeleteDbSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSapHana.DeleteDbSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSapHana.DeleteDbSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSapHana -Operation DeleteDbSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSapHana -Op DeleteSystem
# -------------------------------------------------------------------

$query = New-RscMutationSapHana -Op DeleteSystem
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSapHana.DeleteSystem" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSapHana.DeleteSystem" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSapHana.DeleteSystem" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSapHana -Operation DeleteSystem
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSapHana -Op ExpireDownloadedSnapshots
# -------------------------------------------------------------------

$query = New-RscMutationSapHana -Op ExpireDownloadedSnapshots
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSapHana.ExpireDownloadedSnapshots" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSapHana.ExpireDownloadedSnapshots" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSapHana.ExpireDownloadedSnapshots" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSapHana -Operation ExpireDownloadedSnapshots
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSapHana -Op PatchSystem
# -------------------------------------------------------------------

$query = New-RscMutationSapHana -Op PatchSystem
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSapHana.PatchSystem" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSapHana.PatchSystem" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSapHana.PatchSystem" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSapHana -Operation PatchSystem
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSapHana -Op RestoreSystemStorage
# -------------------------------------------------------------------

$query = New-RscMutationSapHana -Op RestoreSystemStorage
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSapHana.RestoreSystemStorage" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSapHana.RestoreSystemStorage" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSapHana.RestoreSystemStorage" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSapHana -Operation RestoreSystemStorage
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSapHana -Op UnconfigureRestore
# -------------------------------------------------------------------

$query = New-RscMutationSapHana -Op UnconfigureRestore
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSapHana.UnconfigureRestore" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSapHana.UnconfigureRestore" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSapHana.UnconfigureRestore" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSapHana -Operation UnconfigureRestore
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationServiceAccount -Op Create
# -------------------------------------------------------------------

$query = New-RscMutationServiceAccount -Op Create
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationServiceAccount.Create" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationServiceAccount.Create" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationServiceAccount.Create" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationServiceAccount -Operation Create
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationServiceAccount -Op Delete
# -------------------------------------------------------------------

$query = New-RscMutationServiceAccount -Op Delete
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationServiceAccount.Delete" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationServiceAccount.Delete" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationServiceAccount.Delete" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationServiceAccount -Operation Delete
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationServiceAccount -Op Rotate
# -------------------------------------------------------------------

$query = New-RscMutationServiceAccount -Op Rotate
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationServiceAccount.Rotate" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationServiceAccount.Rotate" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationServiceAccount.Rotate" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationServiceAccount -Operation Rotate
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationServiceAccount -Op Update
# -------------------------------------------------------------------

$query = New-RscMutationServiceAccount -Op Update
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationServiceAccount.Update" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationServiceAccount.Update" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationServiceAccount.Update" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationServiceAccount -Operation Update
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationSharepoint -Op ExcludeObjectsFromProtection
# -------------------------------------------------------------------

$query = New-RscMutationSharepoint -Op ExcludeObjectsFromProtection
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSharepoint.ExcludeObjectsFromProtection" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSharepoint.ExcludeObjectsFromProtection" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSharepoint.ExcludeObjectsFromProtection" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSharepoint -Operation ExcludeObjectsFromProtection
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationSla -Op Assign
# -------------------------------------------------------------------

$query = New-RscMutationSla -Op Assign
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSla.Assign" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSla.Assign" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSla.Assign" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSla -Operation Assign
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSla -Op AssignRetentionToSnappables
# -------------------------------------------------------------------

$query = New-RscMutationSla -Op AssignRetentionToSnappables
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSla.AssignRetentionToSnappables" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSla.AssignRetentionToSnappables" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSla.AssignRetentionToSnappables" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSla -Operation AssignRetentionToSnappables
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSla -Op AssignRetentionToSnapshots
# -------------------------------------------------------------------

$query = New-RscMutationSla -Op AssignRetentionToSnapshots
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSla.AssignRetentionToSnapshots" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSla.AssignRetentionToSnapshots" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSla.AssignRetentionToSnapshots" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSla -Operation AssignRetentionToSnapshots
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSla -Op AssignsForSnappableHierarchies
# -------------------------------------------------------------------

$query = New-RscMutationSla -Op AssignsForSnappableHierarchies
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSla.AssignsForSnappableHierarchies" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSla.AssignsForSnappableHierarchies" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSla.AssignsForSnappableHierarchies" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSla -Operation AssignsForSnappableHierarchies
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSla -Op CreateGlobal
# -------------------------------------------------------------------

$query = New-RscMutationSla -Op CreateGlobal
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSla.CreateGlobal" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSla.CreateGlobal" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSla.CreateGlobal" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSla -Operation CreateGlobal
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSla -Op DeleteGlobal
# -------------------------------------------------------------------

$query = New-RscMutationSla -Op DeleteGlobal
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSla.DeleteGlobal" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSla.DeleteGlobal" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSla.DeleteGlobal" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSla -Operation DeleteGlobal
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSla -Op ExportManagedVolumeSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationSla -Op ExportManagedVolumeSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSla.ExportManagedVolumeSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSla.ExportManagedVolumeSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSla.ExportManagedVolumeSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSla -Operation ExportManagedVolumeSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSla -Op GetPendingAssignments
# -------------------------------------------------------------------

$query = New-RscMutationSla -Op GetPendingAssignments
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSla.GetPendingAssignments" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSla.GetPendingAssignments" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSla.GetPendingAssignments" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSla -Operation GetPendingAssignments
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSla -Op Pause
# -------------------------------------------------------------------

$query = New-RscMutationSla -Op Pause
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSla.Pause" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSla.Pause" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSla.Pause" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSla -Operation Pause
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSla -Op UpdateGlobal
# -------------------------------------------------------------------

$query = New-RscMutationSla -Op UpdateGlobal
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSla.UpdateGlobal" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSla.UpdateGlobal" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSla.UpdateGlobal" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSla -Operation UpdateGlobal
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSla -Op Upgrades
# -------------------------------------------------------------------

$query = New-RscMutationSla -Op Upgrades
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSla.Upgrades" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSla.Upgrades" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSla.Upgrades" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSla -Operation Upgrades
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationSmb -Op AddAndJoinDomain
# -------------------------------------------------------------------

$query = New-RscMutationSmb -Op AddAndJoinDomain
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSmb.AddAndJoinDomain" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSmb.AddAndJoinDomain" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSmb.AddAndJoinDomain" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSmb -Operation AddAndJoinDomain
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSmb -Op DeleteDomain
# -------------------------------------------------------------------

$query = New-RscMutationSmb -Op DeleteDomain
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSmb.DeleteDomain" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSmb.DeleteDomain" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSmb.DeleteDomain" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSmb -Operation DeleteDomain
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSmb -Op JoinDomain
# -------------------------------------------------------------------

$query = New-RscMutationSmb -Op JoinDomain
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSmb.JoinDomain" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSmb.JoinDomain" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSmb.JoinDomain" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSmb -Operation JoinDomain
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSmb -Op PutConfiguration
# -------------------------------------------------------------------

$query = New-RscMutationSmb -Op PutConfiguration
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSmb.PutConfiguration" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSmb.PutConfiguration" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSmb.PutConfiguration" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSmb -Operation PutConfiguration
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationSnapshot -Op BatchQuarantine
# -------------------------------------------------------------------

$query = New-RscMutationSnapshot -Op BatchQuarantine
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSnapshot.BatchQuarantine" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSnapshot.BatchQuarantine" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSnapshot.BatchQuarantine" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSnapshot -Operation BatchQuarantine
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSnapshot -Op BatchReleaseFromQuarantine
# -------------------------------------------------------------------

$query = New-RscMutationSnapshot -Op BatchReleaseFromQuarantine
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSnapshot.BatchReleaseFromQuarantine" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSnapshot.BatchReleaseFromQuarantine" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSnapshot.BatchReleaseFromQuarantine" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSnapshot -Operation BatchReleaseFromQuarantine
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSnapshot -Op BulkTierExistings
# -------------------------------------------------------------------

$query = New-RscMutationSnapshot -Op BulkTierExistings
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSnapshot.BulkTierExistings" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSnapshot.BulkTierExistings" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSnapshot.BulkTierExistings" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSnapshot -Operation BulkTierExistings
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSnapshot -Op CreateDomainController
# -------------------------------------------------------------------

$query = New-RscMutationSnapshot -Op CreateDomainController
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSnapshot.CreateDomainController" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSnapshot.CreateDomainController" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSnapshot.CreateDomainController" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSnapshot -Operation CreateDomainController
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSnapshot -Op CreateDownloadForVolumeGroup
# -------------------------------------------------------------------

$query = New-RscMutationSnapshot -Op CreateDownloadForVolumeGroup
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSnapshot.CreateDownloadForVolumeGroup" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSnapshot.CreateDownloadForVolumeGroup" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSnapshot.CreateDownloadForVolumeGroup" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSnapshot -Operation CreateDownloadForVolumeGroup
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSnapshot -Op CreateFileset
# -------------------------------------------------------------------

$query = New-RscMutationSnapshot -Op CreateFileset
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSnapshot.CreateFileset" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSnapshot.CreateFileset" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSnapshot.CreateFileset" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSnapshot -Operation CreateFileset
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSnapshot -Op DeleteCloudWorkloadSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationSnapshot -Op DeleteCloudWorkloadSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSnapshot.DeleteCloudWorkloadSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSnapshot.DeleteCloudWorkloadSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSnapshot.DeleteCloudWorkloadSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSnapshot -Operation DeleteCloudWorkloadSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSnapshot -Op DeleteFilesetSnapshots
# -------------------------------------------------------------------

$query = New-RscMutationSnapshot -Op DeleteFilesetSnapshots
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSnapshot.DeleteFilesetSnapshots" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSnapshot.DeleteFilesetSnapshots" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSnapshot.DeleteFilesetSnapshots" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSnapshot -Operation DeleteFilesetSnapshots
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSnapshot -Op DeleteUnmanageds
# -------------------------------------------------------------------

$query = New-RscMutationSnapshot -Op DeleteUnmanageds
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSnapshot.DeleteUnmanageds" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSnapshot.DeleteUnmanageds" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSnapshot.DeleteUnmanageds" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSnapshot -Operation DeleteUnmanageds
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSnapshot -Op DeletesOfUnmanagedObjects
# -------------------------------------------------------------------

$query = New-RscMutationSnapshot -Op DeletesOfUnmanagedObjects
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSnapshot.DeletesOfUnmanagedObjects" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSnapshot.DeletesOfUnmanagedObjects" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSnapshot.DeletesOfUnmanagedObjects" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSnapshot -Operation DeletesOfUnmanagedObjects
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSnapshot -Op FilesetDownloadFiles
# -------------------------------------------------------------------

$query = New-RscMutationSnapshot -Op FilesetDownloadFiles
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSnapshot.FilesetDownloadFiles" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSnapshot.FilesetDownloadFiles" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSnapshot.FilesetDownloadFiles" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSnapshot -Operation FilesetDownloadFiles
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSnapshot -Op FilesetExportFiles
# -------------------------------------------------------------------

$query = New-RscMutationSnapshot -Op FilesetExportFiles
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSnapshot.FilesetExportFiles" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSnapshot.FilesetExportFiles" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSnapshot.FilesetExportFiles" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSnapshot -Operation FilesetExportFiles
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSnapshot -Op RestoreDomainController
# -------------------------------------------------------------------

$query = New-RscMutationSnapshot -Op RestoreDomainController
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSnapshot.RestoreDomainController" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSnapshot.RestoreDomainController" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSnapshot.RestoreDomainController" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSnapshot -Operation RestoreDomainController
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSnapshot -Op RestoreVolumeGroupFiles
# -------------------------------------------------------------------

$query = New-RscMutationSnapshot -Op RestoreVolumeGroupFiles
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSnapshot.RestoreVolumeGroupFiles" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSnapshot.RestoreVolumeGroupFiles" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSnapshot.RestoreVolumeGroupFiles" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSnapshot -Operation RestoreVolumeGroupFiles
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSnapshot -Op StartEc2InstanceExportJob
# -------------------------------------------------------------------

$query = New-RscMutationSnapshot -Op StartEc2InstanceExportJob
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSnapshot.StartEc2InstanceExportJob" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSnapshot.StartEc2InstanceExportJob" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSnapshot.StartEc2InstanceExportJob" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSnapshot -Operation StartEc2InstanceExportJob
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSnapshot -Op StartRecoverS3Job
# -------------------------------------------------------------------

$query = New-RscMutationSnapshot -Op StartRecoverS3Job
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSnapshot.StartRecoverS3Job" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSnapshot.StartRecoverS3Job" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSnapshot.StartRecoverS3Job" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSnapshot -Operation StartRecoverS3Job
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSnapshot -Op TakeOnDemand
# -------------------------------------------------------------------

$query = New-RscMutationSnapshot -Op TakeOnDemand
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSnapshot.TakeOnDemand" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSnapshot.TakeOnDemand" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSnapshot.TakeOnDemand" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSnapshot -Operation TakeOnDemand
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSnapshot -Op UploadDatabaseToBlobstore
# -------------------------------------------------------------------

$query = New-RscMutationSnapshot -Op UploadDatabaseToBlobstore
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSnapshot.UploadDatabaseToBlobstore" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSnapshot.UploadDatabaseToBlobstore" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSnapshot.UploadDatabaseToBlobstore" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSnapshot -Operation UploadDatabaseToBlobstore
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationSnmp -Op UpdateConfig
# -------------------------------------------------------------------

$query = New-RscMutationSnmp -Op UpdateConfig
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSnmp.UpdateConfig" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSnmp.UpdateConfig" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSnmp.UpdateConfig" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSnmp -Operation UpdateConfig
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationStorageArray -Op Add
# -------------------------------------------------------------------

$query = New-RscMutationStorageArray -Op Add
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationStorageArray.Add" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationStorageArray.Add" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationStorageArray.Add" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationStorageArray -Operation Add
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationStorageArray -Op Delete
# -------------------------------------------------------------------

$query = New-RscMutationStorageArray -Op Delete
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationStorageArray.Delete" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationStorageArray.Delete" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationStorageArray.Delete" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationStorageArray -Operation Delete
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationStorageArray -Op Refresh
# -------------------------------------------------------------------

$query = New-RscMutationStorageArray -Op Refresh
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationStorageArray.Refresh" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationStorageArray.Refresh" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationStorageArray.Refresh" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationStorageArray -Operation Refresh
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationStorageArray -Op Update
# -------------------------------------------------------------------

$query = New-RscMutationStorageArray -Op Update
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationStorageArray.Update" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationStorageArray.Update" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationStorageArray.Update" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationStorageArray -Operation Update
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationSyslog -Op AddExportRule
# -------------------------------------------------------------------

$query = New-RscMutationSyslog -Op AddExportRule
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSyslog.AddExportRule" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSyslog.AddExportRule" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSyslog.AddExportRule" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSyslog -Operation AddExportRule
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSyslog -Op DeleteExportRule
# -------------------------------------------------------------------

$query = New-RscMutationSyslog -Op DeleteExportRule
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSyslog.DeleteExportRule" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSyslog.DeleteExportRule" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSyslog.DeleteExportRule" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSyslog -Operation DeleteExportRule
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSyslog -Op TestExportRule
# -------------------------------------------------------------------

$query = New-RscMutationSyslog -Op TestExportRule
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSyslog.TestExportRule" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSyslog.TestExportRule" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSyslog.TestExportRule" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSyslog -Operation TestExportRule
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationSyslog -Op UpdateExportRule
# -------------------------------------------------------------------

$query = New-RscMutationSyslog -Op UpdateExportRule
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationSyslog.UpdateExportRule" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationSyslog.UpdateExportRule" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationSyslog.UpdateExportRule" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationSyslog -Operation UpdateExportRule
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationTape -Op CreateReaderTarget
# -------------------------------------------------------------------

$query = New-RscMutationTape -Op CreateReaderTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationTape.CreateReaderTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationTape.CreateReaderTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationTape.CreateReaderTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationTape -Operation CreateReaderTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationTape -Op CreateTarget
# -------------------------------------------------------------------

$query = New-RscMutationTape -Op CreateTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationTape.CreateTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationTape.CreateTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationTape.CreateTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationTape -Operation CreateTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationTape -Op UpdateTarget
# -------------------------------------------------------------------

$query = New-RscMutationTape -Op UpdateTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationTape.UpdateTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationTape.UpdateTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationTape.UpdateTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationTape -Operation UpdateTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationThreat -Op CancelHunt
# -------------------------------------------------------------------

$query = New-RscMutationThreat -Op CancelHunt
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationThreat.CancelHunt" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationThreat.CancelHunt" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationThreat.CancelHunt" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationThreat -Operation CancelHunt
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationThreat -Op EnableMonitoring
# -------------------------------------------------------------------

$query = New-RscMutationThreat -Op EnableMonitoring
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationThreat.EnableMonitoring" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationThreat.EnableMonitoring" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationThreat.EnableMonitoring" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationThreat -Operation EnableMonitoring
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationThreat -Op StartHunt
# -------------------------------------------------------------------

$query = New-RscMutationThreat -Op StartHunt
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationThreat.StartHunt" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationThreat.StartHunt" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationThreat.StartHunt" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationThreat -Operation StartHunt
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationVcenter -Op Create
# -------------------------------------------------------------------

$query = New-RscMutationVcenter -Op Create
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVcenter.Create" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVcenter.Create" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVcenter.Create" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVcenter -Operation Create
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVcenter -Op Delete
# -------------------------------------------------------------------

$query = New-RscMutationVcenter -Op Delete
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVcenter.Delete" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVcenter.Delete" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVcenter.Delete" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVcenter -Operation Delete
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVcenter -Op Refresh
# -------------------------------------------------------------------

$query = New-RscMutationVcenter -Op Refresh
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVcenter.Refresh" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVcenter.Refresh" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVcenter.Refresh" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVcenter -Operation Refresh
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVcenter -Op Update
# -------------------------------------------------------------------

$query = New-RscMutationVcenter -Op Update
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVcenter.Update" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVcenter.Update" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVcenter.Update" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVcenter -Operation Update
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVcenter -Op UpdateHotAddBandwidth
# -------------------------------------------------------------------

$query = New-RscMutationVcenter -Op UpdateHotAddBandwidth
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVcenter.UpdateHotAddBandwidth" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVcenter.UpdateHotAddBandwidth" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVcenter.UpdateHotAddBandwidth" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVcenter -Operation UpdateHotAddBandwidth
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVcenter -Op UpdateHotAddNetwork
# -------------------------------------------------------------------

$query = New-RscMutationVcenter -Op UpdateHotAddNetwork
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVcenter.UpdateHotAddNetwork" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVcenter.UpdateHotAddNetwork" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVcenter.UpdateHotAddNetwork" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVcenter -Operation UpdateHotAddNetwork
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationVmware -Op DownloadSnapshotFromLocation
# -------------------------------------------------------------------

$query = New-RscMutationVmware -Op DownloadSnapshotFromLocation
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVmware.DownloadSnapshotFromLocation" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVmware.DownloadSnapshotFromLocation" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVmware.DownloadSnapshotFromLocation" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVmware -Operation DownloadSnapshotFromLocation
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationVsphere -Op BulkOnDemandSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationVsphere -Op BulkOnDemandSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphere.BulkOnDemandSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphere.BulkOnDemandSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphere.BulkOnDemandSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphere -Operation BulkOnDemandSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphere -Op CreateAdvancedTag
# -------------------------------------------------------------------

$query = New-RscMutationVsphere -Op CreateAdvancedTag
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphere.CreateAdvancedTag" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphere.CreateAdvancedTag" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphere.CreateAdvancedTag" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphere -Operation CreateAdvancedTag
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphere -Op DeleteAdvancedTag
# -------------------------------------------------------------------

$query = New-RscMutationVsphere -Op DeleteAdvancedTag
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphere.DeleteAdvancedTag" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphere.DeleteAdvancedTag" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphere.DeleteAdvancedTag" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphere -Operation DeleteAdvancedTag
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphere -Op DeleteLiveMount
# -------------------------------------------------------------------

$query = New-RscMutationVsphere -Op DeleteLiveMount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphere.DeleteLiveMount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphere.DeleteLiveMount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphere.DeleteLiveMount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphere -Operation DeleteLiveMount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphere -Op DownloadVirtualMachineFiles
# -------------------------------------------------------------------

$query = New-RscMutationVsphere -Op DownloadVirtualMachineFiles
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphere.DownloadVirtualMachineFiles" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphere.DownloadVirtualMachineFiles" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphere.DownloadVirtualMachineFiles" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphere -Operation DownloadVirtualMachineFiles
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphere -Op ExportSnapshotToStandaloneHostV2
# -------------------------------------------------------------------

$query = New-RscMutationVsphere -Op ExportSnapshotToStandaloneHostV2
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphere.ExportSnapshotToStandaloneHostV2" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphere.ExportSnapshotToStandaloneHostV2" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphere.ExportSnapshotToStandaloneHostV2" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphere -Operation ExportSnapshotToStandaloneHostV2
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphere -Op OnDemandSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationVsphere -Op OnDemandSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphere.OnDemandSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphere.OnDemandSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphere.OnDemandSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphere -Operation OnDemandSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphere -Op UpdateAdvancedTag
# -------------------------------------------------------------------

$query = New-RscMutationVsphere -Op UpdateAdvancedTag
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphere.UpdateAdvancedTag" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphere.UpdateAdvancedTag" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphere.UpdateAdvancedTag" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphere -Operation UpdateAdvancedTag
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationVsphereVm -Op BatchExport
# -------------------------------------------------------------------

$query = New-RscMutationVsphereVm -Op BatchExport
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphereVm.BatchExport" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphereVm.BatchExport" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphereVm.BatchExport" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphereVm -Operation BatchExport
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphereVm -Op BatchExportV3
# -------------------------------------------------------------------

$query = New-RscMutationVsphereVm -Op BatchExportV3
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphereVm.BatchExportV3" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphereVm.BatchExportV3" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphereVm.BatchExportV3" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphereVm -Operation BatchExportV3
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphereVm -Op BatchInPlaceRecovery
# -------------------------------------------------------------------

$query = New-RscMutationVsphereVm -Op BatchInPlaceRecovery
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphereVm.BatchInPlaceRecovery" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphereVm.BatchInPlaceRecovery" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphereVm.BatchInPlaceRecovery" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphereVm -Operation BatchInPlaceRecovery
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphereVm -Op DeleteSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationVsphereVm -Op DeleteSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphereVm.DeleteSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphereVm.DeleteSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphereVm.DeleteSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphereVm -Operation DeleteSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphereVm -Op DownloadSnapshot
# -------------------------------------------------------------------

$query = New-RscMutationVsphereVm -Op DownloadSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphereVm.DownloadSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphereVm.DownloadSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphereVm.DownloadSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphereVm -Operation DownloadSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphereVm -Op DownloadSnapshotFiles
# -------------------------------------------------------------------

$query = New-RscMutationVsphereVm -Op DownloadSnapshotFiles
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphereVm.DownloadSnapshotFiles" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphereVm.DownloadSnapshotFiles" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphereVm.DownloadSnapshotFiles" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphereVm -Operation DownloadSnapshotFiles
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphereVm -Op ExcludeVmDisks
# -------------------------------------------------------------------

$query = New-RscMutationVsphereVm -Op ExcludeVmDisks
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphereVm.ExcludeVmDisks" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphereVm.ExcludeVmDisks" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphereVm.ExcludeVmDisks" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphereVm -Operation ExcludeVmDisks
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphereVm -Op ExportSnapshotV2
# -------------------------------------------------------------------

$query = New-RscMutationVsphereVm -Op ExportSnapshotV2
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphereVm.ExportSnapshotV2" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphereVm.ExportSnapshotV2" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphereVm.ExportSnapshotV2" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphereVm -Operation ExportSnapshotV2
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphereVm -Op ExportSnapshotV3
# -------------------------------------------------------------------

$query = New-RscMutationVsphereVm -Op ExportSnapshotV3
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphereVm.ExportSnapshotV3" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphereVm.ExportSnapshotV3" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphereVm.ExportSnapshotV3" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphereVm -Operation ExportSnapshotV3
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphereVm -Op ExportSnapshotWithDownloadFromCloud
# -------------------------------------------------------------------

$query = New-RscMutationVsphereVm -Op ExportSnapshotWithDownloadFromCloud
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphereVm.ExportSnapshotWithDownloadFromCloud" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphereVm.ExportSnapshotWithDownloadFromCloud" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphereVm.ExportSnapshotWithDownloadFromCloud" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphereVm -Operation ExportSnapshotWithDownloadFromCloud
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphereVm -Op InitiateBatchInstantRecovery
# -------------------------------------------------------------------

$query = New-RscMutationVsphereVm -Op InitiateBatchInstantRecovery
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphereVm.InitiateBatchInstantRecovery" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphereVm.InitiateBatchInstantRecovery" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphereVm.InitiateBatchInstantRecovery" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphereVm -Operation InitiateBatchInstantRecovery
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphereVm -Op InitiateBatchLiveMountV2
# -------------------------------------------------------------------

$query = New-RscMutationVsphereVm -Op InitiateBatchLiveMountV2
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphereVm.InitiateBatchLiveMountV2" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphereVm.InitiateBatchLiveMountV2" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphereVm.InitiateBatchLiveMountV2" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphereVm -Operation InitiateBatchLiveMountV2
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphereVm -Op InitiateDiskMount
# -------------------------------------------------------------------

$query = New-RscMutationVsphereVm -Op InitiateDiskMount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphereVm.InitiateDiskMount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphereVm.InitiateDiskMount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphereVm.InitiateDiskMount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphereVm -Operation InitiateDiskMount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphereVm -Op InitiateInPlaceRecovery
# -------------------------------------------------------------------

$query = New-RscMutationVsphereVm -Op InitiateInPlaceRecovery
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphereVm.InitiateInPlaceRecovery" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphereVm.InitiateInPlaceRecovery" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphereVm.InitiateInPlaceRecovery" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphereVm -Operation InitiateInPlaceRecovery
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphereVm -Op InitiateInstantRecoveryV2
# -------------------------------------------------------------------

$query = New-RscMutationVsphereVm -Op InitiateInstantRecoveryV2
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphereVm.InitiateInstantRecoveryV2" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphereVm.InitiateInstantRecoveryV2" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphereVm.InitiateInstantRecoveryV2" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphereVm -Operation InitiateInstantRecoveryV2
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphereVm -Op InitiateLiveMountV2
# -------------------------------------------------------------------

$query = New-RscMutationVsphereVm -Op InitiateLiveMountV2
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphereVm.InitiateLiveMountV2" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphereVm.InitiateLiveMountV2" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphereVm.InitiateLiveMountV2" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphereVm -Operation InitiateLiveMountV2
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphereVm -Op ListEsxiDatastores
# -------------------------------------------------------------------

$query = New-RscMutationVsphereVm -Op ListEsxiDatastores
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphereVm.ListEsxiDatastores" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphereVm.ListEsxiDatastores" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphereVm.ListEsxiDatastores" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphereVm -Operation ListEsxiDatastores
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphereVm -Op MountRelocate
# -------------------------------------------------------------------

$query = New-RscMutationVsphereVm -Op MountRelocate
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphereVm.MountRelocate" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphereVm.MountRelocate" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphereVm.MountRelocate" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphereVm -Operation MountRelocate
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphereVm -Op MountRelocateV2
# -------------------------------------------------------------------

$query = New-RscMutationVsphereVm -Op MountRelocateV2
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphereVm.MountRelocateV2" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphereVm.MountRelocateV2" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphereVm.MountRelocateV2" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphereVm -Operation MountRelocateV2
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphereVm -Op PowerOnOffLiveMount
# -------------------------------------------------------------------

$query = New-RscMutationVsphereVm -Op PowerOnOffLiveMount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphereVm.PowerOnOffLiveMount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphereVm.PowerOnOffLiveMount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphereVm.PowerOnOffLiveMount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphereVm -Operation PowerOnOffLiveMount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphereVm -Op RecoverFiles
# -------------------------------------------------------------------

$query = New-RscMutationVsphereVm -Op RecoverFiles
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphereVm.RecoverFiles" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphereVm.RecoverFiles" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphereVm.RecoverFiles" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphereVm -Operation RecoverFiles
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphereVm -Op RecoverFilesNew
# -------------------------------------------------------------------

$query = New-RscMutationVsphereVm -Op RecoverFilesNew
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphereVm.RecoverFilesNew" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphereVm.RecoverFilesNew" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphereVm.RecoverFilesNew" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphereVm -Operation RecoverFilesNew
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphereVm -Op RegisterAgent
# -------------------------------------------------------------------

$query = New-RscMutationVsphereVm -Op RegisterAgent
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphereVm.RegisterAgent" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphereVm.RegisterAgent" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphereVm.RegisterAgent" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphereVm -Operation RegisterAgent
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphereVm -Op RegisterAgentWithOrg
# -------------------------------------------------------------------

$query = New-RscMutationVsphereVm -Op RegisterAgentWithOrg
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphereVm.RegisterAgentWithOrg" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphereVm.RegisterAgentWithOrg" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphereVm.RegisterAgentWithOrg" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphereVm -Operation RegisterAgentWithOrg
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationVsphereVm -Op Update
# -------------------------------------------------------------------

$query = New-RscMutationVsphereVm -Op Update
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationVsphereVm.Update" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationVsphereVm.Update" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationVsphereVm.Update" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationVsphereVm -Operation Update
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscMutationWebhook -Op Create
# -------------------------------------------------------------------

$query = New-RscMutationWebhook -Op Create
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationWebhook.Create" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationWebhook.Create" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationWebhook.Create" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationWebhook -Operation Create
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationWebhook -Op Delete
# -------------------------------------------------------------------

$query = New-RscMutationWebhook -Op Delete
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationWebhook.Delete" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationWebhook.Delete" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationWebhook.Delete" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationWebhook -Operation Delete
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationWebhook -Op Test
# -------------------------------------------------------------------

$query = New-RscMutationWebhook -Op Test
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationWebhook.Test" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationWebhook.Test" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationWebhook.Test" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationWebhook -Operation Test
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationWebhook -Op TestExisting
# -------------------------------------------------------------------

$query = New-RscMutationWebhook -Op TestExisting
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationWebhook.TestExisting" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationWebhook.TestExisting" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationWebhook.TestExisting" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationWebhook -Operation TestExisting
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscMutationWebhook -Op Update
# -------------------------------------------------------------------

$query = New-RscMutationWebhook -Op Update
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscMutationWebhook.Update" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscMutationWebhook.Update" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscMutationWebhook.Update" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscMutationWebhook -Operation Update
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryAccount -Op CurrentUser
# -------------------------------------------------------------------

$query = New-RscQueryAccount -Op CurrentUser
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAccount.CurrentUser" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAccount.CurrentUser" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAccount.CurrentUser" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAccount -Operation CurrentUser
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAccount -Op CurrentUserLoginContext
# -------------------------------------------------------------------

$query = New-RscQueryAccount -Op CurrentUserLoginContext
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAccount.CurrentUserLoginContext" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAccount.CurrentUserLoginContext" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAccount.CurrentUserLoginContext" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAccount -Operation CurrentUserLoginContext
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAccount -Op EnabledFeatures
# -------------------------------------------------------------------

$query = New-RscQueryAccount -Op EnabledFeatures
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAccount.EnabledFeatures" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAccount.EnabledFeatures" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAccount.EnabledFeatures" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAccount -Operation EnabledFeatures
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAccount -Op Id
# -------------------------------------------------------------------

$query = New-RscQueryAccount -Op Id
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAccount.Id" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAccount.Id" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAccount.Id" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAccount -Operation Id
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAccount -Op Lookup
# -------------------------------------------------------------------

$query = New-RscQueryAccount -Op Lookup
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAccount.Lookup" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAccount.Lookup" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAccount.Lookup" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAccount -Operation Lookup
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAccount -Op Owners
# -------------------------------------------------------------------

$query = New-RscQueryAccount -Op Owners
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAccount.Owners" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAccount.Owners" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAccount.Owners" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAccount -Operation Owners
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAccount -Op Products
# -------------------------------------------------------------------

$query = New-RscQueryAccount -Op Products
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAccount.Products" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAccount.Products" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAccount.Products" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAccount -Operation Products
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAccount -Op Settings
# -------------------------------------------------------------------

$query = New-RscQueryAccount -Op Settings
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAccount.Settings" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAccount.Settings" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAccount.Settings" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAccount -Operation Settings
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAccount -Op Users
# -------------------------------------------------------------------

$query = New-RscQueryAccount -Op Users
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAccount.Users" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAccount.Users" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAccount.Users" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAccount -Operation Users
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryActiveDirectory -Op Domain
# -------------------------------------------------------------------

$query = New-RscQueryActiveDirectory -Op Domain
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryActiveDirectory.Domain" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryActiveDirectory.Domain" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryActiveDirectory.Domain" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryActiveDirectory -Operation Domain
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryActiveDirectory -Op DomainController
# -------------------------------------------------------------------

$query = New-RscQueryActiveDirectory -Op DomainController
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryActiveDirectory.DomainController" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryActiveDirectory.DomainController" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryActiveDirectory.DomainController" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryActiveDirectory -Operation DomainController
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryActiveDirectory -Op DomainControllers
# -------------------------------------------------------------------

$query = New-RscQueryActiveDirectory -Op DomainControllers
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryActiveDirectory.DomainControllers" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryActiveDirectory.DomainControllers" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryActiveDirectory.DomainControllers" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryActiveDirectory -Operation DomainControllers
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryActiveDirectory -Op Domains
# -------------------------------------------------------------------

$query = New-RscQueryActiveDirectory -Op Domains
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryActiveDirectory.Domains" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryActiveDirectory.Domains" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryActiveDirectory.Domains" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryActiveDirectory -Operation Domains
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryActiveDirectory -Op SearchSnapshots
# -------------------------------------------------------------------

$query = New-RscQueryActiveDirectory -Op SearchSnapshots
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryActiveDirectory.SearchSnapshots" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryActiveDirectory.SearchSnapshots" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryActiveDirectory.SearchSnapshots" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryActiveDirectory -Operation SearchSnapshots
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryActivitySeries -Op ActivitySeries
# -------------------------------------------------------------------

$query = New-RscQueryActivitySeries -Op ActivitySeries
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryActivitySeries.ActivitySeries" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryActivitySeries.ActivitySeries" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryActivitySeries.ActivitySeries" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryActivitySeries -Operation ActivitySeries
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryActivitySeries -Op List
# -------------------------------------------------------------------

$query = New-RscQueryActivitySeries -Op List
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryActivitySeries.List" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryActivitySeries.List" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryActivitySeries.List" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryActivitySeries -Operation List
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryActivitySeries -Op UserFileTimeline
# -------------------------------------------------------------------

$query = New-RscQueryActivitySeries -Op UserFileTimeline
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryActivitySeries.UserFileTimeline" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryActivitySeries.UserFileTimeline" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryActivitySeries.UserFileTimeline" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryActivitySeries -Operation UserFileTimeline
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryActivitySeries -Op UserTimeline
# -------------------------------------------------------------------

$query = New-RscQueryActivitySeries -Op UserTimeline
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryActivitySeries.UserTimeline" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryActivitySeries.UserTimeline" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryActivitySeries.UserTimeline" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryActivitySeries -Operation UserTimeline
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryArchival -Op HierarchyObjectRecoveryTarget
# -------------------------------------------------------------------

$query = New-RscQueryArchival -Op HierarchyObjectRecoveryTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryArchival.HierarchyObjectRecoveryTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryArchival.HierarchyObjectRecoveryTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryArchival.HierarchyObjectRecoveryTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryArchival -Operation HierarchyObjectRecoveryTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryArchival -Op IsTotpMandatoryInTargetVersion
# -------------------------------------------------------------------

$query = New-RscQueryArchival -Op IsTotpMandatoryInTargetVersion
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryArchival.IsTotpMandatoryInTargetVersion" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryArchival.IsTotpMandatoryInTargetVersion" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryArchival.IsTotpMandatoryInTargetVersion" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryArchival -Operation IsTotpMandatoryInTargetVersion
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryArchival -Op RcsLocationsConsumptionStats
# -------------------------------------------------------------------

$query = New-RscQueryArchival -Op RcsLocationsConsumptionStats
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryArchival.RcsLocationsConsumptionStats" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryArchival.RcsLocationsConsumptionStats" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryArchival.RcsLocationsConsumptionStats" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryArchival -Operation RcsLocationsConsumptionStats
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryArchival -Op StorageUsage
# -------------------------------------------------------------------

$query = New-RscQueryArchival -Op StorageUsage
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryArchival.StorageUsage" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryArchival.StorageUsage" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryArchival.StorageUsage" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryArchival -Operation StorageUsage
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryArchival -Op Target
# -------------------------------------------------------------------

$query = New-RscQueryArchival -Op Target
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryArchival.Target" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryArchival.Target" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryArchival.Target" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryArchival -Operation Target
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryArchival -Op TargetMapping
# -------------------------------------------------------------------

$query = New-RscQueryArchival -Op TargetMapping
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryArchival.TargetMapping" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryArchival.TargetMapping" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryArchival.TargetMapping" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryArchival -Operation TargetMapping
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryArchival -Op TargetMappings
# -------------------------------------------------------------------

$query = New-RscQueryArchival -Op TargetMappings
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryArchival.TargetMappings" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryArchival.TargetMappings" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryArchival.TargetMappings" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryArchival -Operation TargetMappings
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryArchival -Op Targets
# -------------------------------------------------------------------

$query = New-RscQueryArchival -Op Targets
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryArchival.Targets" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryArchival.Targets" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryArchival.Targets" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryArchival -Operation Targets
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryAws -Op ArtifactsToDelete
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op ArtifactsToDelete
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.ArtifactsToDelete" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.ArtifactsToDelete" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.ArtifactsToDelete" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation ArtifactsToDelete
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAws -Op AvailabilityZonesByRegion
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op AvailabilityZonesByRegion
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.AvailabilityZonesByRegion" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.AvailabilityZonesByRegion" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.AvailabilityZonesByRegion" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation AvailabilityZonesByRegion
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAws -Op CdmVersions
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op CdmVersions
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.CdmVersions" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.CdmVersions" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.CdmVersions" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation CdmVersions
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAws -Op CloudAccountConfigs
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op CloudAccountConfigs
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.CloudAccountConfigs" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.CloudAccountConfigs" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.CloudAccountConfigs" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation CloudAccountConfigs
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAws -Op CloudAccountListSecurityGroups
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op CloudAccountListSecurityGroups
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.CloudAccountListSecurityGroups" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.CloudAccountListSecurityGroups" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.CloudAccountListSecurityGroups" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation CloudAccountListSecurityGroups
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAws -Op CloudAccountListSubnets
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op CloudAccountListSubnets
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.CloudAccountListSubnets" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.CloudAccountListSubnets" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.CloudAccountListSubnets" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation CloudAccountListSubnets
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAws -Op CloudAccountListVpcs
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op CloudAccountListVpcs
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.CloudAccountListVpcs" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.CloudAccountListVpcs" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.CloudAccountListVpcs" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation CloudAccountListVpcs
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAws -Op CloudAccountWithFeatures
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op CloudAccountWithFeatures
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.CloudAccountWithFeatures" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.CloudAccountWithFeatures" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.CloudAccountWithFeatures" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation CloudAccountWithFeatures
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAws -Op CloudAccountsWithFeatures
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op CloudAccountsWithFeatures
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.CloudAccountsWithFeatures" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.CloudAccountsWithFeatures" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.CloudAccountsWithFeatures" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation CloudAccountsWithFeatures
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAws -Op ComputeSettings
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op ComputeSettings
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.ComputeSettings" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.ComputeSettings" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.ComputeSettings" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation ComputeSettings
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAws -Op DbParameterGroupsByRegion
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op DbParameterGroupsByRegion
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.DbParameterGroupsByRegion" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.DbParameterGroupsByRegion" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.DbParameterGroupsByRegion" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation DbParameterGroupsByRegion
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAws -Op DbSubnetGroupsByRegion
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op DbSubnetGroupsByRegion
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.DbSubnetGroupsByRegion" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.DbSubnetGroupsByRegion" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.DbSubnetGroupsByRegion" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation DbSubnetGroupsByRegion
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAws -Op Ec2KeyPairsByRegion
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op Ec2KeyPairsByRegion
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.Ec2KeyPairsByRegion" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.Ec2KeyPairsByRegion" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.Ec2KeyPairsByRegion" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation Ec2KeyPairsByRegion
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAws -Op ExocomputeConfigs
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op ExocomputeConfigs
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.ExocomputeConfigs" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.ExocomputeConfigs" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.ExocomputeConfigs" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation ExocomputeConfigs
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAws -Op InstanceProfileNames
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op InstanceProfileNames
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.InstanceProfileNames" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.InstanceProfileNames" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.InstanceProfileNames" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation InstanceProfileNames
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAws -Op IsS3BucketNameAvailable
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op IsS3BucketNameAvailable
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.IsS3BucketNameAvailable" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.IsS3BucketNameAvailable" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.IsS3BucketNameAvailable" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation IsS3BucketNameAvailable
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAws -Op KmsEncryptionKeysByRegion
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op KmsEncryptionKeysByRegion
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.KmsEncryptionKeysByRegion" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.KmsEncryptionKeysByRegion" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.KmsEncryptionKeysByRegion" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation KmsEncryptionKeysByRegion
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAws -Op OptionGroupsByRegion
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op OptionGroupsByRegion
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.OptionGroupsByRegion" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.OptionGroupsByRegion" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.OptionGroupsByRegion" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation OptionGroupsByRegion
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAws -Op PermissionPolicies
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op PermissionPolicies
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.PermissionPolicies" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.PermissionPolicies" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.PermissionPolicies" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation PermissionPolicies
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAws -Op RdsInstanceDetails
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op RdsInstanceDetails
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.RdsInstanceDetails" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.RdsInstanceDetails" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.RdsInstanceDetails" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation RdsInstanceDetails
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAws -Op Regions
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op Regions
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.Regions" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.Regions" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.Regions" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation Regions
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAws -Op S3BucketStateForRecovery
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op S3BucketStateForRecovery
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.S3BucketStateForRecovery" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.S3BucketStateForRecovery" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.S3BucketStateForRecovery" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation S3BucketStateForRecovery
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAws -Op S3Buckets
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op S3Buckets
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.S3Buckets" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.S3Buckets" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.S3Buckets" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation S3Buckets
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAws -Op S3BucketsDetails
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op S3BucketsDetails
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.S3BucketsDetails" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.S3BucketsDetails" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.S3BucketsDetails" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation S3BucketsDetails
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAws -Op SupportedEksVersions
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op SupportedEksVersions
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.SupportedEksVersions" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.SupportedEksVersions" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.SupportedEksVersions" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation SupportedEksVersions
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAws -Op SupportedRdsDatabaseInstanceClasses
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op SupportedRdsDatabaseInstanceClasses
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.SupportedRdsDatabaseInstanceClasses" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.SupportedRdsDatabaseInstanceClasses" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.SupportedRdsDatabaseInstanceClasses" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation SupportedRdsDatabaseInstanceClasses
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAws -Op TrustPolicy
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op TrustPolicy
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.TrustPolicy" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.TrustPolicy" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.TrustPolicy" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation TrustPolicy
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAws -Op ValidateCreateClusterInput
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op ValidateCreateClusterInput
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.ValidateCreateClusterInput" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.ValidateCreateClusterInput" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.ValidateCreateClusterInput" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation ValidateCreateClusterInput
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAws -Op Vpcs
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op Vpcs
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.Vpcs" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.Vpcs" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.Vpcs" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation Vpcs
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAws -Op VpcsByRegion
# -------------------------------------------------------------------

$query = New-RscQueryAws -Op VpcsByRegion
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAws.VpcsByRegion" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAws.VpcsByRegion" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAws.VpcsByRegion" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAws -Operation VpcsByRegion
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryAwsNative -Op Account
# -------------------------------------------------------------------

$query = New-RscQueryAwsNative -Op Account
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAwsNative.Account" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAwsNative.Account" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAwsNative.Account" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAwsNative -Operation Account
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAwsNative -Op Accounts
# -------------------------------------------------------------------

$query = New-RscQueryAwsNative -Op Accounts
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAwsNative.Accounts" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAwsNative.Accounts" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAwsNative.Accounts" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAwsNative -Operation Accounts
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAwsNative -Op AmiTypeForArchivedSnapshotExport
# -------------------------------------------------------------------

$query = New-RscQueryAwsNative -Op AmiTypeForArchivedSnapshotExport
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAwsNative.AmiTypeForArchivedSnapshotExport" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAwsNative.AmiTypeForArchivedSnapshotExport" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAwsNative.AmiTypeForArchivedSnapshotExport" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAwsNative -Operation AmiTypeForArchivedSnapshotExport
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAwsNative -Op EbsVolume
# -------------------------------------------------------------------

$query = New-RscQueryAwsNative -Op EbsVolume
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAwsNative.EbsVolume" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAwsNative.EbsVolume" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAwsNative.EbsVolume" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAwsNative -Operation EbsVolume
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAwsNative -Op EbsVolumes
# -------------------------------------------------------------------

$query = New-RscQueryAwsNative -Op EbsVolumes
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAwsNative.EbsVolumes" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAwsNative.EbsVolumes" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAwsNative.EbsVolumes" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAwsNative -Operation EbsVolumes
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAwsNative -Op EbsVolumesByName
# -------------------------------------------------------------------

$query = New-RscQueryAwsNative -Op EbsVolumesByName
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAwsNative.EbsVolumesByName" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAwsNative.EbsVolumesByName" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAwsNative.EbsVolumesByName" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAwsNative -Operation EbsVolumesByName
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAwsNative -Op Ec2Instance
# -------------------------------------------------------------------

$query = New-RscQueryAwsNative -Op Ec2Instance
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAwsNative.Ec2Instance" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAwsNative.Ec2Instance" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAwsNative.Ec2Instance" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAwsNative -Operation Ec2Instance
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAwsNative -Op Ec2Instances
# -------------------------------------------------------------------

$query = New-RscQueryAwsNative -Op Ec2Instances
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAwsNative.Ec2Instances" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAwsNative.Ec2Instances" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAwsNative.Ec2Instances" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAwsNative -Operation Ec2Instances
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAwsNative -Op Ec2InstancesByName
# -------------------------------------------------------------------

$query = New-RscQueryAwsNative -Op Ec2InstancesByName
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAwsNative.Ec2InstancesByName" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAwsNative.Ec2InstancesByName" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAwsNative.Ec2InstancesByName" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAwsNative -Operation Ec2InstancesByName
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAwsNative -Op IsEbsVolumeSnapshotRestorable
# -------------------------------------------------------------------

$query = New-RscQueryAwsNative -Op IsEbsVolumeSnapshotRestorable
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAwsNative.IsEbsVolumeSnapshotRestorable" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAwsNative.IsEbsVolumeSnapshotRestorable" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAwsNative.IsEbsVolumeSnapshotRestorable" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAwsNative -Operation IsEbsVolumeSnapshotRestorable
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAwsNative -Op IsRdsInstanceLaunchConfigurationValid
# -------------------------------------------------------------------

$query = New-RscQueryAwsNative -Op IsRdsInstanceLaunchConfigurationValid
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAwsNative.IsRdsInstanceLaunchConfigurationValid" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAwsNative.IsRdsInstanceLaunchConfigurationValid" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAwsNative.IsRdsInstanceLaunchConfigurationValid" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAwsNative -Operation IsRdsInstanceLaunchConfigurationValid
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAwsNative -Op RdsExportDefaults
# -------------------------------------------------------------------

$query = New-RscQueryAwsNative -Op RdsExportDefaults
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAwsNative.RdsExportDefaults" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAwsNative.RdsExportDefaults" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAwsNative.RdsExportDefaults" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAwsNative -Operation RdsExportDefaults
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAwsNative -Op RdsInstance
# -------------------------------------------------------------------

$query = New-RscQueryAwsNative -Op RdsInstance
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAwsNative.RdsInstance" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAwsNative.RdsInstance" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAwsNative.RdsInstance" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAwsNative -Operation RdsInstance
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAwsNative -Op RdsInstances
# -------------------------------------------------------------------

$query = New-RscQueryAwsNative -Op RdsInstances
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAwsNative.RdsInstances" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAwsNative.RdsInstances" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAwsNative.RdsInstances" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAwsNative -Operation RdsInstances
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAwsNative -Op RdsPointInTimeRestoreWindow
# -------------------------------------------------------------------

$query = New-RscQueryAwsNative -Op RdsPointInTimeRestoreWindow
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAwsNative.RdsPointInTimeRestoreWindow" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAwsNative.RdsPointInTimeRestoreWindow" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAwsNative.RdsPointInTimeRestoreWindow" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAwsNative -Operation RdsPointInTimeRestoreWindow
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAwsNative -Op Root
# -------------------------------------------------------------------

$query = New-RscQueryAwsNative -Op Root
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAwsNative.Root" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAwsNative.Root" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAwsNative.Root" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAwsNative -Operation Root
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAwsNative -Op S3Bucket
# -------------------------------------------------------------------

$query = New-RscQueryAwsNative -Op S3Bucket
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAwsNative.S3Bucket" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAwsNative.S3Bucket" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAwsNative.S3Bucket" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAwsNative -Operation S3Bucket
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAwsNative -Op ValidateRdsClusterNameForExport
# -------------------------------------------------------------------

$query = New-RscQueryAwsNative -Op ValidateRdsClusterNameForExport
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAwsNative.ValidateRdsClusterNameForExport" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAwsNative.ValidateRdsClusterNameForExport" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAwsNative.ValidateRdsClusterNameForExport" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAwsNative -Operation ValidateRdsClusterNameForExport
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAwsNative -Op ValidateRdsInstanceNameForExport
# -------------------------------------------------------------------

$query = New-RscQueryAwsNative -Op ValidateRdsInstanceNameForExport
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAwsNative.ValidateRdsInstanceNameForExport" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAwsNative.ValidateRdsInstanceNameForExport" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAwsNative.ValidateRdsInstanceNameForExport" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAwsNative -Operation ValidateRdsInstanceNameForExport
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryAzure -Op AdDirectories
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op AdDirectories
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.AdDirectories" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.AdDirectories" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.AdDirectories" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation AdDirectories
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op AdDirectory
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op AdDirectory
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.AdDirectory" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.AdDirectory" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.AdDirectory" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation AdDirectory
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op AdObjectsByType
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op AdObjectsByType
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.AdObjectsByType" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.AdObjectsByType" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.AdObjectsByType" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation AdObjectsByType
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op ArmTemplatesByFeature
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op ArmTemplatesByFeature
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.ArmTemplatesByFeature" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.ArmTemplatesByFeature" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.ArmTemplatesByFeature" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation ArmTemplatesByFeature
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op CdmVersions
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op CdmVersions
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.CdmVersions" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.CdmVersions" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.CdmVersions" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation CdmVersions
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op CheckPersistentStorageSubscriptionCanUnmap
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op CheckPersistentStorageSubscriptionCanUnmap
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.CheckPersistentStorageSubscriptionCanUnmap" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.CheckPersistentStorageSubscriptionCanUnmap" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.CheckPersistentStorageSubscriptionCanUnmap" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation CheckPersistentStorageSubscriptionCanUnmap
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op CloudAccountDetailsForFeature
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op CloudAccountDetailsForFeature
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.CloudAccountDetailsForFeature" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.CloudAccountDetailsForFeature" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.CloudAccountDetailsForFeature" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation CloudAccountDetailsForFeature
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op CloudAccountMissingPermissions
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op CloudAccountMissingPermissions
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.CloudAccountMissingPermissions" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.CloudAccountMissingPermissions" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.CloudAccountMissingPermissions" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation CloudAccountMissingPermissions
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op CloudAccountPermissionConfig
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op CloudAccountPermissionConfig
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.CloudAccountPermissionConfig" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.CloudAccountPermissionConfig" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.CloudAccountPermissionConfig" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation CloudAccountPermissionConfig
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op CloudAccountSubnetsByRegion
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op CloudAccountSubnetsByRegion
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.CloudAccountSubnetsByRegion" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.CloudAccountSubnetsByRegion" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.CloudAccountSubnetsByRegion" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation CloudAccountSubnetsByRegion
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op CloudAccountSubscriptionWithFeatures
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op CloudAccountSubscriptionWithFeatures
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.CloudAccountSubscriptionWithFeatures" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.CloudAccountSubscriptionWithFeatures" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.CloudAccountSubscriptionWithFeatures" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation CloudAccountSubscriptionWithFeatures
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op CloudAccountSubscriptionsByFeature
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op CloudAccountSubscriptionsByFeature
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.CloudAccountSubscriptionsByFeature" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.CloudAccountSubscriptionsByFeature" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.CloudAccountSubscriptionsByFeature" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation CloudAccountSubscriptionsByFeature
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op CloudAccountTenant
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op CloudAccountTenant
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.CloudAccountTenant" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.CloudAccountTenant" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.CloudAccountTenant" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation CloudAccountTenant
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op CloudAccountTenantWithExoConfigs
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op CloudAccountTenantWithExoConfigs
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.CloudAccountTenantWithExoConfigs" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.CloudAccountTenantWithExoConfigs" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.CloudAccountTenantWithExoConfigs" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation CloudAccountTenantWithExoConfigs
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op CloudAccountTenants
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op CloudAccountTenants
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.CloudAccountTenants" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.CloudAccountTenants" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.CloudAccountTenants" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation CloudAccountTenants
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op DiskEncryptionSetsByRegion
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op DiskEncryptionSetsByRegion
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.DiskEncryptionSetsByRegion" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.DiskEncryptionSetsByRegion" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.DiskEncryptionSetsByRegion" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation DiskEncryptionSetsByRegion
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op EncryptionKeys
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op EncryptionKeys
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.EncryptionKeys" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.EncryptionKeys" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.EncryptionKeys" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation EncryptionKeys
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op ExocomputeConfigsInAccount
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op ExocomputeConfigsInAccount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.ExocomputeConfigsInAccount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.ExocomputeConfigsInAccount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.ExocomputeConfigsInAccount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation ExocomputeConfigsInAccount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op HasRelicAdSnapshot
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op HasRelicAdSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.HasRelicAdSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.HasRelicAdSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.HasRelicAdSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation HasRelicAdSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op HostedAzureRegions
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op HostedAzureRegions
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.HostedAzureRegions" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.HostedAzureRegions" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.HostedAzureRegions" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation HostedAzureRegions
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op IsStorageAccountNameAvailable
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op IsStorageAccountNameAvailable
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.IsStorageAccountNameAvailable" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.IsStorageAccountNameAvailable" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.IsStorageAccountNameAvailable" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation IsStorageAccountNameAvailable
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op KeyVaultsByRegion
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op KeyVaultsByRegion
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.KeyVaultsByRegion" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.KeyVaultsByRegion" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.KeyVaultsByRegion" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation KeyVaultsByRegion
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op ManagedIdentities
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op ManagedIdentities
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.ManagedIdentities" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.ManagedIdentities" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.ManagedIdentities" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation ManagedIdentities
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op Nsgs
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op Nsgs
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.Nsgs" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.Nsgs" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.Nsgs" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation Nsgs
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op Regions
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op Regions
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.Regions" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.Regions" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.Regions" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation Regions
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op RegionsWithAzDetails
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op RegionsWithAzDetails
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.RegionsWithAzDetails" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.RegionsWithAzDetails" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.RegionsWithAzDetails" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation RegionsWithAzDetails
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op ResourceGroups
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op ResourceGroups
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.ResourceGroups" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.ResourceGroups" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.ResourceGroups" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation ResourceGroups
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op SearchAdSnapshot
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op SearchAdSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.SearchAdSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.SearchAdSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.SearchAdSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation SearchAdSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op SqlDatabase
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op SqlDatabase
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.SqlDatabase" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.SqlDatabase" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.SqlDatabase" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation SqlDatabase
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op SqlDatabaseDbPointInTimeRestoreWindowFromAzure
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op SqlDatabaseDbPointInTimeRestoreWindowFromAzure
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.SqlDatabaseDbPointInTimeRestoreWindowFromAzure" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.SqlDatabaseDbPointInTimeRestoreWindowFromAzure" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.SqlDatabaseDbPointInTimeRestoreWindowFromAzure" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation SqlDatabaseDbPointInTimeRestoreWindowFromAzure
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op SqlDatabaseServer
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op SqlDatabaseServer
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.SqlDatabaseServer" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.SqlDatabaseServer" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.SqlDatabaseServer" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation SqlDatabaseServer
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op SqlDatabaseServerElasticPools
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op SqlDatabaseServerElasticPools
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.SqlDatabaseServerElasticPools" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.SqlDatabaseServerElasticPools" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.SqlDatabaseServerElasticPools" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation SqlDatabaseServerElasticPools
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op SqlDatabaseServers
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op SqlDatabaseServers
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.SqlDatabaseServers" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.SqlDatabaseServers" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.SqlDatabaseServers" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation SqlDatabaseServers
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op SqlDatabases
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op SqlDatabases
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.SqlDatabases" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.SqlDatabases" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.SqlDatabases" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation SqlDatabases
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op SqlManagedInstanceDatabase
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op SqlManagedInstanceDatabase
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.SqlManagedInstanceDatabase" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.SqlManagedInstanceDatabase" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.SqlManagedInstanceDatabase" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation SqlManagedInstanceDatabase
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op SqlManagedInstanceDatabases
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op SqlManagedInstanceDatabases
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.SqlManagedInstanceDatabases" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.SqlManagedInstanceDatabases" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.SqlManagedInstanceDatabases" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation SqlManagedInstanceDatabases
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op SqlManagedInstanceDbPointInTimeRestoreWindowFromAzure
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op SqlManagedInstanceDbPointInTimeRestoreWindowFromAzure
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.SqlManagedInstanceDbPointInTimeRestoreWindowFromAzure" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.SqlManagedInstanceDbPointInTimeRestoreWindowFromAzure" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.SqlManagedInstanceDbPointInTimeRestoreWindowFromAzure" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation SqlManagedInstanceDbPointInTimeRestoreWindowFromAzure
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op SqlManagedInstanceServer
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op SqlManagedInstanceServer
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.SqlManagedInstanceServer" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.SqlManagedInstanceServer" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.SqlManagedInstanceServer" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation SqlManagedInstanceServer
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op SqlManagedInstanceServers
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op SqlManagedInstanceServers
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.SqlManagedInstanceServers" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.SqlManagedInstanceServers" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.SqlManagedInstanceServers" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation SqlManagedInstanceServers
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op StorageAccounts
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op StorageAccounts
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.StorageAccounts" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.StorageAccounts" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.StorageAccounts" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation StorageAccounts
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op StorageAccountsByRegion
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op StorageAccountsByRegion
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.StorageAccountsByRegion" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.StorageAccountsByRegion" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.StorageAccountsByRegion" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation StorageAccountsByRegion
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op Subnets
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op Subnets
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.Subnets" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.Subnets" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.Subnets" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation Subnets
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op SubscriptionWithExocomputeMappings
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op SubscriptionWithExocomputeMappings
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.SubscriptionWithExocomputeMappings" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.SubscriptionWithExocomputeMappings" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.SubscriptionWithExocomputeMappings" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation SubscriptionWithExocomputeMappings
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op Subscriptions
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op Subscriptions
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.Subscriptions" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.Subscriptions" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.Subscriptions" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation Subscriptions
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op VNets
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op VNets
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.VNets" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.VNets" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.VNets" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation VNets
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op ValidateCloudAccountExocomputeConfigurations
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op ValidateCloudAccountExocomputeConfigurations
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.ValidateCloudAccountExocomputeConfigurations" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.ValidateCloudAccountExocomputeConfigurations" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.ValidateCloudAccountExocomputeConfigurations" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation ValidateCloudAccountExocomputeConfigurations
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzure -Op ValidateCreateClusterInput
# -------------------------------------------------------------------

$query = New-RscQueryAzure -Op ValidateCreateClusterInput
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzure.ValidateCreateClusterInput" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzure.ValidateCreateClusterInput" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzure.ValidateCreateClusterInput" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzure -Operation ValidateCreateClusterInput
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryAzureNative -Op AvailabilitySetsByRegionFromAzure
# -------------------------------------------------------------------

$query = New-RscQueryAzureNative -Op AvailabilitySetsByRegionFromAzure
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureNative.AvailabilitySetsByRegionFromAzure" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureNative.AvailabilitySetsByRegionFromAzure" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureNative.AvailabilitySetsByRegionFromAzure" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureNative -Operation AvailabilitySetsByRegionFromAzure
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureNative -Op DoesResourceGroupExist
# -------------------------------------------------------------------

$query = New-RscQueryAzureNative -Op DoesResourceGroupExist
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureNative.DoesResourceGroupExist" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureNative.DoesResourceGroupExist" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureNative.DoesResourceGroupExist" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureNative -Operation DoesResourceGroupExist
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureNative -Op ExportCompatibleDiskTypesByRegionFromAzure
# -------------------------------------------------------------------

$query = New-RscQueryAzureNative -Op ExportCompatibleDiskTypesByRegionFromAzure
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureNative.ExportCompatibleDiskTypesByRegionFromAzure" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureNative.ExportCompatibleDiskTypesByRegionFromAzure" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureNative.ExportCompatibleDiskTypesByRegionFromAzure" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureNative -Operation ExportCompatibleDiskTypesByRegionFromAzure
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureNative -Op ExportCompatibleVmSizesByRegionFromAzure
# -------------------------------------------------------------------

$query = New-RscQueryAzureNative -Op ExportCompatibleVmSizesByRegionFromAzure
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureNative.ExportCompatibleVmSizesByRegionFromAzure" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureNative.ExportCompatibleVmSizesByRegionFromAzure" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureNative.ExportCompatibleVmSizesByRegionFromAzure" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureNative -Operation ExportCompatibleVmSizesByRegionFromAzure
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureNative -Op IsManagedDiskSnapshotRestorable
# -------------------------------------------------------------------

$query = New-RscQueryAzureNative -Op IsManagedDiskSnapshotRestorable
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureNative.IsManagedDiskSnapshotRestorable" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureNative.IsManagedDiskSnapshotRestorable" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureNative.IsManagedDiskSnapshotRestorable" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureNative -Operation IsManagedDiskSnapshotRestorable
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureNative -Op IsSqlDatabaseSnapshotPersistent
# -------------------------------------------------------------------

$query = New-RscQueryAzureNative -Op IsSqlDatabaseSnapshotPersistent
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureNative.IsSqlDatabaseSnapshotPersistent" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureNative.IsSqlDatabaseSnapshotPersistent" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureNative.IsSqlDatabaseSnapshotPersistent" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureNative -Operation IsSqlDatabaseSnapshotPersistent
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureNative -Op ManagedDisk
# -------------------------------------------------------------------

$query = New-RscQueryAzureNative -Op ManagedDisk
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureNative.ManagedDisk" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureNative.ManagedDisk" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureNative.ManagedDisk" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureNative -Operation ManagedDisk
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureNative -Op ManagedDisks
# -------------------------------------------------------------------

$query = New-RscQueryAzureNative -Op ManagedDisks
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureNative.ManagedDisks" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureNative.ManagedDisks" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureNative.ManagedDisks" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureNative -Operation ManagedDisks
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureNative -Op ResourceGroup
# -------------------------------------------------------------------

$query = New-RscQueryAzureNative -Op ResourceGroup
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureNative.ResourceGroup" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureNative.ResourceGroup" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureNative.ResourceGroup" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureNative -Operation ResourceGroup
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureNative -Op ResourceGroups
# -------------------------------------------------------------------

$query = New-RscQueryAzureNative -Op ResourceGroups
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureNative.ResourceGroups" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureNative.ResourceGroups" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureNative.ResourceGroups" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureNative -Operation ResourceGroups
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureNative -Op ResourceGroupsInfoIfExist
# -------------------------------------------------------------------

$query = New-RscQueryAzureNative -Op ResourceGroupsInfoIfExist
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureNative.ResourceGroupsInfoIfExist" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureNative.ResourceGroupsInfoIfExist" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureNative.ResourceGroupsInfoIfExist" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureNative -Operation ResourceGroupsInfoIfExist
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureNative -Op Root
# -------------------------------------------------------------------

$query = New-RscQueryAzureNative -Op Root
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureNative.Root" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureNative.Root" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureNative.Root" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureNative -Operation Root
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureNative -Op SecurityGroupsByRegionFromAzure
# -------------------------------------------------------------------

$query = New-RscQueryAzureNative -Op SecurityGroupsByRegionFromAzure
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureNative.SecurityGroupsByRegionFromAzure" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureNative.SecurityGroupsByRegionFromAzure" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureNative.SecurityGroupsByRegionFromAzure" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureNative -Operation SecurityGroupsByRegionFromAzure
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureNative -Op StorageAccountsFromAzure
# -------------------------------------------------------------------

$query = New-RscQueryAzureNative -Op StorageAccountsFromAzure
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureNative.StorageAccountsFromAzure" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureNative.StorageAccountsFromAzure" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureNative.StorageAccountsFromAzure" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureNative -Operation StorageAccountsFromAzure
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureNative -Op SubnetsByRegionFromAzure
# -------------------------------------------------------------------

$query = New-RscQueryAzureNative -Op SubnetsByRegionFromAzure
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureNative.SubnetsByRegionFromAzure" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureNative.SubnetsByRegionFromAzure" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureNative.SubnetsByRegionFromAzure" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureNative -Operation SubnetsByRegionFromAzure
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureNative -Op Subscription
# -------------------------------------------------------------------

$query = New-RscQueryAzureNative -Op Subscription
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureNative.Subscription" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureNative.Subscription" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureNative.Subscription" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureNative -Operation Subscription
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureNative -Op Subscriptions
# -------------------------------------------------------------------

$query = New-RscQueryAzureNative -Op Subscriptions
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureNative.Subscriptions" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureNative.Subscriptions" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureNative.Subscriptions" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureNative -Operation Subscriptions
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureNative -Op ValidateSqlDatabaseDbNameForExport
# -------------------------------------------------------------------

$query = New-RscQueryAzureNative -Op ValidateSqlDatabaseDbNameForExport
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureNative.ValidateSqlDatabaseDbNameForExport" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureNative.ValidateSqlDatabaseDbNameForExport" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureNative.ValidateSqlDatabaseDbNameForExport" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureNative -Operation ValidateSqlDatabaseDbNameForExport
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureNative -Op ValidateSqlManagedInstanceDbNameForExport
# -------------------------------------------------------------------

$query = New-RscQueryAzureNative -Op ValidateSqlManagedInstanceDbNameForExport
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureNative.ValidateSqlManagedInstanceDbNameForExport" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureNative.ValidateSqlManagedInstanceDbNameForExport" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureNative.ValidateSqlManagedInstanceDbNameForExport" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureNative -Operation ValidateSqlManagedInstanceDbNameForExport
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureNative -Op VirtualMachine
# -------------------------------------------------------------------

$query = New-RscQueryAzureNative -Op VirtualMachine
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureNative.VirtualMachine" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureNative.VirtualMachine" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureNative.VirtualMachine" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureNative -Operation VirtualMachine
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureNative -Op VirtualMachineSizes
# -------------------------------------------------------------------

$query = New-RscQueryAzureNative -Op VirtualMachineSizes
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureNative.VirtualMachineSizes" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureNative.VirtualMachineSizes" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureNative.VirtualMachineSizes" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureNative -Operation VirtualMachineSizes
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureNative -Op VirtualMachines
# -------------------------------------------------------------------

$query = New-RscQueryAzureNative -Op VirtualMachines
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureNative.VirtualMachines" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureNative.VirtualMachines" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureNative.VirtualMachines" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureNative -Operation VirtualMachines
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureNative -Op VirtualNetworks
# -------------------------------------------------------------------

$query = New-RscQueryAzureNative -Op VirtualNetworks
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureNative.VirtualNetworks" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureNative.VirtualNetworks" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureNative.VirtualNetworks" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureNative -Operation VirtualNetworks
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryAzureO365 -Op CheckNSGOutboundRules
# -------------------------------------------------------------------

$query = New-RscQueryAzureO365 -Op CheckNSGOutboundRules
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureO365.CheckNSGOutboundRules" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureO365.CheckNSGOutboundRules" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureO365.CheckNSGOutboundRules" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureO365 -Operation CheckNSGOutboundRules
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureO365 -Op CheckNetworkSubnet
# -------------------------------------------------------------------

$query = New-RscQueryAzureO365 -Op CheckNetworkSubnet
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureO365.CheckNetworkSubnet" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureO365.CheckNetworkSubnet" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureO365.CheckNetworkSubnet" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureO365 -Operation CheckNetworkSubnet
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureO365 -Op CheckResourceGroupName
# -------------------------------------------------------------------

$query = New-RscQueryAzureO365 -Op CheckResourceGroupName
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureO365.CheckResourceGroupName" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureO365.CheckResourceGroupName" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureO365.CheckResourceGroupName" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureO365 -Operation CheckResourceGroupName
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureO365 -Op CheckStorageAccountAccessibility
# -------------------------------------------------------------------

$query = New-RscQueryAzureO365 -Op CheckStorageAccountAccessibility
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureO365.CheckStorageAccountAccessibility" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureO365.CheckStorageAccountAccessibility" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureO365.CheckStorageAccountAccessibility" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureO365 -Operation CheckStorageAccountAccessibility
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureO365 -Op CheckStorageAccountName
# -------------------------------------------------------------------

$query = New-RscQueryAzureO365 -Op CheckStorageAccountName
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureO365.CheckStorageAccountName" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureO365.CheckStorageAccountName" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureO365.CheckStorageAccountName" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureO365 -Operation CheckStorageAccountName
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureO365 -Op CheckSubscriptionQuota
# -------------------------------------------------------------------

$query = New-RscQueryAzureO365 -Op CheckSubscriptionQuota
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureO365.CheckSubscriptionQuota" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureO365.CheckSubscriptionQuota" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureO365.CheckSubscriptionQuota" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureO365 -Operation CheckSubscriptionQuota
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureO365 -Op CheckVirtualNetworkName
# -------------------------------------------------------------------

$query = New-RscQueryAzureO365 -Op CheckVirtualNetworkName
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureO365.CheckVirtualNetworkName" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureO365.CheckVirtualNetworkName" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureO365.CheckVirtualNetworkName" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureO365 -Operation CheckVirtualNetworkName
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureO365 -Op Exocompute
# -------------------------------------------------------------------

$query = New-RscQueryAzureO365 -Op Exocompute
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureO365.Exocompute" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureO365.Exocompute" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureO365.Exocompute" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureO365 -Operation Exocompute
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureO365 -Op GetAzureHostType
# -------------------------------------------------------------------

$query = New-RscQueryAzureO365 -Op GetAzureHostType
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureO365.GetAzureHostType" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureO365.GetAzureHostType" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureO365.GetAzureHostType" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureO365 -Operation GetAzureHostType
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureO365 -Op GetNetworkSubnetUnusedAddr
# -------------------------------------------------------------------

$query = New-RscQueryAzureO365 -Op GetNetworkSubnetUnusedAddr
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureO365.GetNetworkSubnetUnusedAddr" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureO365.GetNetworkSubnetUnusedAddr" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureO365.GetNetworkSubnetUnusedAddr" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureO365 -Operation GetNetworkSubnetUnusedAddr
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryAzureO365 -Op ValidateUserRoles
# -------------------------------------------------------------------

$query = New-RscQueryAzureO365 -Op ValidateUserRoles
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryAzureO365.ValidateUserRoles" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryAzureO365.ValidateUserRoles" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryAzureO365.ValidateUserRoles" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryAzureO365 -Operation ValidateUserRoles
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryCassandra -Op ColumnFamilies
# -------------------------------------------------------------------

$query = New-RscQueryCassandra -Op ColumnFamilies
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCassandra.ColumnFamilies" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCassandra.ColumnFamilies" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCassandra.ColumnFamilies" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCassandra -Operation ColumnFamilies
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCassandra -Op ColumnFamily
# -------------------------------------------------------------------

$query = New-RscQueryCassandra -Op ColumnFamily
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCassandra.ColumnFamily" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCassandra.ColumnFamily" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCassandra.ColumnFamily" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCassandra -Operation ColumnFamily
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCassandra -Op ColumnFamilyRecoverableRange
# -------------------------------------------------------------------

$query = New-RscQueryCassandra -Op ColumnFamilyRecoverableRange
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCassandra.ColumnFamilyRecoverableRange" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCassandra.ColumnFamilyRecoverableRange" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCassandra.ColumnFamilyRecoverableRange" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCassandra -Operation ColumnFamilyRecoverableRange
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCassandra -Op ColumnFamilySchema
# -------------------------------------------------------------------

$query = New-RscQueryCassandra -Op ColumnFamilySchema
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCassandra.ColumnFamilySchema" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCassandra.ColumnFamilySchema" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCassandra.ColumnFamilySchema" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCassandra -Operation ColumnFamilySchema
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCassandra -Op Keyspace
# -------------------------------------------------------------------

$query = New-RscQueryCassandra -Op Keyspace
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCassandra.Keyspace" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCassandra.Keyspace" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCassandra.Keyspace" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCassandra -Operation Keyspace
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCassandra -Op Keyspaces
# -------------------------------------------------------------------

$query = New-RscQueryCassandra -Op Keyspaces
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCassandra.Keyspaces" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCassandra.Keyspaces" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCassandra.Keyspaces" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCassandra -Operation Keyspaces
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCassandra -Op Source
# -------------------------------------------------------------------

$query = New-RscQueryCassandra -Op Source
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCassandra.Source" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCassandra.Source" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCassandra.Source" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCassandra -Operation Source
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCassandra -Op Sources
# -------------------------------------------------------------------

$query = New-RscQueryCassandra -Op Sources
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCassandra.Sources" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCassandra.Sources" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCassandra.Sources" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCassandra -Operation Sources
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryCertificate -Op AssignableGlobalCertificates
# -------------------------------------------------------------------

$query = New-RscQueryCertificate -Op AssignableGlobalCertificates
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCertificate.AssignableGlobalCertificates" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCertificate.AssignableGlobalCertificates" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCertificate.AssignableGlobalCertificates" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCertificate -Operation AssignableGlobalCertificates
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCertificate -Op Certificates
# -------------------------------------------------------------------

$query = New-RscQueryCertificate -Op Certificates
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCertificate.Certificates" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCertificate.Certificates" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCertificate.Certificates" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCertificate -Operation Certificates
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCertificate -Op CertificatesWithKey
# -------------------------------------------------------------------

$query = New-RscQueryCertificate -Op CertificatesWithKey
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCertificate.CertificatesWithKey" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCertificate.CertificatesWithKey" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCertificate.CertificatesWithKey" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCertificate -Operation CertificatesWithKey
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCertificate -Op ClusterCertificates
# -------------------------------------------------------------------

$query = New-RscQueryCertificate -Op ClusterCertificates
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCertificate.ClusterCertificates" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCertificate.ClusterCertificates" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCertificate.ClusterCertificates" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCertificate -Operation ClusterCertificates
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCertificate -Op ClusterCsr
# -------------------------------------------------------------------

$query = New-RscQueryCertificate -Op ClusterCsr
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCertificate.ClusterCsr" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCertificate.ClusterCsr" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCertificate.ClusterCsr" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCertificate -Operation ClusterCsr
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCertificate -Op ClusterWebSigned
# -------------------------------------------------------------------

$query = New-RscQueryCertificate -Op ClusterWebSigned
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCertificate.ClusterWebSigned" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCertificate.ClusterWebSigned" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCertificate.ClusterWebSigned" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCertificate -Operation ClusterWebSigned
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCertificate -Op GlobalCertificate
# -------------------------------------------------------------------

$query = New-RscQueryCertificate -Op GlobalCertificate
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCertificate.GlobalCertificate" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCertificate.GlobalCertificate" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCertificate.GlobalCertificate" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCertificate -Operation GlobalCertificate
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCertificate -Op GlobalCertificates
# -------------------------------------------------------------------

$query = New-RscQueryCertificate -Op GlobalCertificates
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCertificate.GlobalCertificates" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCertificate.GlobalCertificates" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCertificate.GlobalCertificates" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCertificate -Operation GlobalCertificates
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCertificate -Op Info
# -------------------------------------------------------------------

$query = New-RscQueryCertificate -Op Info
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCertificate.Info" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCertificate.Info" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCertificate.Info" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCertificate -Operation Info
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCertificate -Op SigningRequest
# -------------------------------------------------------------------

$query = New-RscQueryCertificate -Op SigningRequest
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCertificate.SigningRequest" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCertificate.SigningRequest" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCertificate.SigningRequest" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCertificate -Operation SigningRequest
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCertificate -Op SigningRequests
# -------------------------------------------------------------------

$query = New-RscQueryCertificate -Op SigningRequests
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCertificate.SigningRequests" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCertificate.SigningRequests" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCertificate.SigningRequests" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCertificate -Operation SigningRequests
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryCloudAccount -Op CloudAccount
# -------------------------------------------------------------------

$query = New-RscQueryCloudAccount -Op CloudAccount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCloudAccount.CloudAccount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCloudAccount.CloudAccount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCloudAccount.CloudAccount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCloudAccount -Operation CloudAccount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCloudAccount -Op CloudAccounts
# -------------------------------------------------------------------

$query = New-RscQueryCloudAccount -Op CloudAccounts
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCloudAccount.CloudAccounts" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCloudAccount.CloudAccounts" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCloudAccount.CloudAccounts" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCloudAccount -Operation CloudAccounts
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCloudAccount -Op CurrentFeaturePermissions
# -------------------------------------------------------------------

$query = New-RscQueryCloudAccount -Op CurrentFeaturePermissions
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCloudAccount.CurrentFeaturePermissions" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCloudAccount.CurrentFeaturePermissions" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCloudAccount.CurrentFeaturePermissions" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCloudAccount -Operation CurrentFeaturePermissions
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCloudAccount -Op ExocomputeMappings
# -------------------------------------------------------------------

$query = New-RscQueryCloudAccount -Op ExocomputeMappings
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCloudAccount.ExocomputeMappings" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCloudAccount.ExocomputeMappings" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCloudAccount.ExocomputeMappings" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCloudAccount -Operation ExocomputeMappings
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCloudAccount -Op LatestFeaturePermissions
# -------------------------------------------------------------------

$query = New-RscQueryCloudAccount -Op LatestFeaturePermissions
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCloudAccount.LatestFeaturePermissions" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCloudAccount.LatestFeaturePermissions" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCloudAccount.LatestFeaturePermissions" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCloudAccount -Operation LatestFeaturePermissions
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCloudAccount -Op WithExocomputeMappings
# -------------------------------------------------------------------

$query = New-RscQueryCloudAccount -Op WithExocomputeMappings
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCloudAccount.WithExocomputeMappings" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCloudAccount.WithExocomputeMappings" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCloudAccount.WithExocomputeMappings" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCloudAccount -Operation WithExocomputeMappings
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryCloudNative -Op CheckArchivedSnapshotsLocked
# -------------------------------------------------------------------

$query = New-RscQueryCloudNative -Op CheckArchivedSnapshotsLocked
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCloudNative.CheckArchivedSnapshotsLocked" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCloudNative.CheckArchivedSnapshotsLocked" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCloudNative.CheckArchivedSnapshotsLocked" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCloudNative -Operation CheckArchivedSnapshotsLocked
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCloudNative -Op CheckLabelRuleNameUniqueness
# -------------------------------------------------------------------

$query = New-RscQueryCloudNative -Op CheckLabelRuleNameUniqueness
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCloudNative.CheckLabelRuleNameUniqueness" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCloudNative.CheckLabelRuleNameUniqueness" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCloudNative.CheckLabelRuleNameUniqueness" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCloudNative -Operation CheckLabelRuleNameUniqueness
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCloudNative -Op CheckRequiredPermissionsForFeature
# -------------------------------------------------------------------

$query = New-RscQueryCloudNative -Op CheckRequiredPermissionsForFeature
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCloudNative.CheckRequiredPermissionsForFeature" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCloudNative.CheckRequiredPermissionsForFeature" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCloudNative.CheckRequiredPermissionsForFeature" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCloudNative -Operation CheckRequiredPermissionsForFeature
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCloudNative -Op CheckTagRuleNameUniqueness
# -------------------------------------------------------------------

$query = New-RscQueryCloudNative -Op CheckTagRuleNameUniqueness
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCloudNative.CheckTagRuleNameUniqueness" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCloudNative.CheckTagRuleNameUniqueness" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCloudNative.CheckTagRuleNameUniqueness" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCloudNative -Operation CheckTagRuleNameUniqueness
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCloudNative -Op CustomerTags
# -------------------------------------------------------------------

$query = New-RscQueryCloudNative -Op CustomerTags
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCloudNative.CustomerTags" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCloudNative.CustomerTags" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCloudNative.CustomerTags" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCloudNative -Operation CustomerTags
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCloudNative -Op FileRecoveryEligibleSnapshots
# -------------------------------------------------------------------

$query = New-RscQueryCloudNative -Op FileRecoveryEligibleSnapshots
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCloudNative.FileRecoveryEligibleSnapshots" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCloudNative.FileRecoveryEligibleSnapshots" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCloudNative.FileRecoveryEligibleSnapshots" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCloudNative -Operation FileRecoveryEligibleSnapshots
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCloudNative -Op IsFileRecoveryFeasible
# -------------------------------------------------------------------

$query = New-RscQueryCloudNative -Op IsFileRecoveryFeasible
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCloudNative.IsFileRecoveryFeasible" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCloudNative.IsFileRecoveryFeasible" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCloudNative.IsFileRecoveryFeasible" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCloudNative -Operation IsFileRecoveryFeasible
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCloudNative -Op LabelKeys
# -------------------------------------------------------------------

$query = New-RscQueryCloudNative -Op LabelKeys
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCloudNative.LabelKeys" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCloudNative.LabelKeys" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCloudNative.LabelKeys" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCloudNative -Operation LabelKeys
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCloudNative -Op LabelRules
# -------------------------------------------------------------------

$query = New-RscQueryCloudNative -Op LabelRules
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCloudNative.LabelRules" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCloudNative.LabelRules" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCloudNative.LabelRules" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCloudNative -Operation LabelRules
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCloudNative -Op LabelValues
# -------------------------------------------------------------------

$query = New-RscQueryCloudNative -Op LabelValues
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCloudNative.LabelValues" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCloudNative.LabelValues" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCloudNative.LabelValues" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCloudNative -Operation LabelValues
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCloudNative -Op RbaInstallers
# -------------------------------------------------------------------

$query = New-RscQueryCloudNative -Op RbaInstallers
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCloudNative.RbaInstallers" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCloudNative.RbaInstallers" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCloudNative.RbaInstallers" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCloudNative -Operation RbaInstallers
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCloudNative -Op SnapshotDetailsForRecovery
# -------------------------------------------------------------------

$query = New-RscQueryCloudNative -Op SnapshotDetailsForRecovery
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCloudNative.SnapshotDetailsForRecovery" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCloudNative.SnapshotDetailsForRecovery" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCloudNative.SnapshotDetailsForRecovery" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCloudNative -Operation SnapshotDetailsForRecovery
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCloudNative -Op SnapshotTypeDetails
# -------------------------------------------------------------------

$query = New-RscQueryCloudNative -Op SnapshotTypeDetails
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCloudNative.SnapshotTypeDetails" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCloudNative.SnapshotTypeDetails" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCloudNative.SnapshotTypeDetails" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCloudNative -Operation SnapshotTypeDetails
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCloudNative -Op Snapshots
# -------------------------------------------------------------------

$query = New-RscQueryCloudNative -Op Snapshots
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCloudNative.Snapshots" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCloudNative.Snapshots" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCloudNative.Snapshots" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCloudNative -Operation Snapshots
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCloudNative -Op SqlServerSetupScript
# -------------------------------------------------------------------

$query = New-RscQueryCloudNative -Op SqlServerSetupScript
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCloudNative.SqlServerSetupScript" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCloudNative.SqlServerSetupScript" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCloudNative.SqlServerSetupScript" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCloudNative -Operation SqlServerSetupScript
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCloudNative -Op TagKeys
# -------------------------------------------------------------------

$query = New-RscQueryCloudNative -Op TagKeys
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCloudNative.TagKeys" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCloudNative.TagKeys" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCloudNative.TagKeys" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCloudNative -Operation TagKeys
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCloudNative -Op TagRules
# -------------------------------------------------------------------

$query = New-RscQueryCloudNative -Op TagRules
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCloudNative.TagRules" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCloudNative.TagRules" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCloudNative.TagRules" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCloudNative -Operation TagRules
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCloudNative -Op TagValues
# -------------------------------------------------------------------

$query = New-RscQueryCloudNative -Op TagValues
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCloudNative.TagValues" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCloudNative.TagValues" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCloudNative.TagValues" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCloudNative -Operation TagValues
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCloudNative -Op WorkloadVersionedFiles
# -------------------------------------------------------------------

$query = New-RscQueryCloudNative -Op WorkloadVersionedFiles
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCloudNative.WorkloadVersionedFiles" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCloudNative.WorkloadVersionedFiles" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCloudNative.WorkloadVersionedFiles" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCloudNative -Operation WorkloadVersionedFiles
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryCluster -Op Cluster
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op Cluster
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.Cluster" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.Cluster" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.Cluster" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation Cluster
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op ComputeClusterStatus
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op ComputeClusterStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.ComputeClusterStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.ComputeClusterStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.ComputeClusterStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation ComputeClusterStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op Connected
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op Connected
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.Connected" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.Connected" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.Connected" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation Connected
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op DefaultGateway
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op DefaultGateway
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.DefaultGateway" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.DefaultGateway" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.DefaultGateway" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation DefaultGateway
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op Dns
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op Dns
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.Dns" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.Dns" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.Dns" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation Dns
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op FloatingIps
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op FloatingIps
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.FloatingIps" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.FloatingIps" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.FloatingIps" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation FloatingIps
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op GetCdmReleaseDetailsForClusterFromSupportPortal
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op GetCdmReleaseDetailsForClusterFromSupportPortal
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.GetCdmReleaseDetailsForClusterFromSupportPortal" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.GetCdmReleaseDetailsForClusterFromSupportPortal" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.GetCdmReleaseDetailsForClusterFromSupportPortal" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation GetCdmReleaseDetailsForClusterFromSupportPortal
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op GetGroupCountByCdmClusterStatus
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op GetGroupCountByCdmClusterStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.GetGroupCountByCdmClusterStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.GetGroupCountByCdmClusterStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.GetGroupCountByCdmClusterStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation GetGroupCountByCdmClusterStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op GroupByList
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op GroupByList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.GroupByList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.GroupByList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.GroupByList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation GroupByList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op Ipmi
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op Ipmi
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.Ipmi" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.Ipmi" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.Ipmi" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation Ipmi
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op Ipv6Mode
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op Ipv6Mode
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.Ipv6Mode" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.Ipv6Mode" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.Ipv6Mode" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation Ipv6Mode
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op IsTotpAckNecessary
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op IsTotpAckNecessary
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.IsTotpAckNecessary" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.IsTotpAckNecessary" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.IsTotpAckNecessary" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation IsTotpAckNecessary
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op Kubernetes
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op Kubernetes
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.Kubernetes" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.Kubernetes" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.Kubernetes" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation Kubernetes
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op LicensesForClusterProductSummary
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op LicensesForClusterProductSummary
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.LicensesForClusterProductSummary" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.LicensesForClusterProductSummary" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.LicensesForClusterProductSummary" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation LicensesForClusterProductSummary
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op List
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op List
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.List" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.List" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.List" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation List
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op Missing
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op Missing
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.Missing" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.Missing" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.Missing" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation Missing
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op NetworkInterfaces
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op NetworkInterfaces
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.NetworkInterfaces" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.NetworkInterfaces" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.NetworkInterfaces" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation NetworkInterfaces
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op Nodes
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op Nodes
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.Nodes" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.Nodes" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.Nodes" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation Nodes
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op NtpServers
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op NtpServers
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.NtpServers" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.NtpServers" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.NtpServers" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation NtpServers
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op OperationJobProgress
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op OperationJobProgress
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.OperationJobProgress" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.OperationJobProgress" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.OperationJobProgress" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation OperationJobProgress
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op Proxy
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op Proxy
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.Proxy" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.Proxy" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.Proxy" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation Proxy
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op RadarClusterList
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op RadarClusterList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.RadarClusterList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.RadarClusterList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.RadarClusterList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation RadarClusterList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op RegistrationProductInfo
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op RegistrationProductInfo
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.RegistrationProductInfo" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.RegistrationProductInfo" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.RegistrationProductInfo" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation RegistrationProductInfo
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op ReplicationTargets
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op ReplicationTargets
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.ReplicationTargets" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.ReplicationTargets" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.ReplicationTargets" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation ReplicationTargets
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op Routes
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op Routes
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.Routes" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.Routes" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.Routes" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation Routes
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op TotpAckStatus
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op TotpAckStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.TotpAckStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.TotpAckStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.TotpAckStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation TotpAckStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op TypeList
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op TypeList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.TypeList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.TypeList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.TypeList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation TypeList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op ValidateClusterLicenseCapacity
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op ValidateClusterLicenseCapacity
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.ValidateClusterLicenseCapacity" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.ValidateClusterLicenseCapacity" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.ValidateClusterLicenseCapacity" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation ValidateClusterLicenseCapacity
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op Vlans
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op Vlans
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.Vlans" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.Vlans" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.Vlans" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation Vlans
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op WebCertsAndIpmis
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op WebCertsAndIpmis
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.WebCertsAndIpmis" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.WebCertsAndIpmis" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.WebCertsAndIpmis" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation WebCertsAndIpmis
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op Windows
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op Windows
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.Windows" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.Windows" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.Windows" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation Windows
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryCluster -Op WithUpgradesInfo
# -------------------------------------------------------------------

$query = New-RscQueryCluster -Op WithUpgradesInfo
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCluster.WithUpgradesInfo" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCluster.WithUpgradesInfo" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCluster.WithUpgradesInfo" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCluster -Operation WithUpgradesInfo
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryCrossAccount -Op CrossAccountClusters
# -------------------------------------------------------------------

$query = New-RscQueryCrossAccount -Op CrossAccountClusters
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryCrossAccount.CrossAccountClusters" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryCrossAccount.CrossAccountClusters" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryCrossAccount.CrossAccountClusters" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryCrossAccount -Operation CrossAccountClusters
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryDb2 -Op Database
# -------------------------------------------------------------------

$query = New-RscQueryDb2 -Op Database
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryDb2.Database" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryDb2.Database" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryDb2.Database" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryDb2 -Operation Database
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryDb2 -Op DatabaseJobStatus
# -------------------------------------------------------------------

$query = New-RscQueryDb2 -Op DatabaseJobStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryDb2.DatabaseJobStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryDb2.DatabaseJobStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryDb2.DatabaseJobStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryDb2 -Operation DatabaseJobStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryDb2 -Op Databases
# -------------------------------------------------------------------

$query = New-RscQueryDb2 -Op Databases
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryDb2.Databases" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryDb2.Databases" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryDb2.Databases" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryDb2 -Operation Databases
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryDb2 -Op Instance
# -------------------------------------------------------------------

$query = New-RscQueryDb2 -Op Instance
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryDb2.Instance" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryDb2.Instance" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryDb2.Instance" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryDb2 -Operation Instance
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryDb2 -Op Instances
# -------------------------------------------------------------------

$query = New-RscQueryDb2 -Op Instances
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryDb2.Instances" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryDb2.Instances" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryDb2.Instances" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryDb2 -Operation Instances
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryDb2 -Op LogSnapshot
# -------------------------------------------------------------------

$query = New-RscQueryDb2 -Op LogSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryDb2.LogSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryDb2.LogSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryDb2.LogSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryDb2 -Operation LogSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryDb2 -Op LogSnapshots
# -------------------------------------------------------------------

$query = New-RscQueryDb2 -Op LogSnapshots
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryDb2.LogSnapshots" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryDb2.LogSnapshots" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryDb2.LogSnapshots" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryDb2 -Operation LogSnapshots
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryDb2 -Op RecoverableRange
# -------------------------------------------------------------------

$query = New-RscQueryDb2 -Op RecoverableRange
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryDb2.RecoverableRange" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryDb2.RecoverableRange" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryDb2.RecoverableRange" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryDb2 -Operation RecoverableRange
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryDb2 -Op RecoverableRanges
# -------------------------------------------------------------------

$query = New-RscQueryDb2 -Op RecoverableRanges
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryDb2.RecoverableRanges" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryDb2.RecoverableRanges" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryDb2.RecoverableRanges" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryDb2 -Operation RecoverableRanges
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryDownload -Op CdmUpgradesPdf
# -------------------------------------------------------------------

$query = New-RscQueryDownload -Op CdmUpgradesPdf
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryDownload.CdmUpgradesPdf" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryDownload.CdmUpgradesPdf" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryDownload.CdmUpgradesPdf" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryDownload -Operation CdmUpgradesPdf
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryDownload -Op DownloadedVersionList
# -------------------------------------------------------------------

$query = New-RscQueryDownload -Op DownloadedVersionList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryDownload.DownloadedVersionList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryDownload.DownloadedVersionList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryDownload.DownloadedVersionList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryDownload -Operation DownloadedVersionList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryDownload -Op PackageStatus
# -------------------------------------------------------------------

$query = New-RscQueryDownload -Op PackageStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryDownload.PackageStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryDownload.PackageStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryDownload.PackageStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryDownload -Operation PackageStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryExchange -Op Dag
# -------------------------------------------------------------------

$query = New-RscQueryExchange -Op Dag
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryExchange.Dag" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryExchange.Dag" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryExchange.Dag" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryExchange -Operation Dag
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryExchange -Op Dags
# -------------------------------------------------------------------

$query = New-RscQueryExchange -Op Dags
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryExchange.Dags" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryExchange.Dags" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryExchange.Dags" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryExchange -Operation Dags
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryExchange -Op Database
# -------------------------------------------------------------------

$query = New-RscQueryExchange -Op Database
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryExchange.Database" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryExchange.Database" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryExchange.Database" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryExchange -Operation Database
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryExchange -Op Databases
# -------------------------------------------------------------------

$query = New-RscQueryExchange -Op Databases
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryExchange.Databases" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryExchange.Databases" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryExchange.Databases" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryExchange -Operation Databases
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryExchange -Op LiveMounts
# -------------------------------------------------------------------

$query = New-RscQueryExchange -Op LiveMounts
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryExchange.LiveMounts" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryExchange.LiveMounts" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryExchange.LiveMounts" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryExchange -Operation LiveMounts
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryExchange -Op Server
# -------------------------------------------------------------------

$query = New-RscQueryExchange -Op Server
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryExchange.Server" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryExchange.Server" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryExchange.Server" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryExchange -Operation Server
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryExchange -Op Servers
# -------------------------------------------------------------------

$query = New-RscQueryExchange -Op Servers
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryExchange.Servers" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryExchange.Servers" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryExchange.Servers" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryExchange -Operation Servers
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryFailoverCluster -Op App
# -------------------------------------------------------------------

$query = New-RscQueryFailoverCluster -Op App
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryFailoverCluster.App" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryFailoverCluster.App" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryFailoverCluster.App" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryFailoverCluster -Operation App
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryFailoverCluster -Op Apps
# -------------------------------------------------------------------

$query = New-RscQueryFailoverCluster -Op Apps
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryFailoverCluster.Apps" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryFailoverCluster.Apps" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryFailoverCluster.Apps" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryFailoverCluster -Operation Apps
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryFailoverCluster -Op Host
# -------------------------------------------------------------------

$query = New-RscQueryFailoverCluster -Op Host
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryFailoverCluster.Host" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryFailoverCluster.Host" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryFailoverCluster.Host" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryFailoverCluster -Operation Host
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryFailoverCluster -Op Hosts
# -------------------------------------------------------------------

$query = New-RscQueryFailoverCluster -Op Hosts
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryFailoverCluster.Hosts" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryFailoverCluster.Hosts" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryFailoverCluster.Hosts" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryFailoverCluster -Operation Hosts
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryFailoverCluster -Op TopLevelDescendants
# -------------------------------------------------------------------

$query = New-RscQueryFailoverCluster -Op TopLevelDescendants
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryFailoverCluster.TopLevelDescendants" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryFailoverCluster.TopLevelDescendants" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryFailoverCluster.TopLevelDescendants" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryFailoverCluster -Operation TopLevelDescendants
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryFileset -Op Linux
# -------------------------------------------------------------------

$query = New-RscQueryFileset -Op Linux
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryFileset.Linux" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryFileset.Linux" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryFileset.Linux" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryFileset -Operation Linux
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryFileset -Op RequestStatus
# -------------------------------------------------------------------

$query = New-RscQueryFileset -Op RequestStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryFileset.RequestStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryFileset.RequestStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryFileset.RequestStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryFileset -Operation RequestStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryFileset -Op Share
# -------------------------------------------------------------------

$query = New-RscQueryFileset -Op Share
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryFileset.Share" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryFileset.Share" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryFileset.Share" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryFileset -Operation Share
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryFileset -Op Template
# -------------------------------------------------------------------

$query = New-RscQueryFileset -Op Template
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryFileset.Template" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryFileset.Template" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryFileset.Template" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryFileset -Operation Template
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryFileset -Op Templates
# -------------------------------------------------------------------

$query = New-RscQueryFileset -Op Templates
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryFileset.Templates" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryFileset.Templates" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryFileset.Templates" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryFileset -Operation Templates
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryFileset -Op Windows
# -------------------------------------------------------------------

$query = New-RscQueryFileset -Op Windows
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryFileset.Windows" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryFileset.Windows" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryFileset.Windows" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryFileset -Operation Windows
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryGcp -Op CloudAccountMissingPermissionsForAddition
# -------------------------------------------------------------------

$query = New-RscQueryGcp -Op CloudAccountMissingPermissionsForAddition
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryGcp.CloudAccountMissingPermissionsForAddition" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryGcp.CloudAccountMissingPermissionsForAddition" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryGcp.CloudAccountMissingPermissionsForAddition" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryGcp -Operation CloudAccountMissingPermissionsForAddition
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryGcp -Op CloudAccountProjectsByFeature
# -------------------------------------------------------------------

$query = New-RscQueryGcp -Op CloudAccountProjectsByFeature
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryGcp.CloudAccountProjectsByFeature" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryGcp.CloudAccountProjectsByFeature" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryGcp.CloudAccountProjectsByFeature" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryGcp -Operation CloudAccountProjectsByFeature
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryGcp -Op CloudAccountProjectsForOauth
# -------------------------------------------------------------------

$query = New-RscQueryGcp -Op CloudAccountProjectsForOauth
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryGcp.CloudAccountProjectsForOauth" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryGcp.CloudAccountProjectsForOauth" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryGcp.CloudAccountProjectsForOauth" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryGcp -Operation CloudAccountProjectsForOauth
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryGcp -Op FeaturePermissionsForCloudAccount
# -------------------------------------------------------------------

$query = New-RscQueryGcp -Op FeaturePermissionsForCloudAccount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryGcp.FeaturePermissionsForCloudAccount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryGcp.FeaturePermissionsForCloudAccount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryGcp.FeaturePermissionsForCloudAccount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryGcp -Operation FeaturePermissionsForCloudAccount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryGcp -Op GetDefaultCredentialsServiceAccount
# -------------------------------------------------------------------

$query = New-RscQueryGcp -Op GetDefaultCredentialsServiceAccount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryGcp.GetDefaultCredentialsServiceAccount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryGcp.GetDefaultCredentialsServiceAccount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryGcp.GetDefaultCredentialsServiceAccount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryGcp -Operation GetDefaultCredentialsServiceAccount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryGcp -Op NativeAvailableKmsCryptoKeys
# -------------------------------------------------------------------

$query = New-RscQueryGcp -Op NativeAvailableKmsCryptoKeys
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryGcp.NativeAvailableKmsCryptoKeys" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryGcp.NativeAvailableKmsCryptoKeys" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryGcp.NativeAvailableKmsCryptoKeys" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryGcp -Operation NativeAvailableKmsCryptoKeys
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryGcp -Op NativeCompatibleMachineTypes
# -------------------------------------------------------------------

$query = New-RscQueryGcp -Op NativeCompatibleMachineTypes
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryGcp.NativeCompatibleMachineTypes" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryGcp.NativeCompatibleMachineTypes" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryGcp.NativeCompatibleMachineTypes" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryGcp -Operation NativeCompatibleMachineTypes
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryGcp -Op NativeNetworks
# -------------------------------------------------------------------

$query = New-RscQueryGcp -Op NativeNetworks
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryGcp.NativeNetworks" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryGcp.NativeNetworks" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryGcp.NativeNetworks" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryGcp -Operation NativeNetworks
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryGcp -Op NativeProjectsWithAccessibleNetworks
# -------------------------------------------------------------------

$query = New-RscQueryGcp -Op NativeProjectsWithAccessibleNetworks
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryGcp.NativeProjectsWithAccessibleNetworks" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryGcp.NativeProjectsWithAccessibleNetworks" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryGcp.NativeProjectsWithAccessibleNetworks" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryGcp -Operation NativeProjectsWithAccessibleNetworks
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryGcp -Op NativeRegions
# -------------------------------------------------------------------

$query = New-RscQueryGcp -Op NativeRegions
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryGcp.NativeRegions" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryGcp.NativeRegions" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryGcp.NativeRegions" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryGcp -Operation NativeRegions
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryGcp -Op NativeStoredMachineTypes
# -------------------------------------------------------------------

$query = New-RscQueryGcp -Op NativeStoredMachineTypes
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryGcp.NativeStoredMachineTypes" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryGcp.NativeStoredMachineTypes" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryGcp.NativeStoredMachineTypes" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryGcp -Operation NativeStoredMachineTypes
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryGcp -Op NativeStoredMachineTypesInProject
# -------------------------------------------------------------------

$query = New-RscQueryGcp -Op NativeStoredMachineTypesInProject
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryGcp.NativeStoredMachineTypesInProject" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryGcp.NativeStoredMachineTypesInProject" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryGcp.NativeStoredMachineTypesInProject" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryGcp -Operation NativeStoredMachineTypesInProject
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryGcp -Op NativeStoredNetworkNames
# -------------------------------------------------------------------

$query = New-RscQueryGcp -Op NativeStoredNetworkNames
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryGcp.NativeStoredNetworkNames" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryGcp.NativeStoredNetworkNames" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryGcp.NativeStoredNetworkNames" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryGcp -Operation NativeStoredNetworkNames
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryGcp -Op NativeStoredNetworkNamesInProject
# -------------------------------------------------------------------

$query = New-RscQueryGcp -Op NativeStoredNetworkNamesInProject
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryGcp.NativeStoredNetworkNamesInProject" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryGcp.NativeStoredNetworkNamesInProject" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryGcp.NativeStoredNetworkNamesInProject" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryGcp -Operation NativeStoredNetworkNamesInProject
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryGcp -Op NativeStoredRegions
# -------------------------------------------------------------------

$query = New-RscQueryGcp -Op NativeStoredRegions
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryGcp.NativeStoredRegions" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryGcp.NativeStoredRegions" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryGcp.NativeStoredRegions" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryGcp -Operation NativeStoredRegions
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryGcp -Op NativeStoredRegionsInProject
# -------------------------------------------------------------------

$query = New-RscQueryGcp -Op NativeStoredRegionsInProject
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryGcp.NativeStoredRegionsInProject" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryGcp.NativeStoredRegionsInProject" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryGcp.NativeStoredRegionsInProject" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryGcp -Operation NativeStoredRegionsInProject
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryGcpNative -Op Disk
# -------------------------------------------------------------------

$query = New-RscQueryGcpNative -Op Disk
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryGcpNative.Disk" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryGcpNative.Disk" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryGcpNative.Disk" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryGcpNative -Operation Disk
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryGcpNative -Op Disks
# -------------------------------------------------------------------

$query = New-RscQueryGcpNative -Op Disks
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryGcpNative.Disks" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryGcpNative.Disks" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryGcpNative.Disks" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryGcpNative -Operation Disks
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryGcpNative -Op GceInstance
# -------------------------------------------------------------------

$query = New-RscQueryGcpNative -Op GceInstance
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryGcpNative.GceInstance" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryGcpNative.GceInstance" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryGcpNative.GceInstance" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryGcpNative -Operation GceInstance
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryGcpNative -Op GceInstances
# -------------------------------------------------------------------

$query = New-RscQueryGcpNative -Op GceInstances
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryGcpNative.GceInstances" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryGcpNative.GceInstances" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryGcpNative.GceInstances" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryGcpNative -Operation GceInstances
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryGcpNative -Op Project
# -------------------------------------------------------------------

$query = New-RscQueryGcpNative -Op Project
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryGcpNative.Project" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryGcpNative.Project" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryGcpNative.Project" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryGcpNative -Operation Project
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryGcpNative -Op Projects
# -------------------------------------------------------------------

$query = New-RscQueryGcpNative -Op Projects
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryGcpNative.Projects" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryGcpNative.Projects" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryGcpNative.Projects" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryGcpNative -Operation Projects
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryGcpNative -Op StoredDiskLocations
# -------------------------------------------------------------------

$query = New-RscQueryGcpNative -Op StoredDiskLocations
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryGcpNative.StoredDiskLocations" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryGcpNative.StoredDiskLocations" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryGcpNative.StoredDiskLocations" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryGcpNative -Operation StoredDiskLocations
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryHost -Op Diagnosis
# -------------------------------------------------------------------

$query = New-RscQueryHost -Op Diagnosis
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryHost.Diagnosis" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryHost.Diagnosis" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryHost.Diagnosis" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryHost -Operation Diagnosis
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryHost -Op PhysicalHost
# -------------------------------------------------------------------

$query = New-RscQueryHost -Op PhysicalHost
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryHost.PhysicalHost" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryHost.PhysicalHost" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryHost.PhysicalHost" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryHost -Operation PhysicalHost
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryHost -Op PhysicalHosts
# -------------------------------------------------------------------

$query = New-RscQueryHost -Op PhysicalHosts
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryHost.PhysicalHosts" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryHost.PhysicalHosts" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryHost.PhysicalHosts" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryHost -Operation PhysicalHosts
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryHost -Op Search
# -------------------------------------------------------------------

$query = New-RscQueryHost -Op Search
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryHost.Search" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryHost.Search" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryHost.Search" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryHost -Operation Search
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryHost -Op Share
# -------------------------------------------------------------------

$query = New-RscQueryHost -Op Share
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryHost.Share" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryHost.Share" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryHost.Share" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryHost -Operation Share
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryHost -Op Shares
# -------------------------------------------------------------------

$query = New-RscQueryHost -Op Shares
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryHost.Shares" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryHost.Shares" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryHost.Shares" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryHost -Operation Shares
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryHyperv -Op Cluster
# -------------------------------------------------------------------

$query = New-RscQueryHyperv -Op Cluster
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryHyperv.Cluster" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryHyperv.Cluster" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryHyperv.Cluster" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryHyperv -Operation Cluster
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryHyperv -Op HostAsyncRequestStatus
# -------------------------------------------------------------------

$query = New-RscQueryHyperv -Op HostAsyncRequestStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryHyperv.HostAsyncRequestStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryHyperv.HostAsyncRequestStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryHyperv.HostAsyncRequestStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryHyperv -Operation HostAsyncRequestStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryHyperv -Op Mounts
# -------------------------------------------------------------------

$query = New-RscQueryHyperv -Op Mounts
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryHyperv.Mounts" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryHyperv.Mounts" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryHyperv.Mounts" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryHyperv -Operation Mounts
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryHyperv -Op Scvmm
# -------------------------------------------------------------------

$query = New-RscQueryHyperv -Op Scvmm
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryHyperv.Scvmm" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryHyperv.Scvmm" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryHyperv.Scvmm" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryHyperv -Operation Scvmm
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryHyperv -Op ScvmmAsyncRequestStatus
# -------------------------------------------------------------------

$query = New-RscQueryHyperv -Op ScvmmAsyncRequestStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryHyperv.ScvmmAsyncRequestStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryHyperv.ScvmmAsyncRequestStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryHyperv.ScvmmAsyncRequestStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryHyperv -Operation ScvmmAsyncRequestStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryHyperv -Op Scvmms
# -------------------------------------------------------------------

$query = New-RscQueryHyperv -Op Scvmms
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryHyperv.Scvmms" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryHyperv.Scvmms" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryHyperv.Scvmms" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryHyperv -Operation Scvmms
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryHyperv -Op Server
# -------------------------------------------------------------------

$query = New-RscQueryHyperv -Op Server
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryHyperv.Server" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryHyperv.Server" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryHyperv.Server" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryHyperv -Operation Server
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryHyperv -Op Servers
# -------------------------------------------------------------------

$query = New-RscQueryHyperv -Op Servers
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryHyperv.Servers" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryHyperv.Servers" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryHyperv.Servers" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryHyperv -Operation Servers
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryHyperv -Op ServersPaginated
# -------------------------------------------------------------------

$query = New-RscQueryHyperv -Op ServersPaginated
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryHyperv.ServersPaginated" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryHyperv.ServersPaginated" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryHyperv.ServersPaginated" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryHyperv -Operation ServersPaginated
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryHyperv -Op TopLevelDescendants
# -------------------------------------------------------------------

$query = New-RscQueryHyperv -Op TopLevelDescendants
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryHyperv.TopLevelDescendants" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryHyperv.TopLevelDescendants" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryHyperv.TopLevelDescendants" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryHyperv -Operation TopLevelDescendants
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryHyperv -Op UniqueServersCount
# -------------------------------------------------------------------

$query = New-RscQueryHyperv -Op UniqueServersCount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryHyperv.UniqueServersCount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryHyperv.UniqueServersCount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryHyperv.UniqueServersCount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryHyperv -Operation UniqueServersCount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryHyperv -Op VirtualMachine
# -------------------------------------------------------------------

$query = New-RscQueryHyperv -Op VirtualMachine
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryHyperv.VirtualMachine" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryHyperv.VirtualMachine" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryHyperv.VirtualMachine" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryHyperv -Operation VirtualMachine
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryHyperv -Op VirtualMachineAsyncRequestStatus
# -------------------------------------------------------------------

$query = New-RscQueryHyperv -Op VirtualMachineAsyncRequestStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryHyperv.VirtualMachineAsyncRequestStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryHyperv.VirtualMachineAsyncRequestStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryHyperv.VirtualMachineAsyncRequestStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryHyperv -Operation VirtualMachineAsyncRequestStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryHyperv -Op VirtualMachineLevelFileInfo
# -------------------------------------------------------------------

$query = New-RscQueryHyperv -Op VirtualMachineLevelFileInfo
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryHyperv.VirtualMachineLevelFileInfo" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryHyperv.VirtualMachineLevelFileInfo" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryHyperv.VirtualMachineLevelFileInfo" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryHyperv -Operation VirtualMachineLevelFileInfo
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryHyperv -Op VirtualMachines
# -------------------------------------------------------------------

$query = New-RscQueryHyperv -Op VirtualMachines
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryHyperv.VirtualMachines" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryHyperv.VirtualMachines" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryHyperv.VirtualMachines" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryHyperv -Operation VirtualMachines
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryHyperv -Op VmDetail
# -------------------------------------------------------------------

$query = New-RscQueryHyperv -Op VmDetail
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryHyperv.VmDetail" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryHyperv.VmDetail" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryHyperv.VmDetail" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryHyperv -Operation VmDetail
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryIntegration -Op Integration
# -------------------------------------------------------------------

$query = New-RscQueryIntegration -Op Integration
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryIntegration.Integration" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryIntegration.Integration" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryIntegration.Integration" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryIntegration -Operation Integration
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryIntegration -Op Integrations
# -------------------------------------------------------------------

$query = New-RscQueryIntegration -Op Integrations
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryIntegration.Integrations" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryIntegration.Integrations" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryIntegration.Integrations" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryIntegration -Operation Integrations
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryK8s -Op AppManifest
# -------------------------------------------------------------------

$query = New-RscQueryK8s -Op AppManifest
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryK8s.AppManifest" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryK8s.AppManifest" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryK8s.AppManifest" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryK8s -Operation AppManifest
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryK8s -Op Cluster
# -------------------------------------------------------------------

$query = New-RscQueryK8s -Op Cluster
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryK8s.Cluster" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryK8s.Cluster" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryK8s.Cluster" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryK8s -Operation Cluster
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryK8s -Op Clusters
# -------------------------------------------------------------------

$query = New-RscQueryK8s -Op Clusters
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryK8s.Clusters" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryK8s.Clusters" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryK8s.Clusters" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryK8s -Operation Clusters
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryK8s -Op Namespace
# -------------------------------------------------------------------

$query = New-RscQueryK8s -Op Namespace
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryK8s.Namespace" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryK8s.Namespace" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryK8s.Namespace" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryK8s -Operation Namespace
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryK8s -Op Namespaces
# -------------------------------------------------------------------

$query = New-RscQueryK8s -Op Namespaces
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryK8s.Namespaces" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryK8s.Namespaces" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryK8s.Namespaces" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryK8s -Operation Namespaces
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryK8s -Op ProtectionSetSnapshots
# -------------------------------------------------------------------

$query = New-RscQueryK8s -Op ProtectionSetSnapshots
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryK8s.ProtectionSetSnapshots" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryK8s.ProtectionSetSnapshots" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryK8s.ProtectionSetSnapshots" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryK8s -Operation ProtectionSetSnapshots
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryK8s -Op ReplicaSnapshotInfos
# -------------------------------------------------------------------

$query = New-RscQueryK8s -Op ReplicaSnapshotInfos
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryK8s.ReplicaSnapshotInfos" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryK8s.ReplicaSnapshotInfos" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryK8s.ReplicaSnapshotInfos" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryK8s -Operation ReplicaSnapshotInfos
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryK8s -Op SnapshotInfo
# -------------------------------------------------------------------

$query = New-RscQueryK8s -Op SnapshotInfo
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryK8s.SnapshotInfo" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryK8s.SnapshotInfo" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryK8s.SnapshotInfo" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryK8s -Operation SnapshotInfo
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryLdap -Op AuthorizedPrincipalList
# -------------------------------------------------------------------

$query = New-RscQueryLdap -Op AuthorizedPrincipalList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryLdap.AuthorizedPrincipalList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryLdap.AuthorizedPrincipalList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryLdap.AuthorizedPrincipalList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryLdap -Operation AuthorizedPrincipalList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryLdap -Op IntegrationList
# -------------------------------------------------------------------

$query = New-RscQueryLdap -Op IntegrationList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryLdap.IntegrationList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryLdap.IntegrationList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryLdap.IntegrationList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryLdap -Operation IntegrationList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryLdap -Op PrincipalList
# -------------------------------------------------------------------

$query = New-RscQueryLdap -Op PrincipalList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryLdap.PrincipalList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryLdap.PrincipalList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryLdap.PrincipalList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryLdap -Operation PrincipalList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryM365 -Op DayToDayModeBackupStats
# -------------------------------------------------------------------

$query = New-RscQueryM365 -Op DayToDayModeBackupStats
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryM365.DayToDayModeBackupStats" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryM365.DayToDayModeBackupStats" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryM365.DayToDayModeBackupStats" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryM365 -Operation DayToDayModeBackupStats
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryM365 -Op DayToDayModeStats
# -------------------------------------------------------------------

$query = New-RscQueryM365 -Op DayToDayModeStats
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryM365.DayToDayModeStats" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryM365.DayToDayModeStats" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryM365.DayToDayModeStats" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryM365 -Operation DayToDayModeStats
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryM365 -Op DirectoryObjectAttributes
# -------------------------------------------------------------------

$query = New-RscQueryM365 -Op DirectoryObjectAttributes
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryM365.DirectoryObjectAttributes" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryM365.DirectoryObjectAttributes" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryM365.DirectoryObjectAttributes" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryM365 -Operation DirectoryObjectAttributes
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryM365 -Op OnboardingModeBackupStats
# -------------------------------------------------------------------

$query = New-RscQueryM365 -Op OnboardingModeBackupStats
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryM365.OnboardingModeBackupStats" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryM365.OnboardingModeBackupStats" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryM365.OnboardingModeBackupStats" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryM365 -Operation OnboardingModeBackupStats
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryM365 -Op OnboardingModeStats
# -------------------------------------------------------------------

$query = New-RscQueryM365 -Op OnboardingModeStats
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryM365.OnboardingModeStats" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryM365.OnboardingModeStats" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryM365.OnboardingModeStats" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryM365 -Operation OnboardingModeStats
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryM365 -Op OrgBackupLocations
# -------------------------------------------------------------------

$query = New-RscQueryM365 -Op OrgBackupLocations
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryM365.OrgBackupLocations" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryM365.OrgBackupLocations" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryM365.OrgBackupLocations" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryM365 -Operation OrgBackupLocations
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryM365 -Op OrgOperationModes
# -------------------------------------------------------------------

$query = New-RscQueryM365 -Op OrgOperationModes
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryM365.OrgOperationModes" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryM365.OrgOperationModes" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryM365.OrgOperationModes" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryM365 -Operation OrgOperationModes
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryM365 -Op Regions
# -------------------------------------------------------------------

$query = New-RscQueryM365 -Op Regions
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryM365.Regions" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryM365.Regions" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryM365.Regions" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryM365 -Operation Regions
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryManagedVolume -Op InventoryStats
# -------------------------------------------------------------------

$query = New-RscQueryManagedVolume -Op InventoryStats
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryManagedVolume.InventoryStats" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryManagedVolume.InventoryStats" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryManagedVolume.InventoryStats" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryManagedVolume -Operation InventoryStats
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryManagedVolume -Op LiveMounts
# -------------------------------------------------------------------

$query = New-RscQueryManagedVolume -Op LiveMounts
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryManagedVolume.LiveMounts" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryManagedVolume.LiveMounts" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryManagedVolume.LiveMounts" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryManagedVolume -Operation LiveMounts
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryManagedVolume -Op ManagedVolume
# -------------------------------------------------------------------

$query = New-RscQueryManagedVolume -Op ManagedVolume
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryManagedVolume.ManagedVolume" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryManagedVolume.ManagedVolume" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryManagedVolume.ManagedVolume" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryManagedVolume -Operation ManagedVolume
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryManagedVolume -Op ManagedVolumes
# -------------------------------------------------------------------

$query = New-RscQueryManagedVolume -Op ManagedVolumes
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryManagedVolume.ManagedVolumes" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryManagedVolume.ManagedVolumes" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryManagedVolume.ManagedVolumes" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryManagedVolume -Operation ManagedVolumes
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryMisc -Op ActiveCustomAnalyzers
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op ActiveCustomAnalyzers
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.ActiveCustomAnalyzers" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.ActiveCustomAnalyzers" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.ActiveCustomAnalyzers" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation ActiveCustomAnalyzers
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op AdGroupMembers
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op AdGroupMembers
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.AdGroupMembers" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.AdGroupMembers" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.AdGroupMembers" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation AdGroupMembers
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op AdVolumeExports
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op AdVolumeExports
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.AdVolumeExports" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.AdVolumeExports" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.AdVolumeExports" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation AdVolumeExports
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op AgentDeploymentSetting
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op AgentDeploymentSetting
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.AgentDeploymentSetting" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.AgentDeploymentSetting" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.AgentDeploymentSetting" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation AgentDeploymentSetting
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op AgentDeploymentSettings
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op AgentDeploymentSettings
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.AgentDeploymentSettings" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.AgentDeploymentSettings" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.AgentDeploymentSettings" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation AgentDeploymentSettings
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op AllowedOrgAdminOperations
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op AllowedOrgAdminOperations
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.AllowedOrgAdminOperations" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.AllowedOrgAdminOperations" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.AllowedOrgAdminOperations" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation AllowedOrgAdminOperations
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op AnalyzerGroups
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op AnalyzerGroups
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.AnalyzerGroups" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.AnalyzerGroups" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.AnalyzerGroups" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation AnalyzerGroups
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op AnalyzerUsages
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op AnalyzerUsages
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.AnalyzerUsages" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.AnalyzerUsages" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.AnalyzerUsages" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation AnalyzerUsages
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op AnomalyResultOpt
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op AnomalyResultOpt
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.AnomalyResultOpt" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.AnomalyResultOpt" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.AnomalyResultOpt" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation AnomalyResultOpt
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op AnomalyResults
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op AnomalyResults
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.AnomalyResults" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.AnomalyResults" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.AnomalyResults" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation AnomalyResults
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op AnomalyResultsGrouped
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op AnomalyResultsGrouped
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.AnomalyResultsGrouped" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.AnomalyResultsGrouped" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.AnomalyResultsGrouped" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation AnomalyResultsGrouped
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op AreMultiGeoBackupsEnabled
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op AreMultiGeoBackupsEnabled
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.AreMultiGeoBackupsEnabled" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.AreMultiGeoBackupsEnabled" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.AreMultiGeoBackupsEnabled" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation AreMultiGeoBackupsEnabled
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op AuthorizationsForGlobalResource
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op AuthorizationsForGlobalResource
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.AuthorizationsForGlobalResource" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.AuthorizationsForGlobalResource" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.AuthorizationsForGlobalResource" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation AuthorizationsForGlobalResource
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op AuthorizationsForObject
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op AuthorizationsForObject
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.AuthorizationsForObject" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.AuthorizationsForObject" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.AuthorizationsForObject" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation AuthorizationsForObject
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op AuthorizationsForObjects
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op AuthorizationsForObjects
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.AuthorizationsForObjects" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.AuthorizationsForObjects" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.AuthorizationsForObjects" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation AuthorizationsForObjects
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op AwsComputeSettings
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op AwsComputeSettings
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.AwsComputeSettings" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.AwsComputeSettings" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.AwsComputeSettings" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation AwsComputeSettings
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op AzureResourceGroups
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op AzureResourceGroups
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.AzureResourceGroups" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.AzureResourceGroups" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.AzureResourceGroups" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation AzureResourceGroups
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op AzureSubnets
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op AzureSubnets
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.AzureSubnets" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.AzureSubnets" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.AzureSubnets" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation AzureSubnets
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op BackupThrottleSettings
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op BackupThrottleSettings
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.BackupThrottleSettings" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.BackupThrottleSettings" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.BackupThrottleSettings" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation BackupThrottleSettings
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op BrowseCalendar
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op BrowseCalendar
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.BrowseCalendar" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.BrowseCalendar" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.BrowseCalendar" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation BrowseCalendar
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op BrowseContacts
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op BrowseContacts
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.BrowseContacts" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.BrowseContacts" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.BrowseContacts" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation BrowseContacts
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op BrowseFolder
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op BrowseFolder
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.BrowseFolder" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.BrowseFolder" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.BrowseFolder" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation BrowseFolder
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op BrowseOnedrive
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op BrowseOnedrive
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.BrowseOnedrive" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.BrowseOnedrive" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.BrowseOnedrive" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation BrowseOnedrive
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op BrowseTeamsChannels
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op BrowseTeamsChannels
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.BrowseTeamsChannels" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.BrowseTeamsChannels" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.BrowseTeamsChannels" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation BrowseTeamsChannels
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op BrowseTeamsDrive
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op BrowseTeamsDrive
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.BrowseTeamsDrive" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.BrowseTeamsDrive" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.BrowseTeamsDrive" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation BrowseTeamsDrive
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op CdmGuestCredentials
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op CdmGuestCredentials
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.CdmGuestCredentials" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.CdmGuestCredentials" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.CdmGuestCredentials" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation CdmGuestCredentials
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op CdmInventorySubHierarchyRoot
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op CdmInventorySubHierarchyRoot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.CdmInventorySubHierarchyRoot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.CdmInventorySubHierarchyRoot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.CdmInventorySubHierarchyRoot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation CdmInventorySubHierarchyRoot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op CdmOvaDetails
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op CdmOvaDetails
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.CdmOvaDetails" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.CdmOvaDetails" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.CdmOvaDetails" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation CdmOvaDetails
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op CdmVersionCheck
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op CdmVersionCheck
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.CdmVersionCheck" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.CdmVersionCheck" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.CdmVersionCheck" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation CdmVersionCheck
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op CdpVmsInfos
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op CdpVmsInfos
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.CdpVmsInfos" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.CdpVmsInfos" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.CdpVmsInfos" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation CdpVmsInfos
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op CheckCloudComputeConnectivityJobProgress
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op CheckCloudComputeConnectivityJobProgress
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.CheckCloudComputeConnectivityJobProgress" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.CheckCloudComputeConnectivityJobProgress" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.CheckCloudComputeConnectivityJobProgress" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation CheckCloudComputeConnectivityJobProgress
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op CheckLatestVersionMgmtAppExists
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op CheckLatestVersionMgmtAppExists
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.CheckLatestVersionMgmtAppExists" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.CheckLatestVersionMgmtAppExists" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.CheckLatestVersionMgmtAppExists" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation CheckLatestVersionMgmtAppExists
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op CloudDirectNasExport
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op CloudDirectNasExport
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.CloudDirectNasExport" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.CloudDirectNasExport" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.CloudDirectNasExport" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation CloudDirectNasExport
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op CloudDirectShares
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op CloudDirectShares
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.CloudDirectShares" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.CloudDirectShares" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.CloudDirectShares" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation CloudDirectShares
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op CloudDirectSites
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op CloudDirectSites
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.CloudDirectSites" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.CloudDirectSites" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.CloudDirectSites" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation CloudDirectSites
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op CloudDirectSystems
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op CloudDirectSystems
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.CloudDirectSystems" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.CloudDirectSystems" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.CloudDirectSystems" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation CloudDirectSystems
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op ConfiguredGroupMembers
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op ConfiguredGroupMembers
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.ConfiguredGroupMembers" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.ConfiguredGroupMembers" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.ConfiguredGroupMembers" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation ConfiguredGroupMembers
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op Crawl
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op Crawl
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.Crawl" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.Crawl" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.Crawl" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation Crawl
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op Crawls
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op Crawls
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.Crawls" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.Crawls" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.Crawls" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation Crawls
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op CrossAccountPairs
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op CrossAccountPairs
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.CrossAccountPairs" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.CrossAccountPairs" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.CrossAccountPairs" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation CrossAccountPairs
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op CurrentIpAddress
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op CurrentIpAddress
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.CurrentIpAddress" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.CurrentIpAddress" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.CurrentIpAddress" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation CurrentIpAddress
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op CurrentOrg
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op CurrentOrg
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.CurrentOrg" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.CurrentOrg" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.CurrentOrg" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation CurrentOrg
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op CurrentOrgAuthDomainConfig
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op CurrentOrgAuthDomainConfig
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.CurrentOrgAuthDomainConfig" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.CurrentOrgAuthDomainConfig" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.CurrentOrgAuthDomainConfig" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation CurrentOrgAuthDomainConfig
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op CurrentOrgIdentityProviders
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op CurrentOrgIdentityProviders
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.CurrentOrgIdentityProviders" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.CurrentOrgIdentityProviders" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.CurrentOrgIdentityProviders" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation CurrentOrgIdentityProviders
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op CustomAnalyzer
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op CustomAnalyzer
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.CustomAnalyzer" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.CustomAnalyzer" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.CustomAnalyzer" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation CustomAnalyzer
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op DashboardSummary
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op DashboardSummary
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.DashboardSummary" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.DashboardSummary" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.DashboardSummary" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation DashboardSummary
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op DatagovSecDesc
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op DatagovSecDesc
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.DatagovSecDesc" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.DatagovSecDesc" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.DatagovSecDesc" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation DatagovSecDesc
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op DecryptExportUrl
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op DecryptExportUrl
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.DecryptExportUrl" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.DecryptExportUrl" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.DecryptExportUrl" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation DecryptExportUrl
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op DeploymentIpAddresses
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op DeploymentIpAddresses
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.DeploymentIpAddresses" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.DeploymentIpAddresses" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.DeploymentIpAddresses" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation DeploymentIpAddresses
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op DeploymentVersion
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op DeploymentVersion
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.DeploymentVersion" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.DeploymentVersion" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.DeploymentVersion" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation DeploymentVersion
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op DhrcActiveRecommendations
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op DhrcActiveRecommendations
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.DhrcActiveRecommendations" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.DhrcActiveRecommendations" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.DhrcActiveRecommendations" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation DhrcActiveRecommendations
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op DhrcLatestMetrics
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op DhrcLatestMetrics
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.DhrcLatestMetrics" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.DhrcLatestMetrics" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.DhrcLatestMetrics" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation DhrcLatestMetrics
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op DhrcScores
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op DhrcScores
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.DhrcScores" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.DhrcScores" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.DhrcScores" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation DhrcScores
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op DiffFmd
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op DiffFmd
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.DiffFmd" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.DiffFmd" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.DiffFmd" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation DiffFmd
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op DiscoverNodes
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op DiscoverNodes
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.DiscoverNodes" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.DiscoverNodes" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.DiscoverNodes" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation DiscoverNodes
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op DiscoveryTimeline
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op DiscoveryTimeline
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.DiscoveryTimeline" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.DiscoveryTimeline" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.DiscoveryTimeline" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation DiscoveryTimeline
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op DistributionListDigest
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op DistributionListDigest
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.DistributionListDigest" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.DistributionListDigest" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.DistributionListDigest" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation DistributionListDigest
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op DistributionListDigests
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op DistributionListDigests
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.DistributionListDigests" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.DistributionListDigests" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.DistributionListDigests" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation DistributionListDigests
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op DummyFieldWithAdminOnlyTag
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op DummyFieldWithAdminOnlyTag
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.DummyFieldWithAdminOnlyTag" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.DummyFieldWithAdminOnlyTag" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.DummyFieldWithAdminOnlyTag" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation DummyFieldWithAdminOnlyTag
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op EdgeWindowsToolLink
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op EdgeWindowsToolLink
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.EdgeWindowsToolLink" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.EdgeWindowsToolLink" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.EdgeWindowsToolLink" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation EdgeWindowsToolLink
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op EffectiveRbacPermissions
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op EffectiveRbacPermissions
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.EffectiveRbacPermissions" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.EffectiveRbacPermissions" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.EffectiveRbacPermissions" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation EffectiveRbacPermissions
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op EventDigests
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op EventDigests
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.EventDigests" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.EventDigests" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.EventDigests" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation EventDigests
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op ExternalDeploymentName
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op ExternalDeploymentName
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.ExternalDeploymentName" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.ExternalDeploymentName" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.ExternalDeploymentName" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation ExternalDeploymentName
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op FailedRestoreItemsInfo
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op FailedRestoreItemsInfo
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.FailedRestoreItemsInfo" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.FailedRestoreItemsInfo" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.FailedRestoreItemsInfo" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation FailedRestoreItemsInfo
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op FederatedLoginStatus
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op FederatedLoginStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.FederatedLoginStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.FederatedLoginStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.FederatedLoginStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation FederatedLoginStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op FileActivities
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op FileActivities
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.FileActivities" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.FileActivities" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.FileActivities" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation FileActivities
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op GeoLocationList
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op GeoLocationList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.GeoLocationList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.GeoLocationList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.GeoLocationList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation GeoLocationList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op GetAllRolesInOrgList
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op GetAllRolesInOrgList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.GetAllRolesInOrgList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.GetAllRolesInOrgList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.GetAllRolesInOrgList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation GetAllRolesInOrgList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op GetCdmReleaseDetailsForVersionFromSupportPortal
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op GetCdmReleaseDetailsForVersionFromSupportPortal
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.GetCdmReleaseDetailsForVersionFromSupportPortal" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.GetCdmReleaseDetailsForVersionFromSupportPortal" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.GetCdmReleaseDetailsForVersionFromSupportPortal" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation GetCdmReleaseDetailsForVersionFromSupportPortal
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op GetCdmReleaseDetailsFromSupportPortal
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op GetCdmReleaseDetailsFromSupportPortal
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.GetCdmReleaseDetailsFromSupportPortal" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.GetCdmReleaseDetailsFromSupportPortal" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.GetCdmReleaseDetailsFromSupportPortal" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation GetCdmReleaseDetailsFromSupportPortal
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op GetGroupCountByPrechecksStatus
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op GetGroupCountByPrechecksStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.GetGroupCountByPrechecksStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.GetGroupCountByPrechecksStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.GetGroupCountByPrechecksStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation GetGroupCountByPrechecksStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op GetGroupCountByUpgradeJobStatus
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op GetGroupCountByUpgradeJobStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.GetGroupCountByUpgradeJobStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.GetGroupCountByUpgradeJobStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.GetGroupCountByUpgradeJobStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation GetGroupCountByUpgradeJobStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op GetGroupCountByVersionStatus
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op GetGroupCountByVersionStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.GetGroupCountByVersionStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.GetGroupCountByVersionStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.GetGroupCountByVersionStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation GetGroupCountByVersionStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op GetKorgTaskchainStatus
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op GetKorgTaskchainStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.GetKorgTaskchainStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.GetKorgTaskchainStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.GetKorgTaskchainStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation GetKorgTaskchainStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op GetRolesByIds
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op GetRolesByIds
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.GetRolesByIds" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.GetRolesByIds" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.GetRolesByIds" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation GetRolesByIds
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op GetUserDownloads
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op GetUserDownloads
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.GetUserDownloads" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.GetUserDownloads" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.GetUserDownloads" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation GetUserDownloads
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op GlobalFileSearch
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op GlobalFileSearch
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.GlobalFileSearch" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.GlobalFileSearch" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.GlobalFileSearch" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation GlobalFileSearch
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op GlobalLockoutConfig
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op GlobalLockoutConfig
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.GlobalLockoutConfig" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.GlobalLockoutConfig" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.GlobalLockoutConfig" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation GlobalLockoutConfig
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op GlobalMfaSetting
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op GlobalMfaSetting
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.GlobalMfaSetting" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.GlobalMfaSetting" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.GlobalMfaSetting" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation GlobalMfaSetting
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op GlobalSearchResults
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op GlobalSearchResults
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.GlobalSearchResults" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.GlobalSearchResults" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.GlobalSearchResults" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation GlobalSearchResults
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op GroupsInCurrentAndDescendantOrganization
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op GroupsInCurrentAndDescendantOrganization
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.GroupsInCurrentAndDescendantOrganization" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.GroupsInCurrentAndDescendantOrganization" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.GroupsInCurrentAndDescendantOrganization" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation GroupsInCurrentAndDescendantOrganization
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op GuestCredentials
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op GuestCredentials
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.GuestCredentials" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.GuestCredentials" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.GuestCredentials" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation GuestCredentials
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op GuestCredentialsV2
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op GuestCredentialsV2
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.GuestCredentialsV2" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.GuestCredentialsV2" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.GuestCredentialsV2" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation GuestCredentialsV2
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op HasIdpConfigured
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op HasIdpConfigured
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.HasIdpConfigured" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.HasIdpConfigured" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.HasIdpConfigured" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation HasIdpConfigured
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op HelpContentSnippets
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op HelpContentSnippets
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.HelpContentSnippets" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.HelpContentSnippets" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.HelpContentSnippets" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation HelpContentSnippets
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op HierarchyObject
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op HierarchyObject
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.HierarchyObject" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.HierarchyObject" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.HierarchyObject" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation HierarchyObject
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op HierarchyObjects
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op HierarchyObjects
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.HierarchyObjects" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.HierarchyObjects" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.HierarchyObjects" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation HierarchyObjects
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op InstalledVersionList
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op InstalledVersionList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.InstalledVersionList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.InstalledVersionList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.InstalledVersionList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation InstalledVersionList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op InventoryRoot
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op InventoryRoot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.InventoryRoot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.InventoryRoot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.InventoryRoot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation InventoryRoot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op InventorySubHierarchyRoot
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op InventorySubHierarchyRoot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.InventorySubHierarchyRoot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.InventorySubHierarchyRoot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.InventorySubHierarchyRoot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation InventorySubHierarchyRoot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op InventoryWorkloads
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op InventoryWorkloads
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.InventoryWorkloads" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.InventoryWorkloads" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.InventoryWorkloads" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation InventoryWorkloads
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op InvestigationCsvDownloadLink
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op InvestigationCsvDownloadLink
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.InvestigationCsvDownloadLink" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.InvestigationCsvDownloadLink" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.InvestigationCsvDownloadLink" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation InvestigationCsvDownloadLink
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op IpWhitelist
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op IpWhitelist
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.IpWhitelist" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.IpWhitelist" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.IpWhitelist" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation IpWhitelist
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op IsIpmiEnabled
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op IsIpmiEnabled
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.IsIpmiEnabled" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.IsIpmiEnabled" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.IsIpmiEnabled" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation IsIpmiEnabled
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op IsLoggedIntoRubrikSupportPortal
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op IsLoggedIntoRubrikSupportPortal
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.IsLoggedIntoRubrikSupportPortal" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.IsLoggedIntoRubrikSupportPortal" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.IsLoggedIntoRubrikSupportPortal" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation IsLoggedIntoRubrikSupportPortal
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op IsReplaceNodeTprConfigured
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op IsReplaceNodeTprConfigured
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.IsReplaceNodeTprConfigured" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.IsReplaceNodeTprConfigured" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.IsReplaceNodeTprConfigured" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation IsReplaceNodeTprConfigured
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op IsSfdcReachable
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op IsSfdcReachable
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.IsSfdcReachable" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.IsSfdcReachable" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.IsSfdcReachable" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation IsSfdcReachable
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op IsUpgradeAvailable
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op IsUpgradeAvailable
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.IsUpgradeAvailable" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.IsUpgradeAvailable" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.IsUpgradeAvailable" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation IsUpgradeAvailable
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op IsUpgradeRecommended
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op IsUpgradeRecommended
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.IsUpgradeRecommended" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.IsUpgradeRecommended" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.IsUpgradeRecommended" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation IsUpgradeRecommended
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op IsZrsAvailableForLocation
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op IsZrsAvailableForLocation
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.IsZrsAvailableForLocation" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.IsZrsAvailableForLocation" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.IsZrsAvailableForLocation" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation IsZrsAvailableForLocation
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op Issue
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op Issue
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.Issue" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.Issue" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.Issue" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation Issue
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op Issues
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op Issues
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.Issues" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.Issues" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.Issues" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation Issues
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op IssuesJobIds
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op IssuesJobIds
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.IssuesJobIds" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.IssuesJobIds" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.IssuesJobIds" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation IssuesJobIds
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op JobInfo
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op JobInfo
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.JobInfo" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.JobInfo" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.JobInfo" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation JobInfo
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op KnowledgeBaseArticle
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op KnowledgeBaseArticle
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.KnowledgeBaseArticle" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.KnowledgeBaseArticle" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.KnowledgeBaseArticle" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation KnowledgeBaseArticle
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op KubernetesProtectionSet
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op KubernetesProtectionSet
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.KubernetesProtectionSet" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.KubernetesProtectionSet" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.KubernetesProtectionSet" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation KubernetesProtectionSet
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op KubernetesProtectionSets
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op KubernetesProtectionSets
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.KubernetesProtectionSets" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.KubernetesProtectionSets" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.KubernetesProtectionSets" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation KubernetesProtectionSets
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op LambdaSettings
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op LambdaSettings
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.LambdaSettings" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.LambdaSettings" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.LambdaSettings" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation LambdaSettings
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op LicensedProducts
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op LicensedProducts
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.LicensedProducts" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.LicensedProducts" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.LicensedProducts" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation LicensedProducts
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op LockoutConfig
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op LockoutConfig
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.LockoutConfig" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.LockoutConfig" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.LockoutConfig" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation LockoutConfig
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op MaxProtectedAppsCount
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op MaxProtectedAppsCount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.MaxProtectedAppsCount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.MaxProtectedAppsCount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.MaxProtectedAppsCount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation MaxProtectedAppsCount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op MfaSetting
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op MfaSetting
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.MfaSetting" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.MfaSetting" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.MfaSetting" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation MfaSetting
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op MinimumCdmVersionForFeatureSet
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op MinimumCdmVersionForFeatureSet
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.MinimumCdmVersionForFeatureSet" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.MinimumCdmVersionForFeatureSet" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.MinimumCdmVersionForFeatureSet" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation MinimumCdmVersionForFeatureSet
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op NetworkThrottle
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op NetworkThrottle
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.NetworkThrottle" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.NetworkThrottle" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.NetworkThrottle" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation NetworkThrottle
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op NfAnomalyResults
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op NfAnomalyResults
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.NfAnomalyResults" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.NfAnomalyResults" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.NfAnomalyResults" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation NfAnomalyResults
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op NfAnomalyResultsGrouped
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op NfAnomalyResultsGrouped
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.NfAnomalyResultsGrouped" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.NfAnomalyResultsGrouped" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.NfAnomalyResultsGrouped" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation NfAnomalyResultsGrouped
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op NodeRemovalCancelPermission
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op NodeRemovalCancelPermission
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.NodeRemovalCancelPermission" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.NodeRemovalCancelPermission" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.NodeRemovalCancelPermission" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation NodeRemovalCancelPermission
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op NodeToReplace
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op NodeToReplace
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.NodeToReplace" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.NodeToReplace" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.NodeToReplace" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation NodeToReplace
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op NodeTunnelStatuses
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op NodeTunnelStatuses
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.NodeTunnelStatuses" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.NodeTunnelStatuses" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.NodeTunnelStatuses" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation NodeTunnelStatuses
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op NosqlStorageLocations
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op NosqlStorageLocations
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.NosqlStorageLocations" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.NosqlStorageLocations" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.NosqlStorageLocations" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation NosqlStorageLocations
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op OauthCodesForEdgeReg
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op OauthCodesForEdgeReg
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.OauthCodesForEdgeReg" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.OauthCodesForEdgeReg" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.OauthCodesForEdgeReg" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation OauthCodesForEdgeReg
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op ObjectFiles
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op ObjectFiles
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.ObjectFiles" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.ObjectFiles" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.ObjectFiles" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation ObjectFiles
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op ObjectTypeAccessSummary
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op ObjectTypeAccessSummary
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.ObjectTypeAccessSummary" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.ObjectTypeAccessSummary" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.ObjectTypeAccessSummary" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation ObjectTypeAccessSummary
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op ObjectsAlreadyAssignedToOrgs
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op ObjectsAlreadyAssignedToOrgs
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.ObjectsAlreadyAssignedToOrgs" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.ObjectsAlreadyAssignedToOrgs" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.ObjectsAlreadyAssignedToOrgs" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation ObjectsAlreadyAssignedToOrgs
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op Org
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op Org
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.Org" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.Org" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.Org" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation Org
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op Orgs
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op Orgs
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.Orgs" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.Orgs" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.Orgs" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation Orgs
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op OrgsByIds
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op OrgsByIds
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.OrgsByIds" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.OrgsByIds" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.OrgsByIds" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation OrgsByIds
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op OrgsForPrincipal
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op OrgsForPrincipal
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.OrgsForPrincipal" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.OrgsForPrincipal" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.OrgsForPrincipal" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation OrgsForPrincipal
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op PasskeyConfig
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op PasskeyConfig
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.PasskeyConfig" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.PasskeyConfig" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.PasskeyConfig" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation PasskeyConfig
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op PasskeyInfo
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op PasskeyInfo
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.PasskeyInfo" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.PasskeyInfo" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.PasskeyInfo" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation PasskeyInfo
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op PendingAction
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op PendingAction
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.PendingAction" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.PendingAction" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.PendingAction" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation PendingAction
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op PendingActions
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op PendingActions
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.PendingActions" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.PendingActions" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.PendingActions" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation PendingActions
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op PhoenixRolloutProgress
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op PhoenixRolloutProgress
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.PhoenixRolloutProgress" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.PhoenixRolloutProgress" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.PhoenixRolloutProgress" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation PhoenixRolloutProgress
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op PipelineHealthForTimeRange
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op PipelineHealthForTimeRange
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.PipelineHealthForTimeRange" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.PipelineHealthForTimeRange" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.PipelineHealthForTimeRange" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation PipelineHealthForTimeRange
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op PolarisInventorySubHierarchyRoot
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op PolarisInventorySubHierarchyRoot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.PolarisInventorySubHierarchyRoot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.PolarisInventorySubHierarchyRoot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.PolarisInventorySubHierarchyRoot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation PolarisInventorySubHierarchyRoot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op PolicyDetails
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op PolicyDetails
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.PolicyDetails" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.PolicyDetails" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.PolicyDetails" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation PolicyDetails
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op PolicyObj
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op PolicyObj
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.PolicyObj" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.PolicyObj" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.PolicyObj" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation PolicyObj
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op PolicyObjs
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op PolicyObjs
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.PolicyObjs" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.PolicyObjs" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.PolicyObjs" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation PolicyObjs
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op PrechecksStatus
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op PrechecksStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.PrechecksStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.PrechecksStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.PrechecksStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation PrechecksStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op PrechecksStatusWithNextJobInfo
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op PrechecksStatusWithNextJobInfo
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.PrechecksStatusWithNextJobInfo" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.PrechecksStatusWithNextJobInfo" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.PrechecksStatusWithNextJobInfo" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation PrechecksStatusWithNextJobInfo
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op PrivateContainerRegistry
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op PrivateContainerRegistry
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.PrivateContainerRegistry" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.PrivateContainerRegistry" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.PrivateContainerRegistry" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation PrivateContainerRegistry
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op ProductDocumentation
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op ProductDocumentation
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.ProductDocumentation" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.ProductDocumentation" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.ProductDocumentation" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation ProductDocumentation
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op ProtectedObjectsList
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op ProtectedObjectsList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.ProtectedObjectsList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.ProtectedObjectsList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.ProtectedObjectsList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation ProtectedObjectsList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op ProtectedVolumesCount
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op ProtectedVolumesCount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.ProtectedVolumesCount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.ProtectedVolumesCount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.ProtectedVolumesCount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation ProtectedVolumesCount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op QuarantinedDetailsForWorkload
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op QuarantinedDetailsForWorkload
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.QuarantinedDetailsForWorkload" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.QuarantinedDetailsForWorkload" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.QuarantinedDetailsForWorkload" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation QuarantinedDetailsForWorkload
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op QueryDatastoreFreespaceThresholds
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op QueryDatastoreFreespaceThresholds
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.QueryDatastoreFreespaceThresholds" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.QueryDatastoreFreespaceThresholds" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.QueryDatastoreFreespaceThresholds" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation QueryDatastoreFreespaceThresholds
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op RemovedNodeDetails
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op RemovedNodeDetails
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.RemovedNodeDetails" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.RemovedNodeDetails" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.RemovedNodeDetails" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation RemovedNodeDetails
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op RoleTemplates
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op RoleTemplates
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.RoleTemplates" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.RoleTemplates" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.RoleTemplates" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation RoleTemplates
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op SearchFileByPrefix
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op SearchFileByPrefix
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.SearchFileByPrefix" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.SearchFileByPrefix" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.SearchFileByPrefix" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation SearchFileByPrefix
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op SnoozedDirectories
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op SnoozedDirectories
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.SnoozedDirectories" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.SnoozedDirectories" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.SnoozedDirectories" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation SnoozedDirectories
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op SupportBundle
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op SupportBundle
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.SupportBundle" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.SupportBundle" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.SupportBundle" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation SupportBundle
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op SupportUserAccesses
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op SupportUserAccesses
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.SupportUserAccesses" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.SupportUserAccesses" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.SupportUserAccesses" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation SupportUserAccesses
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op TableFilters
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op TableFilters
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.TableFilters" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.TableFilters" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.TableFilters" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation TableFilters
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op Targets
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op Targets
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.Targets" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.Targets" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.Targets" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation Targets
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op TaskDetailGroupByList
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op TaskDetailGroupByList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.TaskDetailGroupByList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.TaskDetailGroupByList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.TaskDetailGroupByList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation TaskDetailGroupByList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op TaskDetailList
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op TaskDetailList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.TaskDetailList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.TaskDetailList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.TaskDetailList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation TaskDetailList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op Taskchain
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op Taskchain
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.Taskchain" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.Taskchain" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.Taskchain" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation Taskchain
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op TeamChannelNameAvailable
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op TeamChannelNameAvailable
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.TeamChannelNameAvailable" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.TeamChannelNameAvailable" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.TeamChannelNameAvailable" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation TeamChannelNameAvailable
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op TotpConfigStatus
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op TotpConfigStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.TotpConfigStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.TotpConfigStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.TotpConfigStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation TotpConfigStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op TprStatusForNodeRemoval
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op TprStatusForNodeRemoval
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.TprStatusForNodeRemoval" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.TprStatusForNodeRemoval" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.TprStatusForNodeRemoval" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation TprStatusForNodeRemoval
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op TunnelStatus
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op TunnelStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.TunnelStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.TunnelStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.TunnelStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation TunnelStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op UniqueVcdCount
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op UniqueVcdCount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.UniqueVcdCount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.UniqueVcdCount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.UniqueVcdCount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation UniqueVcdCount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op UnmanagedObjects
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op UnmanagedObjects
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.UnmanagedObjects" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.UnmanagedObjects" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.UnmanagedObjects" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation UnmanagedObjects
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op UnmanagedObjectsSupportedTypes
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op UnmanagedObjectsSupportedTypes
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.UnmanagedObjectsSupportedTypes" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.UnmanagedObjectsSupportedTypes" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.UnmanagedObjectsSupportedTypes" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation UnmanagedObjectsSupportedTypes
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op UpgradeStatus
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op UpgradeStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.UpgradeStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.UpgradeStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.UpgradeStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation UpgradeStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op UserActivities
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op UserActivities
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.UserActivities" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.UserActivities" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.UserActivities" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation UserActivities
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op UserAnalyzerAccess
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op UserAnalyzerAccess
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.UserAnalyzerAccess" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.UserAnalyzerAccess" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.UserAnalyzerAccess" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation UserAnalyzerAccess
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op UserAuditList
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op UserAuditList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.UserAuditList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.UserAuditList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.UserAuditList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation UserAuditList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op UserDetail
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op UserDetail
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.UserDetail" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.UserDetail" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.UserDetail" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation UserDetail
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op UserFiles
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op UserFiles
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.UserFiles" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.UserFiles" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.UserFiles" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation UserFiles
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op UserGroups
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op UserGroups
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.UserGroups" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.UserGroups" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.UserGroups" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation UserGroups
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op UserNotifications
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op UserNotifications
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.UserNotifications" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.UserNotifications" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.UserNotifications" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation UserNotifications
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op UserSessionManagementConfig
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op UserSessionManagementConfig
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.UserSessionManagementConfig" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.UserSessionManagementConfig" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.UserSessionManagementConfig" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation UserSessionManagementConfig
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op UserSettings
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op UserSettings
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.UserSettings" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.UserSettings" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.UserSettings" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation UserSettings
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op UsersInCurrentAndDescendantOrganization
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op UsersInCurrentAndDescendantOrganization
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.UsersInCurrentAndDescendantOrganization" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.UsersInCurrentAndDescendantOrganization" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.UsersInCurrentAndDescendantOrganization" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation UsersInCurrentAndDescendantOrganization
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op UsersOnAccountList
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op UsersOnAccountList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.UsersOnAccountList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.UsersOnAccountList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.UsersOnAccountList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation UsersOnAccountList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op ValidateOrgName
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op ValidateOrgName
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.ValidateOrgName" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.ValidateOrgName" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.ValidateOrgName" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation ValidateOrgName
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op VcdVappVms
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op VcdVappVms
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.VcdVappVms" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.VcdVappVms" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.VcdVappVms" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation VcdVappVms
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op VirtualMachineFiles
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op VirtualMachineFiles
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.VirtualMachineFiles" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.VirtualMachineFiles" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.VirtualMachineFiles" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation VirtualMachineFiles
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op VmRecoveryJobsInfo
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op VmRecoveryJobsInfo
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.VmRecoveryJobsInfo" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.VmRecoveryJobsInfo" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.VmRecoveryJobsInfo" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation VmRecoveryJobsInfo
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op VolumeGroupMounts
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op VolumeGroupMounts
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.VolumeGroupMounts" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.VolumeGroupMounts" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.VolumeGroupMounts" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation VolumeGroupMounts
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op WorkloadAlertSetting
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op WorkloadAlertSetting
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.WorkloadAlertSetting" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.WorkloadAlertSetting" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.WorkloadAlertSetting" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation WorkloadAlertSetting
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op WorkloadAnomalies
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op WorkloadAnomalies
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.WorkloadAnomalies" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.WorkloadAnomalies" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.WorkloadAnomalies" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation WorkloadAnomalies
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMisc -Op WorkloadForeverId
# -------------------------------------------------------------------

$query = New-RscQueryMisc -Op WorkloadForeverId
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMisc.WorkloadForeverId" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMisc.WorkloadForeverId" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMisc.WorkloadForeverId" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMisc -Operation WorkloadForeverId
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryMongo -Op BulkRecoverableRanges
# -------------------------------------------------------------------

$query = New-RscQueryMongo -Op BulkRecoverableRanges
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMongo.BulkRecoverableRanges" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMongo.BulkRecoverableRanges" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMongo.BulkRecoverableRanges" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMongo -Operation BulkRecoverableRanges
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMongo -Op Collection
# -------------------------------------------------------------------

$query = New-RscQueryMongo -Op Collection
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMongo.Collection" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMongo.Collection" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMongo.Collection" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMongo -Operation Collection
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMongo -Op Collections
# -------------------------------------------------------------------

$query = New-RscQueryMongo -Op Collections
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMongo.Collections" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMongo.Collections" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMongo.Collections" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMongo -Operation Collections
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMongo -Op Database
# -------------------------------------------------------------------

$query = New-RscQueryMongo -Op Database
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMongo.Database" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMongo.Database" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMongo.Database" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMongo -Operation Database
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMongo -Op Databases
# -------------------------------------------------------------------

$query = New-RscQueryMongo -Op Databases
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMongo.Databases" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMongo.Databases" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMongo.Databases" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMongo -Operation Databases
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMongo -Op RecoverableRanges
# -------------------------------------------------------------------

$query = New-RscQueryMongo -Op RecoverableRanges
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMongo.RecoverableRanges" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMongo.RecoverableRanges" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMongo.RecoverableRanges" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMongo -Operation RecoverableRanges
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMongo -Op Source
# -------------------------------------------------------------------

$query = New-RscQueryMongo -Op Source
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMongo.Source" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMongo.Source" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMongo.Source" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMongo -Operation Source
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMongo -Op Sources
# -------------------------------------------------------------------

$query = New-RscQueryMongo -Op Sources
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMongo.Sources" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMongo.Sources" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMongo.Sources" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMongo -Operation Sources
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryMongoDb -Op BulkRecoverableRange
# -------------------------------------------------------------------

$query = New-RscQueryMongoDb -Op BulkRecoverableRange
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMongoDb.BulkRecoverableRange" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMongoDb.BulkRecoverableRange" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMongoDb.BulkRecoverableRange" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMongoDb -Operation BulkRecoverableRange
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMongoDb -Op Collection
# -------------------------------------------------------------------

$query = New-RscQueryMongoDb -Op Collection
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMongoDb.Collection" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMongoDb.Collection" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMongoDb.Collection" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMongoDb -Operation Collection
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMongoDb -Op CollectionRecoverableRange
# -------------------------------------------------------------------

$query = New-RscQueryMongoDb -Op CollectionRecoverableRange
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMongoDb.CollectionRecoverableRange" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMongoDb.CollectionRecoverableRange" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMongoDb.CollectionRecoverableRange" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMongoDb -Operation CollectionRecoverableRange
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMongoDb -Op Collections
# -------------------------------------------------------------------

$query = New-RscQueryMongoDb -Op Collections
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMongoDb.Collections" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMongoDb.Collections" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMongoDb.Collections" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMongoDb -Operation Collections
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMongoDb -Op Database
# -------------------------------------------------------------------

$query = New-RscQueryMongoDb -Op Database
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMongoDb.Database" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMongoDb.Database" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMongoDb.Database" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMongoDb -Operation Database
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMongoDb -Op Databases
# -------------------------------------------------------------------

$query = New-RscQueryMongoDb -Op Databases
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMongoDb.Databases" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMongoDb.Databases" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMongoDb.Databases" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMongoDb -Operation Databases
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMongoDb -Op Source
# -------------------------------------------------------------------

$query = New-RscQueryMongoDb -Op Source
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMongoDb.Source" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMongoDb.Source" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMongoDb.Source" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMongoDb -Operation Source
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMongoDb -Op Sources
# -------------------------------------------------------------------

$query = New-RscQueryMongoDb -Op Sources
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMongoDb.Sources" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMongoDb.Sources" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMongoDb.Sources" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMongoDb -Operation Sources
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryMosaic -Op BulkRecoveryRange
# -------------------------------------------------------------------

$query = New-RscQueryMosaic -Op BulkRecoveryRange
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMosaic.BulkRecoveryRange" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMosaic.BulkRecoveryRange" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMosaic.BulkRecoveryRange" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMosaic -Operation BulkRecoveryRange
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMosaic -Op Snapshots
# -------------------------------------------------------------------

$query = New-RscQueryMosaic -Op Snapshots
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMosaic.Snapshots" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMosaic.Snapshots" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMosaic.Snapshots" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMosaic -Operation Snapshots
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMosaic -Op Stores
# -------------------------------------------------------------------

$query = New-RscQueryMosaic -Op Stores
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMosaic.Stores" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMosaic.Stores" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMosaic.Stores" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMosaic -Operation Stores
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMosaic -Op Versions
# -------------------------------------------------------------------

$query = New-RscQueryMosaic -Op Versions
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMosaic.Versions" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMosaic.Versions" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMosaic.Versions" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMosaic -Operation Versions
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryMssql -Op AvailabilityGroup
# -------------------------------------------------------------------

$query = New-RscQueryMssql -Op AvailabilityGroup
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMssql.AvailabilityGroup" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMssql.AvailabilityGroup" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMssql.AvailabilityGroup" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMssql -Operation AvailabilityGroup
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMssql -Op CdmLogShippingTarget
# -------------------------------------------------------------------

$query = New-RscQueryMssql -Op CdmLogShippingTarget
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMssql.CdmLogShippingTarget" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMssql.CdmLogShippingTarget" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMssql.CdmLogShippingTarget" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMssql -Operation CdmLogShippingTarget
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMssql -Op CdmLogShippingTargets
# -------------------------------------------------------------------

$query = New-RscQueryMssql -Op CdmLogShippingTargets
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMssql.CdmLogShippingTargets" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMssql.CdmLogShippingTargets" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMssql.CdmLogShippingTargets" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMssql -Operation CdmLogShippingTargets
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMssql -Op CompatibleInstances
# -------------------------------------------------------------------

$query = New-RscQueryMssql -Op CompatibleInstances
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMssql.CompatibleInstances" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMssql.CompatibleInstances" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMssql.CompatibleInstances" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMssql -Operation CompatibleInstances
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMssql -Op Database
# -------------------------------------------------------------------

$query = New-RscQueryMssql -Op Database
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMssql.Database" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMssql.Database" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMssql.Database" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMssql -Operation Database
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMssql -Op DatabaseLiveMounts
# -------------------------------------------------------------------

$query = New-RscQueryMssql -Op DatabaseLiveMounts
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMssql.DatabaseLiveMounts" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMssql.DatabaseLiveMounts" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMssql.DatabaseLiveMounts" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMssql -Operation DatabaseLiveMounts
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMssql -Op DatabaseMissedRecoverableRanges
# -------------------------------------------------------------------

$query = New-RscQueryMssql -Op DatabaseMissedRecoverableRanges
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMssql.DatabaseMissedRecoverableRanges" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMssql.DatabaseMissedRecoverableRanges" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMssql.DatabaseMissedRecoverableRanges" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMssql -Operation DatabaseMissedRecoverableRanges
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMssql -Op DatabaseMissedSnapshots
# -------------------------------------------------------------------

$query = New-RscQueryMssql -Op DatabaseMissedSnapshots
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMssql.DatabaseMissedSnapshots" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMssql.DatabaseMissedSnapshots" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMssql.DatabaseMissedSnapshots" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMssql -Operation DatabaseMissedSnapshots
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMssql -Op DatabaseRestoreEstimate
# -------------------------------------------------------------------

$query = New-RscQueryMssql -Op DatabaseRestoreEstimate
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMssql.DatabaseRestoreEstimate" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMssql.DatabaseRestoreEstimate" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMssql.DatabaseRestoreEstimate" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMssql -Operation DatabaseRestoreEstimate
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMssql -Op DatabaseRestoreFiles
# -------------------------------------------------------------------

$query = New-RscQueryMssql -Op DatabaseRestoreFiles
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMssql.DatabaseRestoreFiles" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMssql.DatabaseRestoreFiles" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMssql.DatabaseRestoreFiles" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMssql -Operation DatabaseRestoreFiles
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMssql -Op Databases
# -------------------------------------------------------------------

$query = New-RscQueryMssql -Op Databases
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMssql.Databases" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMssql.Databases" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMssql.Databases" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMssql -Operation Databases
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMssql -Op DefaultProperties
# -------------------------------------------------------------------

$query = New-RscQueryMssql -Op DefaultProperties
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMssql.DefaultProperties" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMssql.DefaultProperties" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMssql.DefaultProperties" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMssql -Operation DefaultProperties
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMssql -Op DefaultPropertiesOnCluster
# -------------------------------------------------------------------

$query = New-RscQueryMssql -Op DefaultPropertiesOnCluster
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMssql.DefaultPropertiesOnCluster" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMssql.DefaultPropertiesOnCluster" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMssql.DefaultPropertiesOnCluster" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMssql -Operation DefaultPropertiesOnCluster
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMssql -Op Instance
# -------------------------------------------------------------------

$query = New-RscQueryMssql -Op Instance
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMssql.Instance" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMssql.Instance" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMssql.Instance" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMssql -Operation Instance
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMssql -Op LogShippingTargets
# -------------------------------------------------------------------

$query = New-RscQueryMssql -Op LogShippingTargets
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMssql.LogShippingTargets" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMssql.LogShippingTargets" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMssql.LogShippingTargets" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMssql -Operation LogShippingTargets
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMssql -Op RecoverableRanges
# -------------------------------------------------------------------

$query = New-RscQueryMssql -Op RecoverableRanges
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMssql.RecoverableRanges" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMssql.RecoverableRanges" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMssql.RecoverableRanges" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMssql -Operation RecoverableRanges
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryMssql -Op TopLevelDescendants
# -------------------------------------------------------------------

$query = New-RscQueryMssql -Op TopLevelDescendants
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryMssql.TopLevelDescendants" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryMssql.TopLevelDescendants" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryMssql.TopLevelDescendants" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryMssql -Operation TopLevelDescendants
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryNas -Op Fileset
# -------------------------------------------------------------------

$query = New-RscQueryNas -Op Fileset
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNas.Fileset" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNas.Fileset" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNas.Fileset" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNas -Operation Fileset
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNas -Op Namespace
# -------------------------------------------------------------------

$query = New-RscQueryNas -Op Namespace
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNas.Namespace" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNas.Namespace" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNas.Namespace" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNas -Operation Namespace
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNas -Op Namespaces
# -------------------------------------------------------------------

$query = New-RscQueryNas -Op Namespaces
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNas.Namespaces" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNas.Namespaces" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNas.Namespaces" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNas -Operation Namespaces
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNas -Op Share
# -------------------------------------------------------------------

$query = New-RscQueryNas -Op Share
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNas.Share" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNas.Share" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNas.Share" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNas -Operation Share
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNas -Op System
# -------------------------------------------------------------------

$query = New-RscQueryNas -Op System
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNas.System" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNas.System" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNas.System" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNas -Operation System
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNas -Op Systems
# -------------------------------------------------------------------

$query = New-RscQueryNas -Op Systems
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNas.Systems" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNas.Systems" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNas.Systems" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNas -Operation Systems
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNas -Op TopLevelDescendants
# -------------------------------------------------------------------

$query = New-RscQueryNas -Op TopLevelDescendants
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNas.TopLevelDescendants" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNas.TopLevelDescendants" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNas.TopLevelDescendants" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNas -Operation TopLevelDescendants
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNas -Op Volume
# -------------------------------------------------------------------

$query = New-RscQueryNas -Op Volume
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNas.Volume" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNas.Volume" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNas.Volume" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNas -Operation Volume
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryNcd -Op BackEndCapacity
# -------------------------------------------------------------------

$query = New-RscQueryNcd -Op BackEndCapacity
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNcd.BackEndCapacity" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNcd.BackEndCapacity" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNcd.BackEndCapacity" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNcd -Operation BackEndCapacity
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNcd -Op FrontEndCapacity
# -------------------------------------------------------------------

$query = New-RscQueryNcd -Op FrontEndCapacity
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNcd.FrontEndCapacity" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNcd.FrontEndCapacity" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNcd.FrontEndCapacity" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNcd -Operation FrontEndCapacity
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNcd -Op ObjectProtectionStatus
# -------------------------------------------------------------------

$query = New-RscQueryNcd -Op ObjectProtectionStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNcd.ObjectProtectionStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNcd.ObjectProtectionStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNcd.ObjectProtectionStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNcd -Operation ObjectProtectionStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNcd -Op ObjectsOverTimeData
# -------------------------------------------------------------------

$query = New-RscQueryNcd -Op ObjectsOverTimeData
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNcd.ObjectsOverTimeData" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNcd.ObjectsOverTimeData" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNcd.ObjectsOverTimeData" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNcd -Operation ObjectsOverTimeData
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNcd -Op TaskData
# -------------------------------------------------------------------

$query = New-RscQueryNcd -Op TaskData
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNcd.TaskData" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNcd.TaskData" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNcd.TaskData" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNcd -Operation TaskData
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNcd -Op UsageOverTimeData
# -------------------------------------------------------------------

$query = New-RscQueryNcd -Op UsageOverTimeData
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNcd.UsageOverTimeData" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNcd.UsageOverTimeData" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNcd.UsageOverTimeData" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNcd -Operation UsageOverTimeData
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNcd -Op VmImageUrl
# -------------------------------------------------------------------

$query = New-RscQueryNcd -Op VmImageUrl
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNcd.VmImageUrl" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNcd.VmImageUrl" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNcd.VmImageUrl" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNcd -Operation VmImageUrl
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryNutanix -Op BrowseSnapshot
# -------------------------------------------------------------------

$query = New-RscQueryNutanix -Op BrowseSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNutanix.BrowseSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNutanix.BrowseSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNutanix.BrowseSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNutanix -Operation BrowseSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNutanix -Op Category
# -------------------------------------------------------------------

$query = New-RscQueryNutanix -Op Category
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNutanix.Category" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNutanix.Category" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNutanix.Category" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNutanix -Operation Category
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNutanix -Op CategoryValue
# -------------------------------------------------------------------

$query = New-RscQueryNutanix -Op CategoryValue
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNutanix.CategoryValue" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNutanix.CategoryValue" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNutanix.CategoryValue" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNutanix -Operation CategoryValue
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNutanix -Op Cluster
# -------------------------------------------------------------------

$query = New-RscQueryNutanix -Op Cluster
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNutanix.Cluster" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNutanix.Cluster" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNutanix.Cluster" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNutanix -Operation Cluster
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNutanix -Op ClusterAsyncRequestStatus
# -------------------------------------------------------------------

$query = New-RscQueryNutanix -Op ClusterAsyncRequestStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNutanix.ClusterAsyncRequestStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNutanix.ClusterAsyncRequestStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNutanix.ClusterAsyncRequestStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNutanix -Operation ClusterAsyncRequestStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNutanix -Op ClusterContainers
# -------------------------------------------------------------------

$query = New-RscQueryNutanix -Op ClusterContainers
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNutanix.ClusterContainers" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNutanix.ClusterContainers" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNutanix.ClusterContainers" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNutanix -Operation ClusterContainers
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNutanix -Op ClusterNetworks
# -------------------------------------------------------------------

$query = New-RscQueryNutanix -Op ClusterNetworks
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNutanix.ClusterNetworks" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNutanix.ClusterNetworks" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNutanix.ClusterNetworks" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNutanix -Operation ClusterNetworks
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNutanix -Op Clusters
# -------------------------------------------------------------------

$query = New-RscQueryNutanix -Op Clusters
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNutanix.Clusters" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNutanix.Clusters" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNutanix.Clusters" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNutanix -Operation Clusters
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNutanix -Op Mounts
# -------------------------------------------------------------------

$query = New-RscQueryNutanix -Op Mounts
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNutanix.Mounts" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNutanix.Mounts" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNutanix.Mounts" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNutanix -Operation Mounts
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNutanix -Op PrismCentral
# -------------------------------------------------------------------

$query = New-RscQueryNutanix -Op PrismCentral
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNutanix.PrismCentral" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNutanix.PrismCentral" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNutanix.PrismCentral" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNutanix -Operation PrismCentral
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNutanix -Op PrismCentrals
# -------------------------------------------------------------------

$query = New-RscQueryNutanix -Op PrismCentrals
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNutanix.PrismCentrals" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNutanix.PrismCentrals" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNutanix.PrismCentrals" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNutanix -Operation PrismCentrals
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNutanix -Op SearchVm
# -------------------------------------------------------------------

$query = New-RscQueryNutanix -Op SearchVm
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNutanix.SearchVm" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNutanix.SearchVm" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNutanix.SearchVm" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNutanix -Operation SearchVm
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNutanix -Op SnapshotDetail
# -------------------------------------------------------------------

$query = New-RscQueryNutanix -Op SnapshotDetail
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNutanix.SnapshotDetail" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNutanix.SnapshotDetail" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNutanix.SnapshotDetail" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNutanix -Operation SnapshotDetail
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNutanix -Op SnapshotVdisks
# -------------------------------------------------------------------

$query = New-RscQueryNutanix -Op SnapshotVdisks
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNutanix.SnapshotVdisks" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNutanix.SnapshotVdisks" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNutanix.SnapshotVdisks" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNutanix -Operation SnapshotVdisks
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNutanix -Op TopLevelDescendants
# -------------------------------------------------------------------

$query = New-RscQueryNutanix -Op TopLevelDescendants
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNutanix.TopLevelDescendants" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNutanix.TopLevelDescendants" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNutanix.TopLevelDescendants" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNutanix -Operation TopLevelDescendants
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNutanix -Op VDiskMountableVms
# -------------------------------------------------------------------

$query = New-RscQueryNutanix -Op VDiskMountableVms
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNutanix.VDiskMountableVms" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNutanix.VDiskMountableVms" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNutanix.VDiskMountableVms" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNutanix -Operation VDiskMountableVms
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNutanix -Op Vm
# -------------------------------------------------------------------

$query = New-RscQueryNutanix -Op Vm
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNutanix.Vm" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNutanix.Vm" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNutanix.Vm" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNutanix -Operation Vm
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNutanix -Op VmAsyncRequestStatus
# -------------------------------------------------------------------

$query = New-RscQueryNutanix -Op VmAsyncRequestStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNutanix.VmAsyncRequestStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNutanix.VmAsyncRequestStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNutanix.VmAsyncRequestStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNutanix -Operation VmAsyncRequestStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNutanix -Op VmMissedSnapshots
# -------------------------------------------------------------------

$query = New-RscQueryNutanix -Op VmMissedSnapshots
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNutanix.VmMissedSnapshots" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNutanix.VmMissedSnapshots" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNutanix.VmMissedSnapshots" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNutanix -Operation VmMissedSnapshots
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryNutanix -Op Vms
# -------------------------------------------------------------------

$query = New-RscQueryNutanix -Op Vms
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryNutanix.Vms" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryNutanix.Vms" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryNutanix.Vms" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryNutanix -Operation Vms
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryO365 -Op AdGroups
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op AdGroups
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.AdGroups" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.AdGroups" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.AdGroups" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation AdGroups
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op BrowseTeamConvChannels
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op BrowseTeamConvChannels
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.BrowseTeamConvChannels" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.BrowseTeamConvChannels" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.BrowseTeamConvChannels" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation BrowseTeamConvChannels
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op Calendar
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op Calendar
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.Calendar" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.Calendar" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.Calendar" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation Calendar
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op Consumption
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op Consumption
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.Consumption" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.Consumption" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.Consumption" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation Consumption
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op Groups
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op Groups
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.Groups" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.Groups" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.Groups" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation Groups
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op License
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op License
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.License" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.License" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.License" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation License
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op ListApps
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op ListApps
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.ListApps" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.ListApps" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.ListApps" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation ListApps
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op Mailbox
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op Mailbox
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.Mailbox" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.Mailbox" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.Mailbox" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation Mailbox
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op Mailboxes
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op Mailboxes
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.Mailboxes" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.Mailboxes" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.Mailboxes" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation Mailboxes
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op ObjectAncestors
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op ObjectAncestors
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.ObjectAncestors" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.ObjectAncestors" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.ObjectAncestors" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation ObjectAncestors
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op Onedrive
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op Onedrive
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.Onedrive" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.Onedrive" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.Onedrive" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation Onedrive
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op Onedrives
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op Onedrives
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.Onedrives" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.Onedrives" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.Onedrives" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation Onedrives
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op Org
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op Org
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.Org" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.Org" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.Org" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation Org
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op OrgAtSnappableLevel
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op OrgAtSnappableLevel
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.OrgAtSnappableLevel" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.OrgAtSnappableLevel" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.OrgAtSnappableLevel" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation OrgAtSnappableLevel
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op OrgStatuses
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op OrgStatuses
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.OrgStatuses" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.OrgStatuses" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.OrgStatuses" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation OrgStatuses
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op OrgSummaries
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op OrgSummaries
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.OrgSummaries" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.OrgSummaries" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.OrgSummaries" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation OrgSummaries
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op Orgs
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op Orgs
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.Orgs" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.Orgs" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.Orgs" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation Orgs
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op ServiceAccount
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op ServiceAccount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.ServiceAccount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.ServiceAccount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.ServiceAccount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation ServiceAccount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op ServiceStatus
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op ServiceStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.ServiceStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.ServiceStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.ServiceStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation ServiceStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op SharepointDrive
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op SharepointDrive
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.SharepointDrive" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.SharepointDrive" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.SharepointDrive" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation SharepointDrive
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op SharepointDrives
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op SharepointDrives
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.SharepointDrives" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.SharepointDrives" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.SharepointDrives" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation SharepointDrives
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op SharepointList
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op SharepointList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.SharepointList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.SharepointList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.SharepointList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation SharepointList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op SharepointLists
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op SharepointLists
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.SharepointLists" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.SharepointLists" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.SharepointLists" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation SharepointLists
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op SharepointObjectList
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op SharepointObjectList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.SharepointObjectList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.SharepointObjectList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.SharepointObjectList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation SharepointObjectList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op SharepointObjects
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op SharepointObjects
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.SharepointObjects" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.SharepointObjects" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.SharepointObjects" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation SharepointObjects
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op SharepointObjectsNew
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op SharepointObjectsNew
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.SharepointObjectsNew" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.SharepointObjectsNew" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.SharepointObjectsNew" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation SharepointObjectsNew
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op SharepointSite
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op SharepointSite
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.SharepointSite" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.SharepointSite" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.SharepointSite" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation SharepointSite
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op SharepointSites
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op SharepointSites
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.SharepointSites" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.SharepointSites" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.SharepointSites" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation SharepointSites
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op Site
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op Site
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.Site" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.Site" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.Site" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation Site
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op Sites
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op Sites
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.Sites" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.Sites" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.Sites" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation Sites
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op StorageStats
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op StorageStats
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.StorageStats" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.StorageStats" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.StorageStats" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation StorageStats
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op SubscriptionsAppTypeCounts
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op SubscriptionsAppTypeCounts
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.SubscriptionsAppTypeCounts" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.SubscriptionsAppTypeCounts" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.SubscriptionsAppTypeCounts" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation SubscriptionsAppTypeCounts
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op Team
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op Team
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.Team" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.Team" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.Team" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation Team
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op TeamChannels
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op TeamChannels
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.TeamChannels" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.TeamChannels" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.TeamChannels" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation TeamChannels
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op TeamConversationsFolderID
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op TeamConversationsFolderID
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.TeamConversationsFolderID" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.TeamConversationsFolderID" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.TeamConversationsFolderID" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation TeamConversationsFolderID
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op TeamPostedBy
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op TeamPostedBy
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.TeamPostedBy" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.TeamPostedBy" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.TeamPostedBy" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation TeamPostedBy
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op Teams
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op Teams
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.Teams" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.Teams" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.Teams" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation Teams
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op User
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op User
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.User" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.User" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.User" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation User
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryO365 -Op UserObjects
# -------------------------------------------------------------------

$query = New-RscQueryO365 -Op UserObjects
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryO365.UserObjects" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryO365.UserObjects" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryO365.UserObjects" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryO365 -Operation UserObjects
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryOracle -Op AcoExampleDownloadLink
# -------------------------------------------------------------------

$query = New-RscQueryOracle -Op AcoExampleDownloadLink
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryOracle.AcoExampleDownloadLink" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryOracle.AcoExampleDownloadLink" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryOracle.AcoExampleDownloadLink" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryOracle -Operation AcoExampleDownloadLink
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryOracle -Op AcoParameters
# -------------------------------------------------------------------

$query = New-RscQueryOracle -Op AcoParameters
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryOracle.AcoParameters" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryOracle.AcoParameters" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryOracle.AcoParameters" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryOracle -Operation AcoParameters
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryOracle -Op DataGuardGroup
# -------------------------------------------------------------------

$query = New-RscQueryOracle -Op DataGuardGroup
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryOracle.DataGuardGroup" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryOracle.DataGuardGroup" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryOracle.DataGuardGroup" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryOracle -Operation DataGuardGroup
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryOracle -Op Database
# -------------------------------------------------------------------

$query = New-RscQueryOracle -Op Database
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryOracle.Database" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryOracle.Database" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryOracle.Database" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryOracle -Operation Database
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryOracle -Op DatabaseAsyncRequestDetails
# -------------------------------------------------------------------

$query = New-RscQueryOracle -Op DatabaseAsyncRequestDetails
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryOracle.DatabaseAsyncRequestDetails" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryOracle.DatabaseAsyncRequestDetails" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryOracle.DatabaseAsyncRequestDetails" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryOracle -Operation DatabaseAsyncRequestDetails
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryOracle -Op DatabaseLogBackupConfig
# -------------------------------------------------------------------

$query = New-RscQueryOracle -Op DatabaseLogBackupConfig
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryOracle.DatabaseLogBackupConfig" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryOracle.DatabaseLogBackupConfig" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryOracle.DatabaseLogBackupConfig" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryOracle -Operation DatabaseLogBackupConfig
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryOracle -Op Databases
# -------------------------------------------------------------------

$query = New-RscQueryOracle -Op Databases
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryOracle.Databases" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryOracle.Databases" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryOracle.Databases" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryOracle -Operation Databases
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryOracle -Op Host
# -------------------------------------------------------------------

$query = New-RscQueryOracle -Op Host
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryOracle.Host" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryOracle.Host" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryOracle.Host" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryOracle -Operation Host
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryOracle -Op HostLogBackupConfig
# -------------------------------------------------------------------

$query = New-RscQueryOracle -Op HostLogBackupConfig
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryOracle.HostLogBackupConfig" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryOracle.HostLogBackupConfig" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryOracle.HostLogBackupConfig" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryOracle -Operation HostLogBackupConfig
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryOracle -Op LiveMounts
# -------------------------------------------------------------------

$query = New-RscQueryOracle -Op LiveMounts
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryOracle.LiveMounts" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryOracle.LiveMounts" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryOracle.LiveMounts" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryOracle -Operation LiveMounts
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryOracle -Op MissedRecoverableRanges
# -------------------------------------------------------------------

$query = New-RscQueryOracle -Op MissedRecoverableRanges
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryOracle.MissedRecoverableRanges" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryOracle.MissedRecoverableRanges" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryOracle.MissedRecoverableRanges" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryOracle -Operation MissedRecoverableRanges
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryOracle -Op MissedSnapshots
# -------------------------------------------------------------------

$query = New-RscQueryOracle -Op MissedSnapshots
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryOracle.MissedSnapshots" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryOracle.MissedSnapshots" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryOracle.MissedSnapshots" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryOracle -Operation MissedSnapshots
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryOracle -Op PdbDetails
# -------------------------------------------------------------------

$query = New-RscQueryOracle -Op PdbDetails
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryOracle.PdbDetails" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryOracle.PdbDetails" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryOracle.PdbDetails" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryOracle -Operation PdbDetails
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryOracle -Op Rac
# -------------------------------------------------------------------

$query = New-RscQueryOracle -Op Rac
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryOracle.Rac" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryOracle.Rac" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryOracle.Rac" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryOracle -Operation Rac
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryOracle -Op RacLogBackupConfig
# -------------------------------------------------------------------

$query = New-RscQueryOracle -Op RacLogBackupConfig
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryOracle.RacLogBackupConfig" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryOracle.RacLogBackupConfig" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryOracle.RacLogBackupConfig" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryOracle -Operation RacLogBackupConfig
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryOracle -Op RecoverableRanges
# -------------------------------------------------------------------

$query = New-RscQueryOracle -Op RecoverableRanges
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryOracle.RecoverableRanges" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryOracle.RecoverableRanges" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryOracle.RecoverableRanges" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryOracle -Operation RecoverableRanges
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryOracle -Op TopLevelDescendants
# -------------------------------------------------------------------

$query = New-RscQueryOracle -Op TopLevelDescendants
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryOracle.TopLevelDescendants" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryOracle.TopLevelDescendants" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryOracle.TopLevelDescendants" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryOracle -Operation TopLevelDescendants
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryPolicy -Op OrgSecurityPolicy
# -------------------------------------------------------------------

$query = New-RscQueryPolicy -Op OrgSecurityPolicy
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryPolicy.OrgSecurityPolicy" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryPolicy.OrgSecurityPolicy" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryPolicy.OrgSecurityPolicy" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryPolicy -Operation OrgSecurityPolicy
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryPolicy -Op PasswordComplexityPolicy
# -------------------------------------------------------------------

$query = New-RscQueryPolicy -Op PasswordComplexityPolicy
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryPolicy.PasswordComplexityPolicy" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryPolicy.PasswordComplexityPolicy" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryPolicy.PasswordComplexityPolicy" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryPolicy -Operation PasswordComplexityPolicy
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryPolicy -Op Policies
# -------------------------------------------------------------------

$query = New-RscQueryPolicy -Op Policies
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryPolicy.Policies" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryPolicy.Policies" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryPolicy.Policies" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryPolicy -Operation Policies
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryPolicy -Op Policy
# -------------------------------------------------------------------

$query = New-RscQueryPolicy -Op Policy
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryPolicy.Policy" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryPolicy.Policy" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryPolicy.Policy" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryPolicy -Operation Policy
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryPolicy -Op PolicyObjectUsages
# -------------------------------------------------------------------

$query = New-RscQueryPolicy -Op PolicyObjectUsages
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryPolicy.PolicyObjectUsages" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryPolicy.PolicyObjectUsages" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryPolicy.PolicyObjectUsages" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryPolicy -Operation PolicyObjectUsages
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryPolicy -Op TopRiskPolicySummaries
# -------------------------------------------------------------------

$query = New-RscQueryPolicy -Op TopRiskPolicySummaries
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryPolicy.TopRiskPolicySummaries" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryPolicy.TopRiskPolicySummaries" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryPolicy.TopRiskPolicySummaries" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryPolicy -Operation TopRiskPolicySummaries
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryRansomware -Op DetectionWorkloadLocations
# -------------------------------------------------------------------

$query = New-RscQueryRansomware -Op DetectionWorkloadLocations
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryRansomware.DetectionWorkloadLocations" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryRansomware.DetectionWorkloadLocations" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryRansomware.DetectionWorkloadLocations" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryRansomware -Operation DetectionWorkloadLocations
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryRansomware -Op InvestigationAnalysisSummary
# -------------------------------------------------------------------

$query = New-RscQueryRansomware -Op InvestigationAnalysisSummary
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryRansomware.InvestigationAnalysisSummary" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryRansomware.InvestigationAnalysisSummary" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryRansomware.InvestigationAnalysisSummary" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryRansomware -Operation InvestigationAnalysisSummary
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryRansomware -Op InvestigationEnablement
# -------------------------------------------------------------------

$query = New-RscQueryRansomware -Op InvestigationEnablement
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryRansomware.InvestigationEnablement" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryRansomware.InvestigationEnablement" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryRansomware.InvestigationEnablement" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryRansomware -Operation InvestigationEnablement
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryRansomware -Op OverallInvestigationSummary
# -------------------------------------------------------------------

$query = New-RscQueryRansomware -Op OverallInvestigationSummary
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryRansomware.OverallInvestigationSummary" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryRansomware.OverallInvestigationSummary" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryRansomware.OverallInvestigationSummary" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryRansomware -Operation OverallInvestigationSummary
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryRansomware -Op ProcessedInvestigationWorkloadCount
# -------------------------------------------------------------------

$query = New-RscQueryRansomware -Op ProcessedInvestigationWorkloadCount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryRansomware.ProcessedInvestigationWorkloadCount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryRansomware.ProcessedInvestigationWorkloadCount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryRansomware.ProcessedInvestigationWorkloadCount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryRansomware -Operation ProcessedInvestigationWorkloadCount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryRansomware -Op Result
# -------------------------------------------------------------------

$query = New-RscQueryRansomware -Op Result
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryRansomware.Result" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryRansomware.Result" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryRansomware.Result" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryRansomware -Operation Result
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryRansomware -Op ResultOpt
# -------------------------------------------------------------------

$query = New-RscQueryRansomware -Op ResultOpt
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryRansomware.ResultOpt" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryRansomware.ResultOpt" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryRansomware.ResultOpt" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryRansomware -Operation ResultOpt
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryRansomware -Op Results
# -------------------------------------------------------------------

$query = New-RscQueryRansomware -Op Results
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryRansomware.Results" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryRansomware.Results" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryRansomware.Results" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryRansomware -Operation Results
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryRansomware -Op ResultsGrouped
# -------------------------------------------------------------------

$query = New-RscQueryRansomware -Op ResultsGrouped
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryRansomware.ResultsGrouped" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryRansomware.ResultsGrouped" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryRansomware.ResultsGrouped" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryRansomware -Operation ResultsGrouped
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryRcv -Op AccountEntitlement
# -------------------------------------------------------------------

$query = New-RscQueryRcv -Op AccountEntitlement
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryRcv.AccountEntitlement" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryRcv.AccountEntitlement" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryRcv.AccountEntitlement" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryRcv -Operation AccountEntitlement
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryRcv -Op AccountEntitlements
# -------------------------------------------------------------------

$query = New-RscQueryRcv -Op AccountEntitlements
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryRcv.AccountEntitlements" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryRcv.AccountEntitlements" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryRcv.AccountEntitlements" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryRcv -Operation AccountEntitlements
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryRcv -Op PrivateEndpointConnections
# -------------------------------------------------------------------

$query = New-RscQueryRcv -Op PrivateEndpointConnections
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryRcv.PrivateEndpointConnections" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryRcv.PrivateEndpointConnections" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryRcv.PrivateEndpointConnections" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryRcv -Operation PrivateEndpointConnections
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryReplication -Op IncomingStats
# -------------------------------------------------------------------

$query = New-RscQueryReplication -Op IncomingStats
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryReplication.IncomingStats" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryReplication.IncomingStats" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryReplication.IncomingStats" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryReplication -Operation IncomingStats
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryReplication -Op NetworkThrottleBypass
# -------------------------------------------------------------------

$query = New-RscQueryReplication -Op NetworkThrottleBypass
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryReplication.NetworkThrottleBypass" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryReplication.NetworkThrottleBypass" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryReplication.NetworkThrottleBypass" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryReplication -Operation NetworkThrottleBypass
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryReplication -Op NetworkThrottleBypassById
# -------------------------------------------------------------------

$query = New-RscQueryReplication -Op NetworkThrottleBypassById
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryReplication.NetworkThrottleBypassById" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryReplication.NetworkThrottleBypassById" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryReplication.NetworkThrottleBypassById" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryReplication -Operation NetworkThrottleBypassById
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryReplication -Op OutgoingStats
# -------------------------------------------------------------------

$query = New-RscQueryReplication -Op OutgoingStats
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryReplication.OutgoingStats" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryReplication.OutgoingStats" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryReplication.OutgoingStats" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryReplication -Operation OutgoingStats
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryReplication -Op Pairs
# -------------------------------------------------------------------

$query = New-RscQueryReplication -Op Pairs
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryReplication.Pairs" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryReplication.Pairs" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryReplication.Pairs" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryReplication -Operation Pairs
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryReplication -Op ValidSources
# -------------------------------------------------------------------

$query = New-RscQueryReplication -Op ValidSources
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryReplication.ValidSources" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryReplication.ValidSources" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryReplication.ValidSources" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryReplication -Operation ValidSources
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryReplication -Op ValidTargets
# -------------------------------------------------------------------

$query = New-RscQueryReplication -Op ValidTargets
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryReplication.ValidTargets" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryReplication.ValidTargets" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryReplication.ValidTargets" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryReplication -Operation ValidTargets
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryReport -Op ClusterMigrationCount
# -------------------------------------------------------------------

$query = New-RscQueryReport -Op ClusterMigrationCount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryReport.ClusterMigrationCount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryReport.ClusterMigrationCount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryReport.ClusterMigrationCount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryReport -Operation ClusterMigrationCount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryReport -Op ClusterMigrationJobStatus
# -------------------------------------------------------------------

$query = New-RscQueryReport -Op ClusterMigrationJobStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryReport.ClusterMigrationJobStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryReport.ClusterMigrationJobStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryReport.ClusterMigrationJobStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryReport -Operation ClusterMigrationJobStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryReport -Op ClusterMigrationStatus
# -------------------------------------------------------------------

$query = New-RscQueryReport -Op ClusterMigrationStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryReport.ClusterMigrationStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryReport.ClusterMigrationStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryReport.ClusterMigrationStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryReport -Operation ClusterMigrationStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryReport -Op Data
# -------------------------------------------------------------------

$query = New-RscQueryReport -Op Data
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryReport.Data" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryReport.Data" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryReport.Data" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryReport -Operation Data
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryReport -Op DatabaseLogForCluster
# -------------------------------------------------------------------

$query = New-RscQueryReport -Op DatabaseLogForCluster
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryReport.DatabaseLogForCluster" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryReport.DatabaseLogForCluster" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryReport.DatabaseLogForCluster" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryReport -Operation DatabaseLogForCluster
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryReport -Op DatabaseLogingPropertiesForCluster
# -------------------------------------------------------------------

$query = New-RscQueryReport -Op DatabaseLogingPropertiesForCluster
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryReport.DatabaseLogingPropertiesForCluster" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryReport.DatabaseLogingPropertiesForCluster" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryReport.DatabaseLogingPropertiesForCluster" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryReport -Operation DatabaseLogingPropertiesForCluster
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryReport -Op ScheduledReport
# -------------------------------------------------------------------

$query = New-RscQueryReport -Op ScheduledReport
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryReport.ScheduledReport" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryReport.ScheduledReport" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryReport.ScheduledReport" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryReport -Operation ScheduledReport
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryReport -Op ScheduledReports
# -------------------------------------------------------------------

$query = New-RscQueryReport -Op ScheduledReports
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryReport.ScheduledReports" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryReport.ScheduledReports" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryReport.ScheduledReports" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryReport -Operation ScheduledReports
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryReport -Op Sonar
# -------------------------------------------------------------------

$query = New-RscQueryReport -Op Sonar
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryReport.Sonar" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryReport.Sonar" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryReport.Sonar" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryReport -Operation Sonar
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryReport -Op SonarContent
# -------------------------------------------------------------------

$query = New-RscQueryReport -Op SonarContent
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryReport.SonarContent" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryReport.SonarContent" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryReport.SonarContent" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryReport -Operation SonarContent
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryReport -Op SonarRow
# -------------------------------------------------------------------

$query = New-RscQueryReport -Op SonarRow
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryReport.SonarRow" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryReport.SonarRow" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryReport.SonarRow" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryReport -Operation SonarRow
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQuerySapHana -Op Database
# -------------------------------------------------------------------

$query = New-RscQuerySapHana -Op Database
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySapHana.Database" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySapHana.Database" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySapHana.Database" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySapHana -Operation Database
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySapHana -Op Databases
# -------------------------------------------------------------------

$query = New-RscQuerySapHana -Op Databases
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySapHana.Databases" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySapHana.Databases" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySapHana.Databases" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySapHana -Operation Databases
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySapHana -Op LogSnapshot
# -------------------------------------------------------------------

$query = New-RscQuerySapHana -Op LogSnapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySapHana.LogSnapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySapHana.LogSnapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySapHana.LogSnapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySapHana -Operation LogSnapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySapHana -Op LogSnapshots
# -------------------------------------------------------------------

$query = New-RscQuerySapHana -Op LogSnapshots
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySapHana.LogSnapshots" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySapHana.LogSnapshots" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySapHana.LogSnapshots" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySapHana -Operation LogSnapshots
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySapHana -Op RecoverableRange
# -------------------------------------------------------------------

$query = New-RscQuerySapHana -Op RecoverableRange
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySapHana.RecoverableRange" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySapHana.RecoverableRange" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySapHana.RecoverableRange" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySapHana -Operation RecoverableRange
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySapHana -Op RecoverableRanges
# -------------------------------------------------------------------

$query = New-RscQuerySapHana -Op RecoverableRanges
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySapHana.RecoverableRanges" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySapHana.RecoverableRanges" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySapHana.RecoverableRanges" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySapHana -Operation RecoverableRanges
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySapHana -Op System
# -------------------------------------------------------------------

$query = New-RscQuerySapHana -Op System
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySapHana.System" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySapHana.System" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySapHana.System" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySapHana -Operation System
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySapHana -Op Systems
# -------------------------------------------------------------------

$query = New-RscQuerySapHana -Op Systems
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySapHana.Systems" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySapHana.Systems" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySapHana.Systems" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySapHana -Operation Systems
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryServiceAccount -Op IsOrgDisabled
# -------------------------------------------------------------------

$query = New-RscQueryServiceAccount -Op IsOrgDisabled
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryServiceAccount.IsOrgDisabled" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryServiceAccount.IsOrgDisabled" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryServiceAccount.IsOrgDisabled" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryServiceAccount -Operation IsOrgDisabled
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryServiceAccount -Op ServiceAccount
# -------------------------------------------------------------------

$query = New-RscQueryServiceAccount -Op ServiceAccount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryServiceAccount.ServiceAccount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryServiceAccount.ServiceAccount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryServiceAccount.ServiceAccount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryServiceAccount -Operation ServiceAccount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQuerySharepoint -Op BrowseDrive
# -------------------------------------------------------------------

$query = New-RscQuerySharepoint -Op BrowseDrive
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySharepoint.BrowseDrive" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySharepoint.BrowseDrive" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySharepoint.BrowseDrive" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySharepoint -Operation BrowseDrive
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySharepoint -Op BrowseList
# -------------------------------------------------------------------

$query = New-RscQuerySharepoint -Op BrowseList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySharepoint.BrowseList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySharepoint.BrowseList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySharepoint.BrowseList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySharepoint -Operation BrowseList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySharepoint -Op SiteDescendants
# -------------------------------------------------------------------

$query = New-RscQuerySharepoint -Op SiteDescendants
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySharepoint.SiteDescendants" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySharepoint.SiteDescendants" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySharepoint.SiteDescendants" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySharepoint -Operation SiteDescendants
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySharepoint -Op SiteExclusions
# -------------------------------------------------------------------

$query = New-RscQuerySharepoint -Op SiteExclusions
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySharepoint.SiteExclusions" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySharepoint.SiteExclusions" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySharepoint.SiteExclusions" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySharepoint -Operation SiteExclusions
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySharepoint -Op SiteSearch
# -------------------------------------------------------------------

$query = New-RscQuerySharepoint -Op SiteSearch
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySharepoint.SiteSearch" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySharepoint.SiteSearch" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySharepoint.SiteSearch" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySharepoint -Operation SiteSearch
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySharepoint -Op SnappableDriveSearch
# -------------------------------------------------------------------

$query = New-RscQuerySharepoint -Op SnappableDriveSearch
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySharepoint.SnappableDriveSearch" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySharepoint.SnappableDriveSearch" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySharepoint.SnappableDriveSearch" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySharepoint -Operation SnappableDriveSearch
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySharepoint -Op SnappableListSearch
# -------------------------------------------------------------------

$query = New-RscQuerySharepoint -Op SnappableListSearch
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySharepoint.SnappableListSearch" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySharepoint.SnappableListSearch" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySharepoint.SnappableListSearch" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySharepoint -Operation SnappableListSearch
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySharepoint -Op SnapshotDriveSearch
# -------------------------------------------------------------------

$query = New-RscQuerySharepoint -Op SnapshotDriveSearch
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySharepoint.SnapshotDriveSearch" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySharepoint.SnapshotDriveSearch" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySharepoint.SnapshotDriveSearch" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySharepoint -Operation SnapshotDriveSearch
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQuerySla -Op AuditDetail
# -------------------------------------------------------------------

$query = New-RscQuerySla -Op AuditDetail
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySla.AuditDetail" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySla.AuditDetail" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySla.AuditDetail" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySla -Operation AuditDetail
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySla -Op ClusterDomains
# -------------------------------------------------------------------

$query = New-RscQuerySla -Op ClusterDomains
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySla.ClusterDomains" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySla.ClusterDomains" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySla.ClusterDomains" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySla -Operation ClusterDomains
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySla -Op ClusterGlobals
# -------------------------------------------------------------------

$query = New-RscQuerySla -Op ClusterGlobals
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySla.ClusterGlobals" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySla.ClusterGlobals" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySla.ClusterGlobals" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySla -Operation ClusterGlobals
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySla -Op ConflictObjects
# -------------------------------------------------------------------

$query = New-RscQuerySla -Op ConflictObjects
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySla.ConflictObjects" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySla.ConflictObjects" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySla.ConflictObjects" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySla -Operation ConflictObjects
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySla -Op CountOfObjectsProtected
# -------------------------------------------------------------------

$query = New-RscQuerySla -Op CountOfObjectsProtected
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySla.CountOfObjectsProtected" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySla.CountOfObjectsProtected" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySla.CountOfObjectsProtected" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySla -Operation CountOfObjectsProtected
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySla -Op Domain
# -------------------------------------------------------------------

$query = New-RscQuerySla -Op Domain
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySla.Domain" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySla.Domain" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySla.Domain" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySla -Operation Domain
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySla -Op Domains
# -------------------------------------------------------------------

$query = New-RscQuerySla -Op Domains
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySla.Domains" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySla.Domains" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySla.Domains" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySla -Operation Domains
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySla -Op DownloadWithReplicationCsv
# -------------------------------------------------------------------

$query = New-RscQuerySla -Op DownloadWithReplicationCsv
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySla.DownloadWithReplicationCsv" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySla.DownloadWithReplicationCsv" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySla.DownloadWithReplicationCsv" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySla -Operation DownloadWithReplicationCsv
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySla -Op GlobalFilterList
# -------------------------------------------------------------------

$query = New-RscQuerySla -Op GlobalFilterList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySla.GlobalFilterList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySla.GlobalFilterList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySla.GlobalFilterList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySla -Operation GlobalFilterList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySla -Op GlobalStatuses
# -------------------------------------------------------------------

$query = New-RscQuerySla -Op GlobalStatuses
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySla.GlobalStatuses" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySla.GlobalStatuses" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySla.GlobalStatuses" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySla -Operation GlobalStatuses
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySla -Op ManagedVolume
# -------------------------------------------------------------------

$query = New-RscQuerySla -Op ManagedVolume
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySla.ManagedVolume" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySla.ManagedVolume" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySla.ManagedVolume" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySla -Operation ManagedVolume
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySla -Op ManagedVolumes
# -------------------------------------------------------------------

$query = New-RscQuerySla -Op ManagedVolumes
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySla.ManagedVolumes" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySla.ManagedVolumes" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySla.ManagedVolumes" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySla -Operation ManagedVolumes
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySla -Op NcdComplianceData
# -------------------------------------------------------------------

$query = New-RscQuerySla -Op NcdComplianceData
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySla.NcdComplianceData" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySla.NcdComplianceData" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySla.NcdComplianceData" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySla -Operation NcdComplianceData
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySla -Op SummariesByIds
# -------------------------------------------------------------------

$query = New-RscQuerySla -Op SummariesByIds
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySla.SummariesByIds" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySla.SummariesByIds" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySla.SummariesByIds" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySla -Operation SummariesByIds
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySla -Op VerifyWithReplicationToCluster
# -------------------------------------------------------------------

$query = New-RscQuerySla -Op VerifyWithReplicationToCluster
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySla.VerifyWithReplicationToCluster" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySla.VerifyWithReplicationToCluster" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySla.VerifyWithReplicationToCluster" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySla -Operation VerifyWithReplicationToCluster
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQuerySmb -Op Configuration
# -------------------------------------------------------------------

$query = New-RscQuerySmb -Op Configuration
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySmb.Configuration" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySmb.Configuration" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySmb.Configuration" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySmb -Operation Configuration
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySmb -Op Domains
# -------------------------------------------------------------------

$query = New-RscQuerySmb -Op Domains
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySmb.Domains" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySmb.Domains" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySmb.Domains" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySmb -Operation Domains
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQuerySnappable -Op CdmHierarchySnappableNew
# -------------------------------------------------------------------

$query = New-RscQuerySnappable -Op CdmHierarchySnappableNew
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnappable.CdmHierarchySnappableNew" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnappable.CdmHierarchySnappableNew" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnappable.CdmHierarchySnappableNew" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnappable -Operation CdmHierarchySnappableNew
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnappable -Op CdmHierarchySnappablesNew
# -------------------------------------------------------------------

$query = New-RscQuerySnappable -Op CdmHierarchySnappablesNew
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnappable.CdmHierarchySnappablesNew" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnappable.CdmHierarchySnappablesNew" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnappable.CdmHierarchySnappablesNew" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnappable -Operation CdmHierarchySnappablesNew
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnappable -Op ContactSearch
# -------------------------------------------------------------------

$query = New-RscQuerySnappable -Op ContactSearch
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnappable.ContactSearch" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnappable.ContactSearch" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnappable.ContactSearch" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnappable -Operation ContactSearch
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnappable -Op EmailSearch
# -------------------------------------------------------------------

$query = New-RscQuerySnappable -Op EmailSearch
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnappable.EmailSearch" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnappable.EmailSearch" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnappable.EmailSearch" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnappable -Operation EmailSearch
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnappable -Op EventSearch
# -------------------------------------------------------------------

$query = New-RscQuerySnappable -Op EventSearch
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnappable.EventSearch" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnappable.EventSearch" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnappable.EventSearch" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnappable -Operation EventSearch
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnappable -Op GroupByList
# -------------------------------------------------------------------

$query = New-RscQuerySnappable -Op GroupByList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnappable.GroupByList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnappable.GroupByList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnappable.GroupByList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnappable -Operation GroupByList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnappable -Op Hierarchy
# -------------------------------------------------------------------

$query = New-RscQuerySnappable -Op Hierarchy
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnappable.Hierarchy" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnappable.Hierarchy" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnappable.Hierarchy" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnappable -Operation Hierarchy
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnappable -Op List
# -------------------------------------------------------------------

$query = New-RscQuerySnappable -Op List
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnappable.List" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnappable.List" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnappable.List" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnappable -Operation List
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnappable -Op OnedriveSearch
# -------------------------------------------------------------------

$query = New-RscQuerySnappable -Op OnedriveSearch
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnappable.OnedriveSearch" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnappable.OnedriveSearch" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnappable.OnedriveSearch" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnappable -Operation OnedriveSearch
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnappable -Op Search
# -------------------------------------------------------------------

$query = New-RscQuerySnappable -Op Search
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnappable.Search" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnappable.Search" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnappable.Search" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnappable -Operation Search
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnappable -Op SearchVersionedFiles
# -------------------------------------------------------------------

$query = New-RscQuerySnappable -Op SearchVersionedFiles
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnappable.SearchVersionedFiles" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnappable.SearchVersionedFiles" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnappable.SearchVersionedFiles" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnappable -Operation SearchVersionedFiles
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnappable -Op TeamsConversationsSearch
# -------------------------------------------------------------------

$query = New-RscQuerySnappable -Op TeamsConversationsSearch
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnappable.TeamsConversationsSearch" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnappable.TeamsConversationsSearch" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnappable.TeamsConversationsSearch" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnappable -Operation TeamsConversationsSearch
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnappable -Op TeamsDriveSearch
# -------------------------------------------------------------------

$query = New-RscQuerySnappable -Op TeamsDriveSearch
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnappable.TeamsDriveSearch" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnappable.TeamsDriveSearch" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnappable.TeamsDriveSearch" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnappable -Operation TeamsDriveSearch
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQuerySnapshot -Op BrowseFileList
# -------------------------------------------------------------------

$query = New-RscQuerySnapshot -Op BrowseFileList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnapshot.BrowseFileList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnapshot.BrowseFileList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnapshot.BrowseFileList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnapshot -Operation BrowseFileList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnapshot -Op ClosestToPointInTime
# -------------------------------------------------------------------

$query = New-RscQuerySnapshot -Op ClosestToPointInTime
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnapshot.ClosestToPointInTime" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnapshot.ClosestToPointInTime" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnapshot.ClosestToPointInTime" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnapshot -Operation ClosestToPointInTime
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnapshot -Op EmailSearch
# -------------------------------------------------------------------

$query = New-RscQuerySnapshot -Op EmailSearch
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnapshot.EmailSearch" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnapshot.EmailSearch" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnapshot.EmailSearch" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnapshot -Operation EmailSearch
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnapshot -Op EventSearch
# -------------------------------------------------------------------

$query = New-RscQuerySnapshot -Op EventSearch
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnapshot.EventSearch" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnapshot.EventSearch" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnapshot.EventSearch" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnapshot -Operation EventSearch
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnapshot -Op FilesDelta
# -------------------------------------------------------------------

$query = New-RscQuerySnapshot -Op FilesDelta
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnapshot.FilesDelta" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnapshot.FilesDelta" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnapshot.FilesDelta" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnapshot -Operation FilesDelta
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnapshot -Op FilesDeltaV2
# -------------------------------------------------------------------

$query = New-RscQuerySnapshot -Op FilesDeltaV2
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnapshot.FilesDeltaV2" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnapshot.FilesDeltaV2" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnapshot.FilesDeltaV2" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnapshot -Operation FilesDeltaV2
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnapshot -Op Fileset
# -------------------------------------------------------------------

$query = New-RscQuerySnapshot -Op Fileset
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnapshot.Fileset" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnapshot.Fileset" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnapshot.Fileset" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnapshot -Operation Fileset
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnapshot -Op FilesetFiles
# -------------------------------------------------------------------

$query = New-RscQuerySnapshot -Op FilesetFiles
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnapshot.FilesetFiles" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnapshot.FilesetFiles" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnapshot.FilesetFiles" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnapshot -Operation FilesetFiles
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnapshot -Op LegalHoldSnappable
# -------------------------------------------------------------------

$query = New-RscQuerySnapshot -Op LegalHoldSnappable
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnapshot.LegalHoldSnappable" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnapshot.LegalHoldSnappable" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnapshot.LegalHoldSnappable" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnapshot -Operation LegalHoldSnappable
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnapshot -Op OnedriveSearch
# -------------------------------------------------------------------

$query = New-RscQuerySnapshot -Op OnedriveSearch
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnapshot.OnedriveSearch" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnapshot.OnedriveSearch" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnapshot.OnedriveSearch" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnapshot -Operation OnedriveSearch
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnapshot -Op Polaris
# -------------------------------------------------------------------

$query = New-RscQuerySnapshot -Op Polaris
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnapshot.Polaris" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnapshot.Polaris" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnapshot.Polaris" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnapshot -Operation Polaris
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnapshot -Op Pvcs
# -------------------------------------------------------------------

$query = New-RscQuerySnapshot -Op Pvcs
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnapshot.Pvcs" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnapshot.Pvcs" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnapshot.Pvcs" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnapshot -Operation Pvcs
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnapshot -Op QuarantinedDetails
# -------------------------------------------------------------------

$query = New-RscQuerySnapshot -Op QuarantinedDetails
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnapshot.QuarantinedDetails" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnapshot.QuarantinedDetails" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnapshot.QuarantinedDetails" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnapshot -Operation QuarantinedDetails
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnapshot -Op Results
# -------------------------------------------------------------------

$query = New-RscQuerySnapshot -Op Results
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnapshot.Results" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnapshot.Results" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnapshot.Results" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnapshot -Operation Results
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnapshot -Op SnappableList
# -------------------------------------------------------------------

$query = New-RscQuerySnapshot -Op SnappableList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnapshot.SnappableList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnapshot.SnappableList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnapshot.SnappableList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnapshot -Operation SnappableList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnapshot -Op SnappablesList
# -------------------------------------------------------------------

$query = New-RscQuerySnapshot -Op SnappablesList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnapshot.SnappablesList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnapshot.SnappablesList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnapshot.SnappablesList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnapshot -Operation SnappablesList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnapshot -Op SnappablesWithLegalHoldsSummary
# -------------------------------------------------------------------

$query = New-RscQuerySnapshot -Op SnappablesWithLegalHoldsSummary
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnapshot.SnappablesWithLegalHoldsSummary" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnapshot.SnappablesWithLegalHoldsSummary" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnapshot.SnappablesWithLegalHoldsSummary" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnapshot -Operation SnappablesWithLegalHoldsSummary
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnapshot -Op Snapshot
# -------------------------------------------------------------------

$query = New-RscQuerySnapshot -Op Snapshot
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnapshot.Snapshot" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnapshot.Snapshot" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnapshot.Snapshot" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnapshot -Operation Snapshot
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnapshot -Op UnmanagedObject
# -------------------------------------------------------------------

$query = New-RscQuerySnapshot -Op UnmanagedObject
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnapshot.UnmanagedObject" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnapshot.UnmanagedObject" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnapshot.UnmanagedObject" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnapshot -Operation UnmanagedObject
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnapshot -Op VappInstantRecoveryOptions
# -------------------------------------------------------------------

$query = New-RscQuerySnapshot -Op VappInstantRecoveryOptions
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnapshot.VappInstantRecoveryOptions" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnapshot.VappInstantRecoveryOptions" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnapshot.VappInstantRecoveryOptions" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnapshot -Operation VappInstantRecoveryOptions
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySnapshot -Op VappTemplateExportOptions
# -------------------------------------------------------------------

$query = New-RscQuerySnapshot -Op VappTemplateExportOptions
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnapshot.VappTemplateExportOptions" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnapshot.VappTemplateExportOptions" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnapshot.VappTemplateExportOptions" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnapshot -Operation VappTemplateExportOptions
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQuerySnmp -Op Configurations
# -------------------------------------------------------------------

$query = New-RscQuerySnmp -Op Configurations
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySnmp.Configurations" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySnmp.Configurations" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySnmp.Configurations" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySnmp -Operation Configurations
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQuerySonar -Op UserGroups
# -------------------------------------------------------------------

$query = New-RscQuerySonar -Op UserGroups
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySonar.UserGroups" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySonar.UserGroups" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySonar.UserGroups" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySonar -Operation UserGroups
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQuerySonar -Op Users
# -------------------------------------------------------------------

$query = New-RscQuerySonar -Op Users
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySonar.Users" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySonar.Users" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySonar.Users" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySonar -Operation Users
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryStorageArray -Op StorageArray
# -------------------------------------------------------------------

$query = New-RscQueryStorageArray -Op StorageArray
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryStorageArray.StorageArray" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryStorageArray.StorageArray" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryStorageArray.StorageArray" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryStorageArray -Operation StorageArray
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQuerySyslog -Op ExportRules
# -------------------------------------------------------------------

$query = New-RscQuerySyslog -Op ExportRules
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQuerySyslog.ExportRules" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQuerySyslog.ExportRules" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQuerySyslog.ExportRules" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQuerySyslog -Operation ExportRules
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryThreat -Op HuntDetail
# -------------------------------------------------------------------

$query = New-RscQueryThreat -Op HuntDetail
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryThreat.HuntDetail" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryThreat.HuntDetail" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryThreat.HuntDetail" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryThreat -Operation HuntDetail
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryThreat -Op HuntResult
# -------------------------------------------------------------------

$query = New-RscQueryThreat -Op HuntResult
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryThreat.HuntResult" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryThreat.HuntResult" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryThreat.HuntResult" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryThreat -Operation HuntResult
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryThreat -Op HuntSummary
# -------------------------------------------------------------------

$query = New-RscQueryThreat -Op HuntSummary
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryThreat.HuntSummary" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryThreat.HuntSummary" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryThreat.HuntSummary" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryThreat -Operation HuntSummary
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryThreat -Op Hunts
# -------------------------------------------------------------------

$query = New-RscQueryThreat -Op Hunts
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryThreat.Hunts" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryThreat.Hunts" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryThreat.Hunts" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryThreat -Operation Hunts
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryVcenter -Op AdvancedTagPreview
# -------------------------------------------------------------------

$query = New-RscQueryVcenter -Op AdvancedTagPreview
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVcenter.AdvancedTagPreview" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVcenter.AdvancedTagPreview" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVcenter.AdvancedTagPreview" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVcenter -Operation AdvancedTagPreview
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVcenter -Op AsyncRequestStatus
# -------------------------------------------------------------------

$query = New-RscQueryVcenter -Op AsyncRequestStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVcenter.AsyncRequestStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVcenter.AsyncRequestStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVcenter.AsyncRequestStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVcenter -Operation AsyncRequestStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVcenter -Op HotAddBandwidth
# -------------------------------------------------------------------

$query = New-RscQueryVcenter -Op HotAddBandwidth
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVcenter.HotAddBandwidth" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVcenter.HotAddBandwidth" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVcenter.HotAddBandwidth" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVcenter -Operation HotAddBandwidth
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVcenter -Op HotAddNetwork
# -------------------------------------------------------------------

$query = New-RscQueryVcenter -Op HotAddNetwork
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVcenter.HotAddNetwork" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVcenter.HotAddNetwork" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVcenter.HotAddNetwork" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVcenter -Operation HotAddNetwork
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVcenter -Op HotAddProxy
# -------------------------------------------------------------------

$query = New-RscQueryVcenter -Op HotAddProxy
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVcenter.HotAddProxy" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVcenter.HotAddProxy" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVcenter.HotAddProxy" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVcenter -Operation HotAddProxy
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVcenter -Op HotAddProxyVmsV2
# -------------------------------------------------------------------

$query = New-RscQueryVcenter -Op HotAddProxyVmsV2
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVcenter.HotAddProxyVmsV2" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVcenter.HotAddProxyVmsV2" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVcenter.HotAddProxyVmsV2" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVcenter -Operation HotAddProxyVmsV2
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVcenter -Op List
# -------------------------------------------------------------------

$query = New-RscQueryVcenter -Op List
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVcenter.List" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVcenter.List" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVcenter.List" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVcenter -Operation List
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVcenter -Op Networks
# -------------------------------------------------------------------

$query = New-RscQueryVcenter -Op Networks
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVcenter.Networks" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVcenter.Networks" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVcenter.Networks" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVcenter -Operation Networks
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVcenter -Op NumProxiesNeeded
# -------------------------------------------------------------------

$query = New-RscQueryVcenter -Op NumProxiesNeeded
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVcenter.NumProxiesNeeded" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVcenter.NumProxiesNeeded" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVcenter.NumProxiesNeeded" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVcenter -Operation NumProxiesNeeded
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVcenter -Op PreAddInfo
# -------------------------------------------------------------------

$query = New-RscQueryVcenter -Op PreAddInfo
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVcenter.PreAddInfo" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVcenter.PreAddInfo" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVcenter.PreAddInfo" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVcenter -Operation PreAddInfo
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVcenter -Op Vcenter
# -------------------------------------------------------------------

$query = New-RscQueryVcenter -Op Vcenter
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVcenter.Vcenter" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVcenter.Vcenter" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVcenter.Vcenter" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVcenter -Operation Vcenter
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryVmware -Op CdpStateInfos
# -------------------------------------------------------------------

$query = New-RscQueryVmware -Op CdpStateInfos
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVmware.CdpStateInfos" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVmware.CdpStateInfos" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVmware.CdpStateInfos" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVmware -Operation CdpStateInfos
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVmware -Op IsManagementEnabled
# -------------------------------------------------------------------

$query = New-RscQueryVmware -Op IsManagementEnabled
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVmware.IsManagementEnabled" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVmware.IsManagementEnabled" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVmware.IsManagementEnabled" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVmware -Operation IsManagementEnabled
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVmware -Op MissedRecoverableRanges
# -------------------------------------------------------------------

$query = New-RscQueryVmware -Op MissedRecoverableRanges
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVmware.MissedRecoverableRanges" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVmware.MissedRecoverableRanges" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVmware.MissedRecoverableRanges" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVmware -Operation MissedRecoverableRanges
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVmware -Op RecoverableRanges
# -------------------------------------------------------------------

$query = New-RscQueryVmware -Op RecoverableRanges
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVmware.RecoverableRanges" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVmware.RecoverableRanges" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVmware.RecoverableRanges" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVmware -Operation RecoverableRanges
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryVsphere -Op ComputeCluster
# -------------------------------------------------------------------

$query = New-RscQueryVsphere -Op ComputeCluster
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphere.ComputeCluster" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphere.ComputeCluster" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphere.ComputeCluster" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphere -Operation ComputeCluster
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVsphere -Op ComputeClusters
# -------------------------------------------------------------------

$query = New-RscQueryVsphere -Op ComputeClusters
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphere.ComputeClusters" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphere.ComputeClusters" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphere.ComputeClusters" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphere -Operation ComputeClusters
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVsphere -Op Datacenter
# -------------------------------------------------------------------

$query = New-RscQueryVsphere -Op Datacenter
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphere.Datacenter" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphere.Datacenter" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphere.Datacenter" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphere -Operation Datacenter
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVsphere -Op Datastore
# -------------------------------------------------------------------

$query = New-RscQueryVsphere -Op Datastore
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphere.Datastore" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphere.Datastore" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphere.Datastore" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphere -Operation Datastore
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVsphere -Op DatastoreCluster
# -------------------------------------------------------------------

$query = New-RscQueryVsphere -Op DatastoreCluster
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphere.DatastoreCluster" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphere.DatastoreCluster" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphere.DatastoreCluster" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphere -Operation DatastoreCluster
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVsphere -Op DatastoreClusters
# -------------------------------------------------------------------

$query = New-RscQueryVsphere -Op DatastoreClusters
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphere.DatastoreClusters" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphere.DatastoreClusters" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphere.DatastoreClusters" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphere -Operation DatastoreClusters
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVsphere -Op DatastoreList
# -------------------------------------------------------------------

$query = New-RscQueryVsphere -Op DatastoreList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphere.DatastoreList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphere.DatastoreList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphere.DatastoreList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphere -Operation DatastoreList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVsphere -Op Folder
# -------------------------------------------------------------------

$query = New-RscQueryVsphere -Op Folder
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphere.Folder" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphere.Folder" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphere.Folder" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphere -Operation Folder
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVsphere -Op Folders
# -------------------------------------------------------------------

$query = New-RscQueryVsphere -Op Folders
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphere.Folders" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphere.Folders" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphere.Folders" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphere -Operation Folders
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVsphere -Op Host
# -------------------------------------------------------------------

$query = New-RscQueryVsphere -Op Host
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphere.Host" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphere.Host" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphere.Host" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphere -Operation Host
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVsphere -Op HostDetails
# -------------------------------------------------------------------

$query = New-RscQueryVsphere -Op HostDetails
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphere.HostDetails" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphere.HostDetails" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphere.HostDetails" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphere -Operation HostDetails
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVsphere -Op HostList
# -------------------------------------------------------------------

$query = New-RscQueryVsphere -Op HostList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphere.HostList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphere.HostList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphere.HostList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphere -Operation HostList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVsphere -Op HostsByFids
# -------------------------------------------------------------------

$query = New-RscQueryVsphere -Op HostsByFids
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphere.HostsByFids" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphere.HostsByFids" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphere.HostsByFids" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphere -Operation HostsByFids
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVsphere -Op LiveMounts
# -------------------------------------------------------------------

$query = New-RscQueryVsphere -Op LiveMounts
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphere.LiveMounts" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphere.LiveMounts" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphere.LiveMounts" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphere -Operation LiveMounts
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVsphere -Op Mount
# -------------------------------------------------------------------

$query = New-RscQueryVsphere -Op Mount
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphere.Mount" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphere.Mount" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphere.Mount" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphere -Operation Mount
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVsphere -Op MountList
# -------------------------------------------------------------------

$query = New-RscQueryVsphere -Op MountList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphere.MountList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphere.MountList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphere.MountList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphere -Operation MountList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVsphere -Op Network
# -------------------------------------------------------------------

$query = New-RscQueryVsphere -Op Network
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphere.Network" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphere.Network" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphere.Network" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphere -Operation Network
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVsphere -Op ResourcePool
# -------------------------------------------------------------------

$query = New-RscQueryVsphere -Op ResourcePool
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphere.ResourcePool" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphere.ResourcePool" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphere.ResourcePool" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphere -Operation ResourcePool
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVsphere -Op RootRecoveryHierarchy
# -------------------------------------------------------------------

$query = New-RscQueryVsphere -Op RootRecoveryHierarchy
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphere.RootRecoveryHierarchy" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphere.RootRecoveryHierarchy" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphere.RootRecoveryHierarchy" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphere -Operation RootRecoveryHierarchy
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVsphere -Op Tag
# -------------------------------------------------------------------

$query = New-RscQueryVsphere -Op Tag
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphere.Tag" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphere.Tag" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphere.Tag" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphere -Operation Tag
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVsphere -Op TagCategory
# -------------------------------------------------------------------

$query = New-RscQueryVsphere -Op TagCategory
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphere.TagCategory" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphere.TagCategory" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphere.TagCategory" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphere -Operation TagCategory
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVsphere -Op TopLevelDescendantsList
# -------------------------------------------------------------------

$query = New-RscQueryVsphere -Op TopLevelDescendantsList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphere.TopLevelDescendantsList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphere.TopLevelDescendantsList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphere.TopLevelDescendantsList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphere -Operation TopLevelDescendantsList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVsphere -Op VmsByFids
# -------------------------------------------------------------------

$query = New-RscQueryVsphere -Op VmsByFids
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphere.VmsByFids" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphere.VmsByFids" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphere.VmsByFids" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphere -Operation VmsByFids
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVsphere -Op VmwareCdpLiveInfo
# -------------------------------------------------------------------

$query = New-RscQueryVsphere -Op VmwareCdpLiveInfo
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphere.VmwareCdpLiveInfo" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphere.VmwareCdpLiveInfo" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphere.VmwareCdpLiveInfo" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphere -Operation VmwareCdpLiveInfo
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryVsphereVm -Op AsyncRequestStatus
# -------------------------------------------------------------------

$query = New-RscQueryVsphereVm -Op AsyncRequestStatus
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphereVm.AsyncRequestStatus" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphereVm.AsyncRequestStatus" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphereVm.AsyncRequestStatus" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphereVm -Operation AsyncRequestStatus
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVsphereVm -Op MissedRecoverableRange
# -------------------------------------------------------------------

$query = New-RscQueryVsphereVm -Op MissedRecoverableRange
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphereVm.MissedRecoverableRange" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphereVm.MissedRecoverableRange" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphereVm.MissedRecoverableRange" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphereVm -Operation MissedRecoverableRange
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVsphereVm -Op New
# -------------------------------------------------------------------

$query = New-RscQueryVsphereVm -Op New
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphereVm.New" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphereVm.New" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphereVm.New" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphereVm -Operation New
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVsphereVm -Op NewList
# -------------------------------------------------------------------

$query = New-RscQueryVsphereVm -Op NewList
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphereVm.NewList" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphereVm.NewList" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphereVm.NewList" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphereVm -Operation NewList
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVsphereVm -Op RecoverableRange
# -------------------------------------------------------------------

$query = New-RscQueryVsphereVm -Op RecoverableRange
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphereVm.RecoverableRange" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphereVm.RecoverableRange" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphereVm.RecoverableRange" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphereVm -Operation RecoverableRange
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}

# -------------------------------------------------------------------
# New-RscQueryVsphereVm -Op RecoverableRangeInBatch
# -------------------------------------------------------------------

$query = New-RscQueryVsphereVm -Op RecoverableRangeInBatch
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryVsphereVm.RecoverableRangeInBatch" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryVsphereVm.RecoverableRangeInBatch" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryVsphereVm.RecoverableRangeInBatch" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryVsphereVm -Operation RecoverableRangeInBatch
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


# -------------------------------------------------------------------
# New-RscQueryWebhook -Op Webhook
# -------------------------------------------------------------------

$query = New-RscQueryWebhook -Op Webhook
if ($GetGqlRequest) {
    $query.GqlRequest().SaveQueryToFile()
} elseif ($FieldCounts) {
    if ( $query.Field -eq $null ) {
        $entries += @{
            Operation="New-RscQueryWebhook.Webhook" ;
            AllFieldsCount = -2 ; 
            SelectedFieldsCount = -2
        }
    } elseif ( $query.Field | Get-Member -MemberType Method -Name 'AllFields') {
        $entries += @{
            Operation="New-RscQueryWebhook.Webhook" ;
            AllFieldsCount = $query.Field.AllFields().Count ; 
            SelectedFieldsCount = $query.Field.SelectedFields().Count
        }
    } else {
        $entries += @{
            Operation="New-RscQueryWebhook.Webhook" ;
            AllFieldsCount = -1 ; 
            SelectedFieldsCount = -1
        }
    }
} else {
    $query = New-RscQueryWebhook -Operation Webhook
    $query.Info()
    $query.Example()
    $query.GqlRequest($false)
    $query.ToString()
    $query.Var.Info()
    $query.Var.Example()
    $query.Var.ToString()

    # Test that a given GraphQL field only shows up once in all commands
    $gqlField = $query.OpInfo().GqlRootFieldName
    # Check if it is already a key in the Hashtable
    if ($gqlFieldsTable.ContainsKey($gqlField)) {
        throw "Duplicate GraphQL field detected: $gqlField. It was previously encountered in: $($gqlFieldsTable[$gqlField])"
    } else {
        $gqlFieldsTable[$gqlField] = $query.OpInfo().CmdletName
    }
}


if ($entries.Count -gt 0) {
    $results = $entries | ForEach-Object {
        [PSCustomObject]@{
            Operation           = $_.Operation
            AllFieldsCount      = $_.AllFieldsCount
            SelectedFieldsCount = $_.SelectedFieldsCount
        }
    }
    $results
}